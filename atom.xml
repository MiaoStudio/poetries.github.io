<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Poetry&#39;s Blog</title>
  <subtitle>Choose a gesture to allow yourself to live irreplaceable.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.poetries.top/"/>
  <updated>2016-11-26T10:58:54.806Z</updated>
  <id>http://www.poetries.top/</id>
  
  <author>
    <name>Poetry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ajax总结篇</title>
    <link href="http://www.poetries.top/2016/11/26/Ajax-summary/"/>
    <id>http://www.poetries.top/2016/11/26/Ajax-summary/</id>
    <published>2016-11-26T06:35:24.000Z</published>
    <updated>2016-11-26T10:58:54.806Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文出处 <a href="http://blog.poetries.top/2016/11/26/Ajax-summary" target="_blank" rel="external">http://blog.poetries.top/2016/11/26/Ajax-summary</a></p>
</blockquote>
<p>本文主要总结整理<code>Ajax</code>的一些常用的基础知识，适合初学者。</p>
<h3 id="一、Ajax简介、优劣势、应用场景以及技术"><a href="#一、Ajax简介、优劣势、应用场景以及技术" class="headerlink" title="一、Ajax简介、优劣势、应用场景以及技术"></a>一、Ajax简介、优劣势、应用场景以及技术</h3><hr>
<ul>
<li>Ajax简介 :<ul>
<li><code>Asynchronous Javascript And XML</code> （异步的<br><code>JavaScript</code>和<code>XML</code>）</li>
<li>它并不是一种单一的技术，而是有机利用一系列交互式网页应用相关的技术所形成的结合体</li>
<li><code>AJAX</code> 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，<code>AJAX</code> 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<a id="more"></a></li>
</ul>
</li>
<li><p>优点：</p>
<ul>
<li>页面无刷新，用户体验好。</li>
<li>异步通信，更加快的响应能力。</li>
<li>减少冗余请求，减轻了服务器负担</li>
<li>基于标准化的并被广泛支持的技术，不需要下载插件或者小程序</li>
</ul>
</li>
<li><p>缺点：</p>
<ul>
<li><code>ajax</code>干掉了<code>back</code>按钮，即对浏览器后退机制的破坏。</li>
<li>存在一定的安全问题。</li>
<li>对搜索引擎的支持比较弱。</li>
<li>破坏了程序的异常机制。</li>
<li>无法用<code>URL</code>直接访问</li>
</ul>
</li>
<li><p><code>ajax</code>应用场景</p>
<ul>
<li>场景 1. 数据验证</li>
<li>场景 2. 按需取数据</li>
<li>场景 3. 自动更新页面</li>
</ul>
</li>
<li><p><code>ajax</code>所包含的技术</p>
<ul>
<li><code>ajax</code>并非一种新的技术，而是几种原有技术的结合体。它由下列技术组合而成。</li>
<li>使用<code>CSS</code>和<code>XHTML</code>来表示。</li>
<li>使用<code>DOM</code>模型来交互和动态显示。</li>
<li>使用<code>XMLHttpRequest</code>来和服务器进行异步通信。</li>
<li>使用<code>javascript</code>来绑定和调用。</li>
</ul>
</li>
</ul>
<p>在上面几中技术中，除了<code>XmlHttpRequest</code>对象以外，其它所有的技术都是基于<code>web</code>标准并且已经得到了广泛使用的，<code>XMLHttpRequest</code>虽然目前还没有被<code>W3C</code>所采纳，但是它已经是一个事实的标准，因为目前几乎所有的主流浏览器都支持它</p>
<h3 id="二、创建ajax的步骤"><a href="#二、创建ajax的步骤" class="headerlink" title="二、创建ajax的步骤"></a>二、创建ajax的步骤</h3><hr>
<blockquote>
<p><code>Ajax</code>的原理简单来说通过<code>XmlHttpRequest</code>对象来向服务器发异步请求，从服务器获得数据，然后用<code>javascript</code>来操作<code>DOM</code>而更新页面。这其中最关键的一步就是从服务器获得请求数据。原生创建<code>ajax</code>可分为以下四步</p>
</blockquote>
<h4 id="1、创建XMLHttpRequest对象"><a href="#1、创建XMLHttpRequest对象" class="headerlink" title="1、创建XMLHttpRequest对象"></a>1、创建<code>XMLHttpRequest</code>对象</h4><hr>
<p><code>Ajax</code>的核心是<code>XMLHttpRequest</code>对象，它是<code>Ajax</code>实现的关键，发送异步请求、接受响应以及执行回调都是通过它来完成</p>
<p>所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。</p>
<ul>
<li><p>创建 <code>XMLHttpRequest</code>对象的语法：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div></pre></td></tr></table></figure>
</li>
<li><p>老版本的 <code>Internet Explorer</code>（IE5 和 IE6）使用<code>ActiveX</code> 对象：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<p>为了应对所有的现代浏览器，包括 <code>IE5</code> 和 <code>IE6</code>，请检查浏览器是否支持 <code>XMLHttpRequest</code>对象。如果支持，则创建<code>XMLHttpRequest</code>对象。如果不支持，则创建<code>ActiveXObject</code>：</p>
<ul>
<li>兼容各个浏览器的创建<code>Ajax</code>的工具函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRequest</span> (<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">	&#125;<span class="keyword">catch</span> (tryMS)&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Msxm12.XMLHTTP"</span>);</div><div class="line">		&#125; <span class="keyword">catch</span> (otherMS) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">			&#125;<span class="keyword">catch</span> (failed) &#123;</div><div class="line">				xhr = <span class="literal">null</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> xhr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="2、准备请求"><a href="#2、准备请求" class="headerlink" title="2、准备请求"></a>2、准备请求</h4><hr>
<ul>
<li><p>初始化该<code>XMLHttpRequest</code>对象，接受三个参数：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.open(method,url,<span class="keyword">async</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>第一个参数表示请求类型的字符串，其值可以是<code>GET</code>或者<code>POST</code>。</p>
</li>
<li><p><code>GET</code>请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"GET"</span>,demo.php?name=tsrot&amp;age=<span class="number">24</span>,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
</li>
<li><p><code>POST</code>请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"POST"</span>,demo.php,<span class="literal">true</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>第二个参数是要作为请求发送目标的URL。</p>
</li>
<li>第三个参数是<code>true</code>或<code>false</code>，表示请求是以异步还是同步的模式发出。（默认为<code>true</code>，一般不建议为<code>false</code>）<ul>
<li><code>false</code>：同步模式发出的请求会暂停所有javascript代码的执行，知道服务器获得响应为止，如果浏览器在连接网络时或者在下载文件时出了故障，页面就会一直挂起。 </li>
<li><code>true</code>：异步模式发出的请求，请求对象收发数据的同时，浏览器可以继续加载页面，执行其他javascript代码</li>
</ul>
</li>
</ul>
<h4 id="3、发送请求"><a href="#3、发送请求" class="headerlink" title="3、发送请求"></a>3、发送请求</h4><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xhr.send();</div></pre></td></tr></table></figure>
<p>一般情况下，使用<code>Ajax</code>提交的参数多是些简单的字符串，可以直接使用<code>GET</code>方法将要提交的参数写到<code>open</code>方法的<code>url</code>参数中，此时<code>send</code>方法的参数为<code>null</code>或为空。</p>
<ul>
<li><p><code>GET</code>请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"GET"</span>,demo.php?name=tsrot&amp;age=<span class="number">24</span>,<span class="literal">true</span>);</div><div class="line">xhr.send(<span class="literal">null</span>);</div></pre></td></tr></table></figure>
</li>
<li><p><code>POST</code>请求：<br>如果需要像 <code>HTML</code> 表单那样 <code>POST</code> 数据，请使用 <code>setRequestHeader()</code>来添加 <code>HTTP</code> 头。然后在<code>send()</code>方法中规定您希望发送的数据：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhr.open(<span class="string">"POST"</span>,demo.php,<span class="literal">true</span>);</div><div class="line">xhr.setRequestHeder(<span class="string">"Content-Type"</span>,<span class="string">"application/x-www-form-urlencoded;charset=UTF-8"</span>);</div><div class="line">xhr.sen</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4、处理响应"><a href="#4、处理响应" class="headerlink" title="4、处理响应"></a>4、处理响应</h4><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>)&#123;</div><div class="line">		<span class="built_in">console</span>.log(xhr.responseText);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>onreadystatechange</code> ：当处理过程发生变化的时候执行下面的函数</p>
</li>
<li><p><code>readyState</code> ：<code>ajax</code>处理过程</p>
<ul>
<li>0：请求未初始化（还没有调用 <code>open()</code>）。</li>
<li>1：请求已经建立，但是还没有发送（还没有调用 <code>send()</code>）。</li>
<li>2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。</li>
<li>3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。</li>
<li>4：响应已完成；您可以获取并使用服务器的响应了。</li>
</ul>
</li>
<li><p><code>status</code>属性：</p>
<ul>
<li>200:”OK”</li>
<li>404: 未找到页面</li>
</ul>
</li>
<li><p><code>responseText</code>：获得字符串形式的响应数据</p>
</li>
<li><code>responseXML</code>：获得 <code>XML</code>形式的响应数据</li>
<li>返回值一般为<code>json</code>字符串，可以用<code>JSON.parse(xhr.responseText)</code>转化为<code>JSON</code>对象</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-ae7614423c64ebb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTTP状态码"></p>
<h4 id="5、完整例子"><a href="#5、完整例子" class="headerlink" title="5、完整例子"></a>5、完整例子</h4><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr;</div><div class="line"><span class="keyword">if</span>(XMLHttpRequest)&#123;</div><div class="line">	xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">	xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">xhr.open(<span class="string">"GET"</span>,<span class="string">"./data.json"</span>,<span class="literal">true</span>);</div><div class="line">xhr.send();</div><div class="line"></div><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>)&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(xhr.responseText).name);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>data.json</code></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="attr">"name"</span>:<span class="string">"tsrot"</span>,</div><div class="line">	<span class="attr">"age"</span>:<span class="number">24</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>这个过程是一定要记在脑子里的</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">url, success, fail</span>)</span>&#123;</div><div class="line">    <span class="comment">// 1. 创建连接</span></div><div class="line">    <span class="keyword">var</span> xhr = <span class="literal">null</span>;</div><div class="line">    xhr = <span class="keyword">new</span> XMLHttpRequest()</div><div class="line">    <span class="comment">// 2. 连接服务器</span></div><div class="line">    xhr.open(<span class="string">'get'</span>, url, <span class="literal">true</span>)</div><div class="line">    <span class="comment">// 3. 发送请求</span></div><div class="line">    xhr.send(<span class="literal">null</span>);</div><div class="line">    <span class="comment">// 4. 接受请求</span></div><div class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(xhr.status == <span class="number">200</span>)&#123;</div><div class="line">                success(xhr.responseText);</div><div class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// fail</span></div><div class="line">                fail &amp;&amp; fail(xhr.status);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="三、-jQuery中的Ajax"><a href="#三、-jQuery中的Ajax" class="headerlink" title="三、 jQuery中的Ajax"></a>三、 jQuery中的Ajax</h3><hr>
<ul>
<li>jQuery中的<code>ajax</code>封装案例</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//ajax请求后台数据</span></div><div class="line"><span class="keyword">var</span> btn =  <span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</div><div class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	</div><div class="line">	ajax(&#123;<span class="comment">//json格式</span></div><div class="line">		type:<span class="string">"post"</span>,</div><div class="line">		<span class="attr">url</span>:<span class="string">"post.php"</span>,</div><div class="line">		<span class="attr">data</span>:<span class="string">"username=poetries&amp;pwd=123456"</span>,</div><div class="line">		<span class="attr">asyn</span>:<span class="literal">true</span>,</div><div class="line">		<span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">			<span class="built_in">document</span>.write(data);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">//封装ajax</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">aJson</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> ajx = <span class="literal">null</span>;</div><div class="line">	<span class="keyword">var</span> type = aJson.type || <span class="string">"get"</span>;</div><div class="line">	<span class="keyword">var</span> asyn = aJson.asyn || <span class="literal">true</span>;</div><div class="line">	<span class="keyword">var</span> url = aJson.url;		<span class="comment">// url 接收 传输位置</span></div><div class="line">	<span class="keyword">var</span> success = aJson.success;<span class="comment">// success 接收 传输完成后的回调函数</span></div><div class="line">	<span class="keyword">var</span> data = aJson.data || <span class="string">''</span>;<span class="comment">// data 接收需要附带传输的数据</span></div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;<span class="comment">//兼容处理</span></div><div class="line">		ajx = <span class="keyword">new</span> XMLHttpRequest();<span class="comment">//一般浏览器</span></div><div class="line">	&#125;<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		ajx = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);<span class="comment">//IE6+</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (type == <span class="string">"get"</span> &amp;&amp; data)</div><div class="line">	&#123;</div><div class="line">		url +=<span class="string">"/?"</span>+data+<span class="string">"&amp;"</span>+<span class="built_in">Math</span>.random();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//初始化ajax请求</span></div><div class="line">	ajx.open( type , url , asyn );</div><div class="line">	<span class="comment">//规定传输数据的格式</span></div><div class="line">	ajx.setRequestHeader(<span class="string">'content-type'</span>,<span class="string">'application/x-www-form-urlencoded'</span>);</div><div class="line">	<span class="comment">//发送ajax请求（包括post数据的传输）</span></div><div class="line">	type == <span class="string">"get"</span> ?ajx.send():ajx.send(aJson.data);</div><div class="line">	</div><div class="line">	<span class="comment">//处理请求</span></div><div class="line">	ajx.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params">aJson</span>)</span>&#123;</div><div class="line">		</div><div class="line">	<span class="keyword">if</span>(ajx.readState == <span class="number">4</span>)&#123;</div><div class="line">			</div><div class="line">		<span class="keyword">if</span> (ajx.status == <span class="number">200</span> &amp;&amp; ajx.status&lt;<span class="number">300</span>)<span class="comment">//200是HTTP 请求成功的状态码</span></div><div class="line">		&#123;</div><div class="line">			<span class="comment">//请求成功处理数据</span></div><div class="line">			success &amp;&amp; success(ajx.responseText);</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			alert(<span class="string">"请求出错"</span>+ajx.status);</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h4 id="jQuery中的Ajax"><a href="#jQuery中的Ajax" class="headerlink" title="jQuery中的Ajax"></a>jQuery中的Ajax</h4><hr>
<p><code>jquery</code>对<code>Ajax</code>操作进行了封装，在<code>jquery</code>中的<code>$.ajax()</code>方法属于最底层的方法，第<code>2</code>层是<code>load()</code>、<code>$.get()</code>、<code>$.post();</code>第<code>3</code>层是<code>$.getScript()</code>、<code>$.getJSON()</code>，第<code>2</code>层使用频率很高 </p>
<h5 id="load-方法"><a href="#load-方法" class="headerlink" title="load()方法"></a><code>load()</code>方法</h5><hr>
<ul>
<li><code>load()</code>方法是<code>jquery</code>中最简单和常用的<code>ajax</code>方法，能载入远程<code>HTML</code>代码并插入<code>DOM</code>中 结构为：<code>load(url,[data],[callback])</code><ul>
<li>使用<code>url</code>参数指定选择符可以加载页面内的某些元素 <code>load</code>方法中<code>url</code>语法：<code>url selector</code> 注意：<code>url</code>和选择器之间有一个空格</li>
</ul>
</li>
<li>传递方式<ul>
<li><code>load()</code>方法的传递方式根据参数<code>data</code>来自动指定，如果没有参数传递，则采用<code>GET</code>方式传递，反之，采用<code>POST</code></li>
</ul>
</li>
<li>回调参数<ul>
<li>必须在加载完成后才执行的操作，该函数有三个参数 分别代表请求返回的内容、请求状态、<code>XMLHttpRequest</code>对象</li>
<li>只要请求完成，回调函数就会被触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#testTest"</span>).load(<span class="string">"test.html"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">responseText,textStatus,XMLHttpRequest</span>)</span>&#123;</div><div class="line">    <span class="comment">//respnoseText 请求返回的内容</span></div><div class="line">    <span class="comment">//textStatus 请求状态 ：sucess、error、notmodified、timeout</span></div><div class="line">    <span class="comment">//XMLHttpRequest </span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><strong>load方法参数</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数名称</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>请求<code>HTML</code>页面的<code>URL</code>地址</td>
</tr>
<tr>
<td><code>data(可选)</code></td>
<td><code>Object</code></td>
<td>发送至服务器的<code>key</code> / <code>value</code>数据</td>
</tr>
<tr>
<td><code>callback(可选)</code></td>
<td><code>Function</code></td>
<td>请求完成时的回调函数，无论是请求成功还是失败</td>
</tr>
</tbody>
</table>
<h5 id="get-和-post-方法"><a href="#get-和-post-方法" class="headerlink" title="$.get()和$.post()方法"></a><code>$.get()</code>和<code>$.post()</code>方法</h5><hr>
<p><code>load()</code>方法通常用来从web服务器上获取静态的数据文件。在项目中需要传递一些参数给服务器中的页面，那么可以使用<code>$.get()</code>和<code>$.post()</code>或<code>$.ajax()</code>方法</p>
<ul>
<li><p>注意：<code>$.get()</code>和<code>$.post()</code>方法是<code>jquery</code>中的全局函数</p>
</li>
<li><p><strong>$.get()方法</strong></p>
<ul>
<li><code>$.get()</code>方法使用<code>GET</code>方式来进行异步请求</li>
<li>结构为：<code>$.get(url,[data],callback,type)</code><ul>
<li>如果服务器返回的内容格式是<code>xml</code>文档，需要在服务器端设置<code>Content-Type</code>类型 代码如下：<code>header(&quot;Content-Type:text/xml:charset=utf-8&quot;)</code> //<code>php</code></li>
</ul>
</li>
</ul>
</li>
<li><strong><code>$.get()</code>方法参数解析</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>请求<code>HTML</code>页的地址</td>
</tr>
<tr>
<td><code>data(可选)</code></td>
<td><code>Object</code></td>
<td>发送至服务器的<code>key</code>/ <code>value</code> 数据会作为<code>QueryString</code>附加到请求URL中</td>
</tr>
<tr>
<td><code>callback(可选)</code></td>
<td><code>Function</code></td>
<td>载入成功的回调函数（只有当<code>Response</code>的返回状态是success才调用该方法）</td>
</tr>
<tr>
<td><code>type(可选)</code></td>
<td><code>String</code></td>
<td>服务器返回内容的格式，包括<code>xml</code>、<code>html</code>、<code>script</code>、<code>json</code>、<code>text</code>和<code>_default</code></td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong>$.post()方法</strong></p>
<ul>
<li>它与<code>$.get()</code>方法的结构和使用方式相同，有如下区别<ul>
<li><code>GET</code>请求会将参数跟张乃URL后进行传递，而<code>POST</code>请求则是作为<code>Http</code>消息的实体内容发送给web服务器，在<code>ajax</code>请求中，这种区别对用户不可见<ul>
<li><code>GET</code>方式对传输数据有大小限制（通常不能大于<code>2KB</code>），而使用<code>POST</code>方式传递的数据量要比<code>GET</code>方式大得多（理论不受限制）</li>
<li><code>GET</code>方式请求的数据会被浏览器缓存起来，因此其他人可以从浏览器的历史纪录中读取这些数据，如：账号、密码。在某种情况下，<code>GET</code>方式会带来严重的安全问题，而<code>POST</code>相对来说可以避免这些问题</li>
<li><code>GET</code>和<code>POST</code>方式传递的数据在服务端的获取也不相同。在<code>PHP</code>中，<code>GET</code>方式用<code>$_GET[]</code>获取；<code>POST</code>方式用<code>$_POST[]</code>获取;两种方式都可用<code>$_REQUEST[]</code>来获取 </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>总结</strong></p>
<ul>
<li>使用<code>load()</code>、<code>$.get()</code>和<code>$.post()</code>方法完成了一些常规的<code>Ajax</code>程序，如果还需要复杂的<code>Ajax</code>程序，就需要用到<code>$.ajax()</code>方式</li>
</ul>
</li>
</ul>
<h5 id="ajax-方法"><a href="#ajax-方法" class="headerlink" title="$.ajax()方法"></a>$.ajax()方法</h5><hr>
<ul>
<li><code>$.ajax()</code>方法是<code>jquery</code>最底层的<code>Ajax</code>实现，它的结构为<code>$.ajax(options)</code></li>
<li>该方法只有一个参数，但在这个对象里包含了<code>$.ajax()</code>方式所需要的请求设置以及回调函等信息，参数以<code>key</code> / <code>value</code>存在，所有参数都是可选的</li>
<li><strong>$.ajax()方式常用参数解析</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>(默认为当前页地址)发送请求的地址</td>
</tr>
<tr>
<td><code>type</code></td>
<td><code>String</code></td>
<td>请求方式（<code>POST</code>或<code>GET</code>）默认为<code>GET</code></td>
</tr>
<tr>
<td><code>timeout</code></td>
<td><code>Number</code></td>
<td>设置请求超时时间（毫秒）</td>
</tr>
<tr>
<td><code>dataType</code></td>
<td><code>String</code></td>
<td>预期服务器返回的类型。可用的类型如下<br><br> <strong>xml</strong>:返回<code>XML</code>文档，可用<code>jquery</code>处理<br><strong>html</strong>:返回纯文本的<code>HTML</code>信息，包含的<code>script</code>标签也会在插入<code>DOM</code>时执行<br><strong>script</strong>：返回纯文本的<code>javascript</code>代码。不会自动缓存结果，除非设置<code>cache</code>参数。注意：在远程请求时，所有的<code>POST</code>请求都将转为<code>GET</code>请求<br><strong>json</strong>:返回<code>JSON</code>数据<br><strong>jsonp</strong>:<code>JSONP</code>格式，使用<code>jsonp</code>形式调用函数时，例如：<code>myurl?call back=?,jquery</code>将自动替换后一个<code>？</code>为正确的函数名，以执行回调函数<br><strong>text</strong>:返回纯文本字符串</td>
</tr>
<tr>
<td><code>beforeSend</code></td>
<td><code>Function</code></td>
<td>发送请求前可以修改<code>XMLHttpRequest</code>对象的函数，例如添加自定义<code>HTTP</code>头。在<code>beforeSend</code>中如果返回<code>false</code>可以取消本次<code>Ajax</code>请求。<code>XMLHttpRequest</code>对象是唯一的参数<br> function(XMLHttpRequest){<br>          <code>this</code>;//调用本次<code>Ajax</code>请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>complete</code></td>
<td><code>Function</code></td>
<td>请求完成后的回调函数（请求成功或失败时都调用）<br> 参数：<code>XMLHttpRequest</code>对象和一个描述成功请求类型的字符串<br>function(XMLHttpRequest,textStatus){<br>         <code>this</code>;//调用本次Ajax请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>success</code></td>
<td><code>Function</code></td>
<td>请求成功后调用的回调函数，有两个参数<br>(1)由服务器返回，并根据<code>dataTyppe</code>参数进行处理后的数据<br>(2)描述状态的字符串<br><code>function</code>(data,textStatus){<br>         //<code>data</code>可能是<code>xmlDoc、``jsonObj</code>、<code>html</code>、<code>text</code>等<br>         <code>this</code>;//调用本次<code>Ajax</code>请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>error</code></td>
<td><code>Function</code></td>
<td>请求失败时被调用的函数</td>
</tr>
<tr>
<td><code>global</code></td>
<td><code>Boolean</code></td>
<td>默认为<code>true</code>。表示是否触发全局<code>Ajax</code>事件，设置为<code>false</code>将不会触发。<code>AjaxStart</code>或<code>AjaxStop</code>可用于控制各种<code>Ajax</code>事件</td>
</tr>
</tbody>
</table>
<ul>
<li>参考<ul>
<li>锋利的<code>jQuery</code></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文出处 &lt;a href=&quot;http://blog.poetries.top/2016/11/26/Ajax-summary&quot;&gt;http://blog.poetries.top/2016/11/26/Ajax-summary&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文主要总结整理&lt;code&gt;Ajax&lt;/code&gt;的一些常用的基础知识，适合初学者。&lt;/p&gt;
&lt;h3 id=&quot;一、Ajax简介、优劣势、应用场景以及技术&quot;&gt;&lt;a href=&quot;#一、Ajax简介、优劣势、应用场景以及技术&quot; class=&quot;headerlink&quot; title=&quot;一、Ajax简介、优劣势、应用场景以及技术&quot;&gt;&lt;/a&gt;一、Ajax简介、优劣势、应用场景以及技术&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Ajax简介 :&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Asynchronous Javascript And XML&lt;/code&gt; （异步的&lt;br&gt;&lt;code&gt;JavaScript&lt;/code&gt;和&lt;code&gt;XML&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;它并不是一种单一的技术，而是有机利用一系列交互式网页应用相关的技术所形成的结合体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AJAX&lt;/code&gt; 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，&lt;code&gt;AJAX&lt;/code&gt; 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="Ajax" scheme="http://www.poetries.top/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>HTML5之API总结</title>
    <link href="http://www.poetries.top/2016/11/26/h5-api/"/>
    <id>http://www.poetries.top/2016/11/26/h5-api/</id>
    <published>2016-11-26T06:35:24.000Z</published>
    <updated>2016-11-26T10:58:54.814Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、Canvas-API"><a href="#一、Canvas-API" class="headerlink" title="一、Canvas API"></a>一、Canvas API</h3><hr>
<p><code>canvas API</code>是<code>H5</code>标准中最复杂的部分， 它提供几种属性和方法，可以在<code>canvas</code>元素上创建图形应用</p>
<h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><hr>
<a id="more"></a>
<p>以下方法专门用于调用canvas API</p>
<ul>
<li><p><code>getContext(context)</code>创建可绘制图形的画布上下文，接受两个值，<code>2d</code>和<code>3d</code></p>
</li>
<li><p><code>fillRect(x,y,width,height)</code>绘制实心矩形</p>
</li>
<li><p><code>strokeRect(x,y,width,height)</code>绘制矩形轮廓</p>
</li>
<li><p><code>clearRect(x,y,width,height)</code>清除画布指定区域内容</p>
</li>
<li><p><code>createLinearGradient(x1,y1,x2,y2)</code>创建一个线性渐变效果</p>
</li>
<li><p><code>createRadialGradient(x1,y1,r1,x2,y2,r2)</code>创建一个放射渐变效果</p>
</li>
<li><p><code>addColorStop(position,color)</code>用于声明渐变颜色<code>position</code>范围是<code>0.0-1.0</code> 用于确定颜色开始变化位置</p>
</li>
<li><p><code>beginPath()</code>开始一条新路径</p>
</li>
<li><p><code>closePath()</code>在路径最后实现封闭该路径，它会生成一条直线，连接笔触的最后一个位置与路径的起点。如想要保持路径开放，使用<code>fill()</code>绘图，不用这个方法</p>
</li>
<li><p><code>stroke()</code> 用于创建路径轮廓</p>
</li>
<li><p><code>fill()</code>用于绘制实心形状</p>
</li>
<li><p><code>clip()</code>用于创建一个由路径定义的裁剪区域，只有在落入形状内的内容才绘制到画布上</p>
</li>
<li><p><code>moveTo(x,y)</code>将虚拟笔触移到新位置，下一个方法会从改点的开始继续设置路径</p>
</li>
<li><p><code>lineTo(x,y)</code>在新路径上添加一条直线</p>
</li>
<li><p><code>rect(x,y,width,height)</code>在路径为<code>(x,y)</code>位置上添加<code>width</code>和<code>height</code>矩形</p>
</li>
<li><p><code>arc(x,y,radius,startAngle,endAngle,direction)</code>在路径上添加一条弧线 ,<code>x</code>,<code>y</code>指定弧线的中心，角度单位为弧度，<code>direction</code>是一个表示顺时针或逆时针的布尔值。使用公式 <code>Math.PI/180x</code>角度，将角度转换为半径</p>
</li>
<li><p><code>strokeText(text,x,y,max)</code> 直接在画布上绘制文字轮廓。可选参数，max声明文字最大尺寸</p>
</li>
<li><p><code>fillText(text,x,y,max)</code>直接在画布上绘制实心文字。可选参数，<code>max</code>声明文字最大尺寸</p>
</li>
<li><p><code>translate(x,y)</code>将画布原点移到点<code>(x,y)</code>处，原点<code>（0,0）</code>初始位置位于<code>canvas</code>所在区域的左上角</p>
</li>
<li><p><code>rorate(angle)</code>这个方法可以使画布原点为中心发生旋转，角度必须是弧度。使用公式<code>Math.PI/180x</code> 将角度转换为弧度</p>
</li>
<li><p><code>scale(x,y)</code> 改变画布比例 默认值是<code>（1.0,1.0）</code>这些值可以是负值</p>
</li>
<li><p><code>transform（m1,m2,m3,m4,dx,dy）</code>修改画布的转换矩阵。新矩阵是基于之前的矩阵得到的</p>
</li>
<li><p><code>setTransform（m1,m2,m3,m4,dx,dy）</code>修改画布的转换矩阵。重置之前的值，声明新的值</p>
</li>
<li><p><code>save()</code>保存画布状态，包括转换矩阵、样式属性、裁剪遮罩</p>
</li>
<li><p><code>restore()</code> 恢复上一次保存的状态</p>
</li>
<li><p><code>drawImage()</code> 在画布上绘制图像</p>
</li>
</ul>
<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><hr>
<p><code>canvas API</code>专用属性列表</p>
<ul>
<li><p><code>strokeStyle</code>声明形状的线条颜色，可以接受任何的<code>css</code>值，包括<code>rgb()</code>、<code>rgba()</code></p>
</li>
<li><p><code>fillStyle</code> 声明实心形状的内部颜色</p>
</li>
<li><p><code>globalAlpha</code> 设置每一个形状的透明度,接受的值0.0-1.0</p>
</li>
<li><p><code>lineWidth</code> 设置线宽 默认值1.0</p>
</li>
<li><p><code>lineCap</code>指定线条端点的形状 它支持的值有三个:butt(普通端点)、<code>round</code>（圆形端点）、<code>square</code>（正方形端点）</p>
</li>
<li><p><code>lineJoin()</code>指定两条线间的连接形状</p>
</li>
<li><p><code>font</code> 和<code>css</code>完全一致</p>
</li>
<li><p><code>textAlign</code>文字对齐方式：接受的值 <code>start end left right center</code></p>
</li>
<li><p><code>textBaseline</code>设置垂直对齐方式，值：<code>top hanging middle bottom</code></p>
</li>
<li><p><code>shadowColor</code>使用<code>css</code>语法什么阴影颜色</p>
</li>
</ul>
<h4 id="canvas常用总结"><a href="#canvas常用总结" class="headerlink" title="canvas常用总结"></a>canvas常用总结</h4><hr>
<ul>
<li>标签 <code>&lt;canvas&gt;</code><ul>
<li>不支持<code>canvas</code> 的浏览器可以看到的内容</li>
</ul>
</li>
<li><code>&lt;canvas&gt;</code> 绘制环境<ul>
<li><code>getContext(&quot;2d&quot;)</code>;目前支持<code>2d</code>的场景</li>
</ul>
</li>
</ul>
<ul>
<li>绘制矩形<ul>
<li><code>rect(L,T,W,H)</code>:创建一个矩形</li>
<li><code>fillRect(L,T,W,H)</code>:绘制填充的矩形</li>
<li><code>strokeRect(L,T,W,H)</code>绘制矩形(无填充)<ul>
<li>默认一像素黑色边框</li>
</ul>
</li>
</ul>
</li>
<li>设置绘图<ul>
<li><code>fillStyle</code>:填充颜色(绘制<code>canvas</code>是有顺序的)</li>
<li><code>lineWidth</code>:线宽度，笔迹粗细</li>
<li><code>strokeStyle</code>:边线颜色</li>
</ul>
</li>
<li><p>绘制路径</p>
<ul>
<li><code>stroke</code> ：绘制，划线(黑色默认)</li>
<li><code>fill</code> :填充(黑色默认)</li>
<li><code>rect(矩形区域)</code> </li>
<li><code>clearRect</code> 擦除一个矩形区域</li>
<li><code>save</code> 进入到XXX（高逼格）状态</li>
<li><code>restore</code> 退出xxx（高逼格）状态</li>
</ul>
</li>
<li><p>绘制圆形</p>
<ul>
<li><code>arc(x,y,半径,起始弧度,结束弧度,旋转方向)</code></li>
<li><code>x</code>，<code>y</code>起始位置</li>
<li>弧度与角度：<code>弧度=角度 x π / 180</code></li>
<li>旋转方向：顺时针（默认：<code>false</code>），逆时针（<code>true</code>）</li>
</ul>
</li>
<li><strong>绘制字体</strong><ul>
<li><code>font</code>：设置字体大小</li>
<li><code>fillText</code>：填充字体</li>
<li><code>strokeText</code>：绘制字体</li>
</ul>
</li>
</ul>
<h3 id="二、视频音频"><a href="#二、视频音频" class="headerlink" title="二、视频音频"></a>二、视频音频</h3><hr>
<ul>
<li>视频音频格式的简单介绍<ul>
<li>常见的视频格式<ul>
<li>视频的组成部分：画面、音频、编码格式</li>
<li>视频编码：H.264、Theora、VP8(google开源)</li>
</ul>
</li>
<li>常见的音频格式<ul>
<li>视频编码：ACC、MP3、Vorbis</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><code>HTML5</code>能在完全脱离插件的情况下播放音视频,但是不是所有格式都支持。</li>
<li>支持的视频格式：<ul>
<li><code>Ogg=</code>带有<code>Theora</code>视频编码<code>+Vorbis</code>音频编码的<code>Ogg</code>文件</li>
<li><code>MEPG4=</code>带有H.264视频编码<code>+AAC</code>音频编码的<code>MPEG4</code>文件</li>
<li><code>WebM=</code>带有<code>VP8</code>视频编码<code>+Vorbis</code>音频编码的<code>WebM</code>格式</li>
</ul>
</li>
</ul>
<h4 id="Video的使用"><a href="#Video的使用" class="headerlink" title="Video的使用"></a><code>Video</code>的使用</h4><hr>
<ul>
<li>单独用法<ul>
<li><code>&lt;video src=&quot;文件地址&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;</code></li>
</ul>
</li>
<li>带提示用法</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt; <span class="attr">video</span> <span class="attr">src</span>=<span class="string">"文件地址"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></div><div class="line">	您的浏览器暂不支持video标签。播放视频</div><div class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>兼容用法</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt; <span class="attr">video</span>  <span class="attr">controls</span>=<span class="string">"controls"</span>  <span class="attr">width</span>=<span class="string">"300"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"move.ogg"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span> &gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"move.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> &gt;</span></div><div class="line">	您的浏览器暂不支持video标签。播放视频</div><div class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>Video</code>的常见属性</li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Autoplay</td>
<td>Autoplay</td>
<td>视频就绪自动播放</td>
</tr>
<tr>
<td>controls</td>
<td>controls</td>
<td>向用户显示播放控件</td>
</tr>
<tr>
<td>Width</td>
<td>Pixels(像素)</td>
<td>设置播放器宽度</td>
</tr>
<tr>
<td>Height</td>
<td>Pixels(像素)</td>
<td>设置播放器高度</td>
</tr>
<tr>
<td>Loop</td>
<td>Loop</td>
<td>播放完是否继续播放该视频，循环播放</td>
</tr>
<tr>
<td>Preload</td>
<td>load{auto,meta,none}</td>
<td>规定是否预加载视频。</td>
</tr>
<tr>
<td>Src</td>
<td>url</td>
<td>视频url地址</td>
</tr>
<tr>
<td>Poster</td>
<td>Imgurl</td>
<td>加载等待的画面图片</td>
</tr>
<tr>
<td>Autobuffer</td>
<td>Autobuffer</td>
<td>设置为浏览器缓冲方式，不设置autoply才有效</td>
</tr>
</tbody>
</table>
<ul>
<li><code>Video</code>的<code>API</code>方法</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>属性</th>
<th>事件</th>
</tr>
</thead>
<tbody>
<tr>
<td>play()</td>
<td>currentSrc</td>
<td>play</td>
</tr>
<tr>
<td>pause()</td>
<td>currentTime</td>
<td>pause</td>
</tr>
<tr>
<td>load()</td>
<td>videoWidth</td>
<td>progress</td>
</tr>
<tr>
<td>canPlayType()</td>
<td>videoHeight</td>
<td>error</td>
</tr>
</tbody>
</table>
<h3 id="三、地理信息与本地存储"><a href="#三、地理信息与本地存储" class="headerlink" title="三、地理信息与本地存储"></a>三、地理信息与本地存储</h3><hr>
<h4 id="地理位置"><a href="#地理位置" class="headerlink" title="地理位置"></a>地理位置</h4><hr>
<ul>
<li>经度  :   南北极的连接线</li>
<li><p>纬度  :   东西连接的线</p>
</li>
<li><p>位置信息从何而来</p>
<ul>
<li><code>IP</code>地址</li>
<li><code>GPS</code>全球定位系统</li>
<li><code>Wi-Fi</code>无线网络</li>
<li>基站</li>
</ul>
</li>
<li><p><code>avigator.geolocation</code></p>
<ul>
<li>单次定位请求  ：<code>getCurrentPosition</code>(请求成功,请求失败,数据收集方式)</li>
<li><p>请求成功函数</p>
<ul>
<li>经度 :  <code>coords.longitude</code></li>
<li>纬度 :  <code>coords.latitude</code></li>
<li>准确度 :  <code>coords.accuracy</code></li>
<li>海拔 : <code>coords.altitude</code></li>
<li>海拔准确度 :  <code>coords.altitudeAcuracy</code></li>
<li>行进方向 :  <code>coords.heading</code></li>
<li>地面速度 :  <code>coords.speed</code></li>
<li>请求的时间: <code>new Date(position.timestamp)</code></li>
</ul>
</li>
<li><p>请求失败函数</p>
<ul>
<li>失败编号  ：<code>code</code><ul>
<li>0  :  不包括其他错误编号中的错误</li>
<li>1  :  用户拒绝浏览器获取位置信息</li>
<li>2  :  尝试获取用户信息，但失败了</li>
<li>3  :   设置了<code>timeout</code>值，获取位置超时了</li>
</ul>
</li>
</ul>
</li>
<li><p>数据收集 :  json的形式</p>
<ul>
<li><code>enableHighAcuracy</code>  :  更精确的查找，默认<code>false</code></li>
<li><code>timeout</code> :  获取位置允许最长时间，默认<code>infinity</code></li>
<li><code>maximumAge</code> :  位置可以缓存的最大时间，默认<code>0</code></li>
</ul>
</li>
<li><p>多次定位请求*  : <code>watchPosition</code></p>
<ul>
<li>移动设备有用，位置改变才会触发</li>
<li>配置参数：<code>frequency</code> 更新的频率</li>
<li>关闭更新请求  :  <code>clearWatch</code></li>
</ul>
</li>
<li><p>百度地图<code>API</code></p>
</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=qZfInp9MaT9Qa0PoNy4Rmx3Y9W9ZXMfw"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h4 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h4><hr>
<ul>
<li><p><code>Storage</code></p>
<ul>
<li><code>sessionStorage</code><ul>
<li><code>session</code>临时回话，从页面打开到页面关闭的时间段</li>
<li>窗口的临时存储，页面关闭，本地存储消失</li>
</ul>
</li>
<li><code>localStorage</code><ul>
<li>永久存储（可以手动删除数据）</li>
</ul>
</li>
</ul>
</li>
<li><p><code>Storage</code>的特点</p>
<ul>
<li>存储量限制 ( 5M )</li>
<li>客户端完成，不会请求服务器处理</li>
<li><code>sessionStorage</code>数据是不共享、 <code>localStorage</code>共享</li>
</ul>
</li>
<li><p><code>Storage API</code></p>
<ul>
<li><code>setItem()</code>:<ul>
<li>设置数据，(<code>key</code>,<code>value</code>)类型，类型都是字符串</li>
<li>可以用获取属性的形式操作</li>
</ul>
</li>
<li><code>getItem():</code><ul>
<li>获取数据，通过<code>key</code>来获取到相应的<code>value</code></li>
</ul>
</li>
<li><code>removeItem()</code>:<ul>
<li>删除数据，通过key来删除相应的<code>value</code></li>
</ul>
</li>
<li><code>clear()</code>:<ul>
<li>删除全部存储的值</li>
</ul>
</li>
</ul>
</li>
<li><p>存储事件:</p>
<ul>
<li>当数据有修改或删除的情况下，就会触发<code>storage</code>事件</li>
<li>在对数据进行改变的窗口对象上是不会触发的`</li>
<li><code>Key</code> : 修改或删除的<code>key</code>值，如果调用<code>clear()</code>,<code>key</code>为<code>null</code></li>
<li><code>newValue</code>  :  新设置的值，如果调用<code>removeStorage()</code>,<code>key</code>为<code>null</code></li>
<li><code>oldValue</code> :  调用改变前的<code>value</code>值</li>
<li><code>storageArea</code> : 当前的<code>storage</code>对象</li>
<li><code>url</code> :  触发该脚本变化的文档的url</li>
<li>注：<code>session</code>同窗口才可以,例子：<code>iframe</code>操作</li>
</ul>
</li>
</ul>
<h3 id="四、HTML5拖拽"><a href="#四、HTML5拖拽" class="headerlink" title="四、HTML5拖拽"></a>四、HTML5拖拽</h3><hr>
<ul>
<li>图片自带拖拽功能</li>
<li>其他元素可设置<code>draggable</code>属性</li>
<li><p><code>draggable ：true</code></p>
<ul>
<li>拖拽元素(被拖拽元素对象)事件 :  <ul>
<li><code>ondragstart</code> : 拖拽前触发 </li>
<li><code>ondrag</code> :拖拽前、拖拽结束之间，连续触发</li>
<li><code>ondragend</code> :拖拽结束触发</li>
</ul>
</li>
<li>目标元素(拖拽元素被拖到的对象)事件 :  <ul>
<li><code>ondragenter</code> :进入目标元素触发</li>
<li><code>ondragover</code>:进入目标、离开目标之间，连续触发</li>
<li><code>ondragleave</code> :离开目标元素触发</li>
<li><code>ondrop</code> :在目标元素上释放鼠标触发<ul>
<li>需要在<code>ondragover</code>事件里面阻止默认事件</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>拖拽兼容问题</p>
<ul>
<li><p>火狐浏览器下需设置<code>dataTransfer</code>对象才可以拖拽除图片外的其他标签</p>
<ul>
<li><code>dataTransfer</code>对象</li>
<li><code>setData()</code> : 设置数据 <code>key</code>和<code>value</code>(必须是字符串)</li>
<li><code>getData()</code> : 获取数据，根据<code>key</code>值，获取对应的<code>value</code></li>
<li><p><code>effectAllowed</code> : 设置光标样式(<code>none</code>, <code>copy</code>, <code>copyLink</code>, <code>copyMove</code>, <code>link</code>, <code>linkMove</code>,<code>move</code>, <code>all</code> 和<code>uninitialized</code>)</p>
</li>
<li><p><code>setDragImage</code> ：三个参数（指定的元素，坐标<code>X</code>，坐标<code>Y</code>）</p>
</li>
<li><code>files</code>： 获取外部拖拽的文件，返回一个<code>filesList</code>列表<ul>
<li><code>filesList</code>下有个<code>type</code>属性，返回文件的类型</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>读取文件信息<ul>
<li><code>FileReader</code>(读取文件信息)<ul>
<li><code>readAsDataURL</code></li>
</ul>
</li>
<li>参数为要读取的文件对象<ul>
<li><code>onload</code>当读取文件成功完成的时候触发此事件</li>
<li><code>this. result</code> 获取读取的文件数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="五、跨文档操作"><a href="#五、跨文档操作" class="headerlink" title="五、跨文档操作"></a>五、跨文档操作</h3><hr>
<ul>
<li><p>跨文档请求</p>
</li>
<li><p>同域跨文档</p>
<ul>
<li><code>iframe</code>内页：<ul>
<li>父页面操作子页面：<code>contentWindow</code></li>
<li>子页面操作父页面：<code>window.top</code>(找到最顶级的父页面)/<code>parent</code>(第一父页面)</li>
<li>新窗口页：<ul>
<li>父页面操作子页面：<code>window.open</code></li>
<li>子页面操作父页面：<code>window.opener</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>不同域跨文档</p>
<ul>
<li><code>postMessage（“发送的数据”,”接收的域”）</code><ul>
<li><code>message</code>事件监听</li>
<li><code>ev.origin</code>发送数据来源的域</li>
<li><code>ev.data</code> 发送的数据</li>
</ul>
</li>
<li>通过判断发送的数据来执行相应的需求</li>
</ul>
</li>
<li><p>ajax跨域</p>
<ul>
<li><p><code>XMLHttpRequest</code> 新增功能</p>
<ul>
<li>跨域请求：修改服务端头信息<ul>
<li>I<code>E</code>兼容：<code>XDomaiRequest</code></li>
</ul>
</li>
</ul>
</li>
<li><p>进度事件：</p>
<ul>
<li><code>upload.onprogress(ev)</code> 上传进度(实现文件上传进度条)<ul>
<li><code>ev.total</code>  发送文件的总量</li>
<li><code>ev.loaded</code> 已发送的量</li>
</ul>
</li>
<li><code>FormData</code>  构建提交二进制数据</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、Canvas-API&quot;&gt;&lt;a href=&quot;#一、Canvas-API&quot; class=&quot;headerlink&quot; title=&quot;一、Canvas API&quot;&gt;&lt;/a&gt;一、Canvas API&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;canvas API&lt;/code&gt;是&lt;code&gt;H5&lt;/code&gt;标准中最复杂的部分， 它提供几种属性和方法，可以在&lt;code&gt;canvas&lt;/code&gt;元素上创建图形应用&lt;/p&gt;
&lt;h4 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h4&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="HTML5" scheme="http://www.poetries.top/tags/HTML5/"/>
    
      <category term="API" scheme="http://www.poetries.top/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>前端开发的一些实践规范</title>
    <link href="http://www.poetries.top/2016/11/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%B8%80%E4%BA%9B%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.poetries.top/2016/11/23/前端开发一些实践/</id>
    <published>2016-11-23T08:55:24.000Z</published>
    <updated>2016-11-26T10:58:54.818Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、HTML实践"><a href="#一、HTML实践" class="headerlink" title="一、HTML实践"></a>一、HTML实践</h3><hr>
<ul>
<li>使用标准的<code>HTML5</code>简化的定义的方式<ul>
<li>定义文档类型  <code>&lt;!DOCTYPE html&gt;</code></li>
<li>定义页面的编码 <code>&lt;meata charset=&quot;UTF-8&quot;&gt;</code></li>
<li>样式和页脚的引用，不需要写<code>type</code>类型，如<code>link</code> <code>script</code></li>
</ul>
</li>
<li>停止使用不标准的标签和属性，如<code>mqrquee</code></li>
<li>不推荐在<code>HTML</code>标签中添加样式属性，如<code>img</code>标签中添加宽高</li>
<li>不要使用<code>@import</code>，此方式最大的缺点是引用<code>css</code>文件不能同时并行下载<a id="more"></a></li>
<li>增加<code>JavaScript</code>禁用的提示信息，最常用的方式是使用<code>&lt;noscript&gt;</code></li>
<li>添加必要的<code>meta</code>标签</li>
<li>使用频率较高的语义化标签<ul>
<li><code>p</code> <code>ul</code> <code>dl</code> <code>p</code> <code>em</code> <code>strong</code> <code>table</code> <code>site</code> <code>blockquote</code></li>
<li><code>nav</code> <code>header</code> <code>footer</code> <code>article</code> <code>section</code> <code>aside</code> <code>hground</code></li>
</ul>
</li>
<li>样式和结构的分离：把<code>HTML</code>中用于表达外观的部分从HTML中删除，并用css实现。如<code>&lt;span&gt;|&lt;/span&gt;</code>中的<code>|</code> 用css的伪类实现即可</li>
<li>如果图片作为页面内容的一部分，应该使用<code>img</code>标签，如果图片仅仅是装饰作用，应该使用背景图片方式</li>
<li>提高表单易用性的手段<ul>
<li>使用<code>label</code>标签，并设置<code>label</code>标签的<code>for</code>属性</li>
<li>给输入控件设置合理的<code>placehoder</code></li>
<li>如有必要，给输入控件设置<code>tab</code>顺序，<code>tabindex</code>用来设置输入控件的切换顺序   <code>&lt;input type=&quot;text&quot; tabindex=&quot;2&quot;&gt;</code></li>
<li>使用<code>HTML5</code>中引入的表单控件<code>url email date search</code> </li>
<li>精简<code>HTML</code>代码</li>
<li>删除多余的容器</li>
<li>装饰性的元素使用<code>css</code>实现</li>
<li>避免使用<code>table</code>布局</li>
</ul>
</li>
</ul>
<h3 id="二、CSS实践"><a href="#二、CSS实践" class="headerlink" title="二、CSS实践"></a>二、CSS实践</h3><hr>
<ul>
<li>推荐的<code>css</code>类的命名规则和元素的<code>id</code>命名规则相似，只是组成类名的关键字的连接符为中划线<code>-</code> <code>.reder-content-title</code><ul>
<li>为了避免<code>class</code>命名的重复，命名时取父元素的<code>class</code>作为前缀</li>
</ul>
</li>
<li>使用<code>css reset</code>统一浏览器的显示效果</li>
<li>给<code>css</code>样式定义排序，最佳是按类型分组排序<ul>
<li>显示与浮动、定位、尺寸、边框相关属性、字体样式、背景、其他样式</li>
</ul>
</li>
<li>合理利用<code>css</code>的权重，提高代码的重用性<ul>
<li><code>css</code>样式中尽量不要使用<code>ID</code>选择器，最佳实践尽可能使用较低权重的选择器作为基础样式</li>
<li>减少自选择器的层级</li>
<li>使用组合的<code>css</code>选择器</li>
<li><code>em</code> <code>px</code> <code>%</code><ul>
<li><code>w3c</code>把尺寸单位分为相对长度单位和绝对长度单位两种。</li>
<li>相对长度单位又分为字体相对单位和视窗相对单位<ul>
<li>字体相对单位包括：<code>em</code> <code>ex</code> <code>ch</code> <code>rem</code></li>
<li>视窗相对单位包括：<code>vw</code>  <code>vh</code> <code>vmin</code> <code>vmax</code></li>
<li>使用最广泛的是<code>em</code> <code>px</code> 百分比</li>
</ul>
</li>
<li><code>em</code>计算是相对自身元素的字体尺寸的，<code>rem</code>相对于根元素的字体大小计算， 百分比是相对于父元素的尺寸的</li>
<li>如何设置元素的尺寸和字体大小最佳实践<ul>
<li>尽量设置相对尺寸（局部的尺寸要尽量使用相对尺寸，即局部自适应）</li>
<li>只有在可预知元素尺寸的情况下才使用绝对尺寸</li>
<li>使用<code>em</code>设置字体大小</li>
</ul>
</li>
</ul>
</li>
<li><code>css</code>选择器定义最佳实践<ul>
<li>避免使用通配符</li>
<li>避免使用标签选择器及单个属性选择器作为关键选择器</li>
<li>不要在<code>id</code>选择器前使用标签名</li>
<li>尽量不要使在选择符中定义过多的层级，最好不要超过三层</li>
</ul>
</li>
</ul>
</li>
<li><code>css</code>相关图片处理<ul>
<li>不要设置图片尺寸</li>
<li>使用<code>css</code>雪碧图技术</li>
<li>减少<code>css</code>代码量<ul>
<li>定义简洁的<code>css</code>规则</li>
<li>合并相关的<code>css</code>规则</li>
<li>定义简洁的属性值合并相同的定义</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="三、JavaScript实践"><a href="#三、JavaScript实践" class="headerlink" title="三、JavaScript实践"></a>三、JavaScript实践</h3><hr>
<ul>
<li>避免定义全局变量或函数<ul>
<li>使用<code>var</code></li>
<li>使用<code>JavaScript</code>的严格模式<code>use strict;</code></li>
</ul>
</li>
<li>使用简化的编码方式<ul>
<li>对象创建<code>pserson={age:22,name:&quot;poetries&quot;}</code></li>
<li>数组创建<code>list=[12,23,55]</code></li>
</ul>
</li>
<li>使用<code>===</code>和<code>!==</code>而不是<code>==</code>和<code>!=</code></li>
<li>避免使用<code>with</code>语句和<code>eval()</code></li>
<li>使用更严格的编码格式<ul>
<li>使用严格模式遵循：<ul>
<li>不要在全局中启用严格模式</li>
<li>在已有代码中谨慎使用严格模式</li>
</ul>
</li>
<li>严格模式主要对不合理的地方做了改进<ul>
<li>禁用<code>width</code>关键字</li>
<li>防止意外的全局变量</li>
<li>函数中的<code>this</code>不在默认指向全局</li>
<li>防止函数参数重命名</li>
<li>更安全的使用<code>eval()</code></li>
</ul>
</li>
<li>事件处理和业务逻辑相分离</li>
<li>配置数据和代码逻辑相分离</li>
<li>逻辑与结构相似相分离<ul>
<li>从<code>JavaScript</code>逻辑中分离<code>css</code>样式</li>
<li>从<code>JavaScript</code>中分离<code>HTML</code>结构</li>
</ul>
</li>
<li><code>JavaScript</code>模块化的开发，提高代码的可维护性<ul>
<li><code>JavaScript</code>的两种模块化规范 <code>ComonJS</code> <code>AMD</code></li>
<li>两者的主要区别在加载模块的方式上</li>
<li><code>ComonJS</code> 以同步的方式加载，使用<code>require()</code>方法来加载模块</li>
<li><code>AMD</code>以异步的方式加载模块</li>
</ul>
</li>
</ul>
</li>
<li>合理使用<code>Ajax</code>技术，适合的使用场景有<ul>
<li>前端会根据用户的需求动态取得后端数据，然后更新网页界面</li>
<li>期望通过不刷新页面取得任何资源或页面</li>
<li>动态进行用户输入的认证</li>
</ul>
</li>
</ul>
<h3 id="四、附录"><a href="#四、附录" class="headerlink" title="四、附录"></a>四、附录</h3><hr>
<h4 id="附录一-DIV命名规范"><a href="#附录一-DIV命名规范" class="headerlink" title="附录一 DIV命名规范"></a>附录一 DIV命名规范</h4><hr>
<ul>
<li><p>企业<code>DIV</code>使用频率高的命名方法</p>
</li>
<li><p><strong>网页内容类</strong></p>
<ul>
<li><p>标题: <code>title</code></p>
<ul>
<li>摘要: <code>summary</code></li>
<li>箭头： <code>arrow</code></li>
<li>商标： <code>label</code></li>
<li>网站标志： <code>logo</code></li>
<li>转角/圆角：<code>corner</code></li>
<li>横幅广告： <code>banner</code></li>
<li>子菜单： <code>subMenu</code></li>
<li>搜索： <code>search</code></li>
<li>搜索框： <code>searchBox</code></li>
<li>登录： <code>login</code></li>
<li>登录条：<code>loginbar</code></li>
<li>工具条： <code>toolbar</code></li>
<li>下拉： <code>drop</code></li>
<li>标签页： <code>tab</code></li>
<li>当前的： <code>current</code></li>
<li>列表： <code>list</code></li>
<li>滚动： <code>scroll</code></li>
<li>服务： <code>service</code></li>
<li>提示信息： <code>msg</code></li>
<li>热点：<code>hot</code></li>
<li>新闻： <code>news</code></li>
<li>小技巧： <code>tips</code></li>
<li>下载： <code>download</code></li>
<li>栏目标题： <code>title</code></li>
<li>热点： <code>hot</code></li>
<li>加入：<code>joinus</code></li>
<li>注册： <code>regsiter</code></li>
<li>指南： <code>guide</code></li>
<li>友情链接： <code>friendlink</code></li>
<li>状态： <code>status</code></li>
<li>版权： <code>copyright</code></li>
<li>按钮： <code>btn</code></li>
<li>合作伙伴： <code>partner</code></li>
<li>投票： <code>vote</code></li>
<li>左右中：<code>left</code>  <code>right</code>  <code>center</code></li>
</ul>
<hr>
</li>
<li>注释的写法: <code>/* Footer */</code> 内容区<code>/* End Footer */</code></li>
</ul>
</li>
<li><p><strong>id的命名:</strong></p>
<ul>
<li><p>页面结构</p>
<ul>
<li>容器: <code>container</code></li>
<li>页头：<code>header</code></li>
<li>内容：<code>content</code>/<code>container</code></li>
<li>页面主体：<code>main</code></li>
<li>页尾：<code>footer</code></li>
<li>导航：<code>nav</code></li>
<li>侧栏：<code>sidebar</code></li>
<li>栏目：<code>column</code></li>
<li>页面外围控制整体布局宽度：<code>wrapper</code></li>
<li>左右中：<code>left</code> <code>right</code> <code>center</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>导航</p>
<ul>
<li>导航：<code>nav</code></li>
<li>主导航：<code>mainbav</code></li>
<li>子导航：<code>subnav</code></li>
<li>顶导航：<code>topnav</code></li>
<li>边导航：<code>sidebar</code></li>
<li>左导航：<code>leftsidebar</code></li>
<li>右导航：<code>rightsidebar</code></li>
<li>菜单：<code>menu</code></li>
<li>子菜单：<code>submenu</code></li>
<li>标题: <code>title</code></li>
<li>摘要: <code>summary</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>功能</p>
<ul>
<li>标志：<code>logo</code></li>
<li>广告：<code>banner</code></li>
<li>登陆：<code>login</code></li>
<li>登录条：<code>loginbar</code></li>
<li>注册：<code>regsiter</code></li>
<li>搜索：<code>search</code></li>
<li>功能区：<code>shop</code></li>
<li>标题：<code>title</code></li>
<li>加入：<code>joinus</code></li>
<li>状态：<code>status</code></li>
<li>按钮：<code>btn</code></li>
<li>滚动：<code>scroll</code></li>
<li>标签页：<code>tab</code></li>
<li>文章列表：<code>list</code></li>
<li>提示信息：<code>msg</code></li>
<li>当前的:<code>current</code></li>
<li>小技巧：<code>tips</code></li>
<li>图标: <code>icon</code></li>
<li>注释：<code>note</code></li>
<li>指南：<code>guild</code></li>
<li>服务：<code>service</code></li>
<li>热点：<code>hot</code></li>
<li>新闻：<code>news</code></li>
<li>下载：<code>download</code></li>
<li>投票：<code>vote</code></li>
<li>合作伙伴：<code>partner</code></li>
<li>友情链接：<code>link</code></li>
<li>版权：<code>copyright</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong><code>class</code>的命名:</strong></p>
<ul>
<li><p>颜色:使用颜色的名称或者16进制代码,如</p>
<ul>
<li><code>.red { color: red; }</code></li>
<li><code>.f60 { color: #f60; }</code></li>
<li><code>.ff8600 { color: #ff8600; }</code></li>
</ul>
</li>
<li><p>字体大小,直接使用”font+字体大小”作为名称,如</p>
<ul>
<li><code>.font12px { font-size: 12px; }</code></li>
<li><code>.font9px {font-size: 9pt; }</code></li>
</ul>
</li>
<li><p>对齐样式,使用对齐目标的英文名称,如</p>
<ul>
<li><code>.left { float:left; }</code></li>
<li><code>.bottom { float:bottom; }</code></li>
</ul>
</li>
<li><p>标题栏样式,使用”类别+功能”的方式命名,如</p>
<ul>
<li><code>.barnews { }</code></li>
<li><code>.barproduct { }</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong>注意事项::</strong></p>
<ul>
<li>一律小写;</li>
<li>尽量用英文;</li>
<li>不加中杠和下划线;</li>
<li>尽量不缩写，除非一看就明白的单词.</li>
</ul>
</li>
</ul>
<hr>
</li>
</ul>
</li>
<li><p><strong>推荐的 <code>CSS</code> 书写顺序：</strong></p>
<ul>
<li><p>显示属性</p>
<ul>
<li><code>display</code></li>
<li><code>list-style</code></li>
<li><code>position</code></li>
<li><code>float</code></li>
<li><code>clear</code></li>
</ul>
</li>
<li><p>自身属性</p>
<ul>
<li><code>width</code></li>
<li><code>height</code></li>
<li><code>margin</code></li>
<li><code>padding</code></li>
<li><code>border</code></li>
<li><code>background</code></li>
</ul>
</li>
<li><p>文本属性</p>
<ul>
<li><code>color</code></li>
<li><code>font</code></li>
<li><code>text-decoration</code></li>
<li><code>text-align</code></li>
<li><code>vertical-align</code></li>
<li><code>white-space</code></li>
<li><code>other text</code></li>
<li><code>content</code>    </li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="附录二-CSS精灵"><a href="#附录二-CSS精灵" class="headerlink" title="附录二 CSS精灵"></a>附录二 CSS精灵</h4><hr>
<ul>
<li>CSS精灵原理以及应用<ul>
<li><code>CSS</code>雪碧的基本原理是把你的网站上用到的一些图片整合到一张单独的图片中，从而减少你的网站的HTTP请求数量。<ul>
<li>该图片使用<code>CSS</code>   <code>background和background-position</code>属性渲染，这也就意味着你的标签变得更加复杂了，图片是在<code>CSS</code>中定义，而非<code>&lt;img&gt;</code>标签。</li>
</ul>
</li>
</ul>
</li>
<li>一个简单的例子：<ul>
<li>一张图片作出一个按钮的三个状态</li>
<li>一个链接用<code>CSS</code>做成按钮的样式，我们可以使用同一张图片，完成按钮的三个状态，<code>a:link</code>，<code>a:hover</code>，<code>a:active</code> <code>&lt;a class=&quot;button&quot; href=&quot;#&quot;&gt;链接&lt;/a&gt;</code></li>
<li>加入右侧的图片为：<code>200px 65px</code>的三个按钮图拼合而成的图片<code>button.png</code>，从上到下一次为按钮的普通、鼠标滑过、鼠标点击的状态。则可以使用<code>CSS</code>进行定义。</li>
</ul>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>:block; </div><div class="line">    <span class="attribute">width</span>:<span class="number">200px</span>; </div><div class="line">    <span class="attribute">height</span>:<span class="number">65px</span>; </div><div class="line">    <span class="attribute">line-height</span>:<span class="number">65px</span>; <span class="comment">/*定义状态*/</span></div><div class="line">    <span class="attribute">text-indent</span>:-<span class="number">2015px</span>; <span class="comment">/*隐藏文字*/</span></div><div class="line">    <span class="attribute">background-image</span>:<span class="built_in">url</span>(button.png); <span class="comment">/*定义背景图片*/</span></div><div class="line">    <span class="attribute">background-position</span>:<span class="number">0</span> <span class="number">0</span>;</div><div class="line">    <span class="comment">/*定义链接的普通状态，此时图像显示的是顶上的部分*/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">    <span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">66px</span>;</div><div class="line">    <span class="comment">/*定义链接的滑过状态，此时显示的为中间部分，向下取负值*/</span></div><div class="line">&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</div><div class="line">    <span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">132px</span>;                      </div><div class="line">    <span class="comment">/*定 义链接的普通状态，此时显示的是底部的部分，向下取负值*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>更多的<code>CSS</code>雪碧，图片更复杂，背景定位更精确。可能会用到大量的数值<ul>
<li>如：<code>background:url(nav.png) -180px 24pxno-repeat</code>; 来达到更精确的定位</li>
</ul>
</li>
<li><strong>优点：</strong><ul>
<li>减少加载网页图片时对服务器的请求次数</li>
<li>可以合并多数背景图片和小图标，方便在任何位置使用，这样不同位置的请求只需要调用一个图片，从而减少对服务器的请求次数，降低服务器压力，同时提高了页面的加载速度，节约服务器的流量。</li>
<li>提高页面的加载速度</li>
<li><code>sprite</code>技术的其中一个好处是图片的加载时间(在有许多 <code>sprite</code> 时，单张图片的加载时间)。由所需图片拼成的一张 <code>GIF</code>图片的尺寸会明显小于所有图片拼合前的大小。单张的 <code>GIF</code>只有相关的一个色表，而单独分割的每一张 <code>GIF</code> 都有自己的一个色表，这就增加了总体的大小。因此，单独的一张 <code>JPEG</code> 或者 <code>PNG</code> <code>sprite</code> 在大小上非常可能比把一张图分成多张得来的图片总尺寸小。</li>
<li>减少鼠标滑过的一些<code>bug</code></li>
<li><code>IE6</code>不会主动预加载鼠标滑过即<code>a:hover</code>中的背景图片，所以，如果使用多张图片，鼠标滑过会出现闪白的现象。使用<code>CSS</code>雪碧，由于一张图片即可，所以不会出现这种现象。</li>
</ul>
</li>
<li>不足：<ul>
<li><code>CSS</code>雪碧的最大问题是内存使用</li>
<li>影响浏览器的缩放功能</li>
<li>拼图维护比较麻烦</li>
<li>使<code>CSS</code>的编写变得困难</li>
<li><code>CSS</code> 雪碧调用的图片不能被打印</li>
<li>错误得使用 <code>Sprites</code> 影响可访问性</li>
</ul>
</li>
</ul>
<h4 id="附录三-一些tips解决方案"><a href="#附录三-一些tips解决方案" class="headerlink" title="附录三 一些tips解决方案"></a>附录三 一些tips解决方案</h4><hr>
<h5 id="页面优化实践"><a href="#页面优化实践" class="headerlink" title="页面优化实践"></a>页面优化实践</h5><hr>
<ul>
<li><p>从下面的几个方面可以进行页面的优化：</p>
<ul>
<li>减少请求数</li>
<li>图片合并</li>
<li><code>CSS</code>文件合并</li>
<li>减少内联样式</li>
<li>避免在 <code>CSS</code>中使用 <code>import</code></li>
<li>减少文件大小</li>
<li>选择适合的图片格式</li>
<li>图片压缩</li>
<li><code>CSS</code> 值缩写（<code>Shorthand Property</code>)</li>
<li>文件压缩</li>
<li>页面性能</li>
<li>调整文件加载顺序</li>
<li>减少标签数量</li>
<li>调整选择器长度</li>
<li>尽量使用<code>CSS</code> 制作显示表现</li>
<li>增强代码可读性与可维护性</li>
<li>规范化</li>
<li>语义化</li>
<li>模块化</li>
</ul>
</li>
</ul>
<h5 id="写DIV-CSS-的一些常识"><a href="#写DIV-CSS-的一些常识" class="headerlink" title="写DIV+CSS 的一些常识"></a>写DIV+CSS 的一些常识</h5><hr>
<ul>
<li><p>不要使用过小的图片做背景平铺</p>
<ul>
<li>这就是为何很多人都不用 <code>1px</code> 的原因，这才知晓。宽高 <code>1px</code> 的图片平铺出一个宽高 <code>200px</code> 的区域，需要 <code>200200=40, 000</code> 次，占用资源</li>
</ul>
</li>
<li><p>无边框</p>
<ul>
<li>推荐的写法是 <code>border:none</code>;，哈哈，我一直在用这个。 <code>border:0;</code> 只是定义边框宽度为零，但边框样式、颜色还是会被浏览器解析，占用资源</li>
</ul>
</li>
<li><p>慎用 通配符</p>
<ul>
<li>所谓通配符，就是将<code>CSS</code> 中的所有标签均初始化，不管用的不用的，过时的先进的，一视同仁，这样，大大的占用资源。要有选择的初始化标签。</li>
</ul>
</li>
<li><p><code>CSS</code>的十六进制颜色代码缩写</p>
<ul>
<li>习惯了缩写及小写，这才知道，原来不是推荐的写法，为的是减少解析所占用的资源。但同时会增加文件体积。孰优孰劣，有待仔细考证。</li>
</ul>
</li>
<li><p>样式放头上，脚本放脚下。不内嵌，只外链</p>
</li>
<li><p>坚决不用 <code>CSS</code>表达式</p>
</li>
<li><p>使用 引用样式表，而不是通过<code>@import</code> 导入。</p>
</li>
<li><p>一般来说，<code>PNG</code>比 <code>GIF</code> 要小，小得多。再者，<code>GIF</code> 中有多少颜色是被浪费的，很值得优化。</p>
</li>
<li><p>千万不要在 <code>HTML</code>中缩放图片，一者不好看，二者占资源。</p>
</li>
<li><p>正文字体最好用偶数</p>
<ul>
<li><code>12px</code>、<code>14px</code>、<code>16px</code>，效果非常好。特例，<code>15px</code>。</li>
</ul>
</li>
<li><p><code>block</code>、<code>ul</code>、<code>ol</code>等上下留出至少一倍行距，左侧至少两倍行距，右侧随意。</p>
</li>
<li><p>段落之间，至少要有一倍行距</p>
</li>
<li><p>强行指定某些元素的 <code>line-height</code>，正文 <code>1.6</code>倍于文字大小，标题<code>1.3</code>倍。</p>
</li>
<li><p>中文标点用全角</p>
<ul>
<li>英文夹杂在中文中，左右空格，半角。</li>
</ul>
</li>
<li><p>中文字体的粗体和斜体，远离较好</p>
</li>
<li><p><strong>[建议] HTML 标签的使用应该遵循标签的语义</strong></p>
<ul>
<li>下面是常见标签语义<ul>
<li><code>p</code> - 段落</li>
<li><code>h1,h2,h3,h4,h5,h6</code> - 层级标题</li>
<li><code>strong,em</code> - 强调</li>
<li><code>ins</code> - 插入</li>
<li><code>del</code> - 删除</li>
<li><code>abbr</code>- 缩写</li>
<li><code>code</code> - 代码标识</li>
<li><code>cite</code> - 引述来源作品的标题</li>
<li><code>q</code> - 引用</li>
<li><code>blockquote</code> - 一段或长篇引用</li>
<li><code>ul</code> - 无序列表</li>
<li><code>ol</code> - 有序列表</li>
<li><code>dl,dt,dd</code> - 定义列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="常用代码片段"><a href="#常用代码片段" class="headerlink" title="常用代码片段"></a>常用代码片段</h5><hr>
<ul>
<li>雅虎工程师提供的<code>CSS</code>初始化示例代码【仅供参考】<ul>
<li>可以在<code>html</code>头文件中直接引用，从而避免浏览器的不兼容带来的错误。</li>
</ul>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">body,</div><div class="line">div,</div><div class="line">dl,</div><div class="line">dt,</div><div class="line">dd,</div><div class="line">ul,</div><div class="line">ol,</div><div class="line">li,</div><div class="line">h1,</div><div class="line">h2,</div><div class="line">h3,</div><div class="line">h4,</div><div class="line">h5,</div><div class="line">h6,</div><div class="line">pre,</div><div class="line">code,</div><div class="line">form,</div><div class="line">fieldset,</div><div class="line">legend,</div><div class="line">input,</div><div class="line">button,</div><div class="line">textarea,</div><div class="line">p,</div><div class="line">blockquote,</div><div class="line">th,</div><div class="line">td &#123; </div><div class="line">    margin:0; padding:0; </div><div class="line">&#125;</div><div class="line">body &#123;</div><div class="line">    background:#fff; </div><div class="line">    color:#555; </div><div class="line">    font-size:14px; </div><div class="line">    font-family: Verdana, Arial, Helvetica, sans-serif; </div><div class="line">&#125;</div><div class="line">td,</div><div class="line">th,</div><div class="line">caption &#123; </div><div class="line">    font-size:14px;</div><div class="line">&#125;</div><div class="line">h1, </div><div class="line">h2, </div><div class="line">h3, </div><div class="line">h4, </div><div class="line">h5, </div><div class="line">h6 &#123; </div><div class="line">    font-weight:normal; </div><div class="line">    font-size:100%; </div><div class="line">&#125;</div><div class="line"></div><div class="line">address, </div><div class="line">caption,</div><div class="line">cite, </div><div class="line">code, </div><div class="line">dfn, </div><div class="line">em, </div><div class="line">strong,</div><div class="line">th, </div><div class="line">var &#123; </div><div class="line">    font-style:normal; </div><div class="line">    font-weight:normal;</div><div class="line">&#125;</div><div class="line">a &#123; </div><div class="line">    color:#555; </div><div class="line">    text-decoration:none; </div><div class="line">&#125;</div><div class="line">a:hover &#123; </div><div class="line">    text-decoration:underline; </div><div class="line">&#125;</div><div class="line">img &#123;</div><div class="line">    border:none;</div><div class="line">&#125;</div><div class="line">ol,ul,li &#123; </div><div class="line">    list-style:none; </div><div class="line">&#125;</div><div class="line">input, </div><div class="line">textarea, </div><div class="line">select, </div><div class="line">button &#123; </div><div class="line">    font:14px Verdana,Helvetica,Arial,sans-serif; </div><div class="line">&#125;</div><div class="line">table &#123; </div><div class="line">    border-collapse:collapse; </div><div class="line">&#125;</div><div class="line">html &#123;</div><div class="line">    overflow-y: scroll;</div><div class="line">&#125; </div><div class="line">.clearfix:after &#123;</div><div class="line">    content: "."; </div><div class="line">    display: block; </div><div class="line">    height:0; </div><div class="line">    clear:both; </div><div class="line">    visibility: hidden;</div><div class="line">&#125;</div><div class="line">.clearfix &#123; </div><div class="line">    *zoom:1; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>现代浏览器<code>cssreset</code>解决方案【推荐使用这个】</p>
<ul>
<li><a href="https://necolas.github.io/normalize.css/" target="_blank" rel="external">normalize.css</a></li>
</ul>
</li>
<li><p><code>mobile meta</code>标签</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">”viewport”</span> <span class="attr">content</span>=<span class="string">”width</span>=<span class="string">320,target-densitydpi</span>=<span class="string">dpi_value,initial-scale</span>=<span class="string">1,</span> <span class="attr">user-scalable</span>=<span class="string">no”/</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>表格不被撑开</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table-layout</span>: <span class="selector-tag">fixed</span>; <span class="selector-tag">word-break</span>: <span class="selector-tag">break-all</span>;;<span class="selector-tag">border-collapse</span>: <span class="selector-tag">collapse</span></div></pre></td></tr></table></figure>
<ul>
<li>不设宽高居中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">”abc”</span> <span class="attr">style</span>=<span class="string">”display:table;text-align:center;width:100%;height:100%;”</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">”background:#f00;</span> <span class="attr">display:table-cell</span>; <span class="attr">vertical-align:middle</span>;”&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”button”</span> <span class="attr">value</span>=<span class="string">”item1″</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>透明度的兼容代码</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">filter:alpha(opacity=50); /*1-100*/</div><div class="line">-moz-opacity:0.5; /*0-1.0*/</div><div class="line">-khtml-opacity:0.5; /*0-1.0*/</div><div class="line">opacity:0.5; /*0-1.0*/</div></pre></td></tr></table></figure>
<ul>
<li><p>文本溢出的几种处理方法</p>
</li>
<li><p>简单隐藏</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.hide</span>&#123;<span class="attribute">overflow</span>:hidden&#125;</div></pre></td></tr></table></figure>
<ul>
<li>使用滚动条</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.scroll</span>&#123;<span class="attribute">overflow</span>:scroll&#125;</div></pre></td></tr></table></figure>
<ul>
<li>简单裁切</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.clip</span>&#123;</div><div class="line">	<span class="attribute">border</span>:<span class="number">1px</span> solid;</div><div class="line">	<span class="attribute">overflow</span>:hidden;<span class="comment">/*超出隐藏*/</span></div><div class="line">	<span class="attribute">white-space</span>:nowrap;<span class="comment">/*强制在一行显示*/</span></div><div class="line">	<span class="attribute">text-overflow</span>:clip;<span class="comment">/*裁切*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>超出部分省略号</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span><span class="selector-class">.elli</span>&#123;</div><div class="line">	<span class="attribute">overflow</span>:hidden;</div><div class="line">	<span class="attribute">white-space</span>:nowrap;</div><div class="line">	<span class="attribute">text-overflow</span>:ellipsis;<span class="comment">/*使用省略号*/</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>清除浮动的几种方法</p>
<ul>
<li><p>方法一：<code>投机取巧法</code> – 不推荐</p>
<ul>
<li>直接一个放到当作最后一个子标签放到父标签那儿，此方法屡试不爽，兼容性强</li>
</ul>
</li>
<li><p>方法二：<code>overflow + zoom</code>方法  –不推荐<br> <code>.fix{overflow:hidden; zoom:1;}</code></p>
<ul>
<li>此方法优点在于代码简洁，涵盖所有浏览器</li>
</ul>
</li>
<li><p>方法三：<code>after + zoom</code>方法 -推荐–此方法可以说是综合起来最好的方法了</p>
<ul>
<li><code>clearfix</code>只应用在包含浮动子元素的父级元素上</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span>&#123;<span class="attribute">zoom</span>:<span class="number">1</span>;&#125;</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">     <span class="attribute">display</span>:block; </div><div class="line">     <span class="attribute">content</span>:<span class="string">'clear'</span>; </div><div class="line">     <span class="attribute">clear</span>:both;</div><div class="line">     <span class="attribute">line-height</span>:<span class="number">0</span>; </div><div class="line">     <span class="attribute">visibility</span>:hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>方法四 在方法三的基础上的最优雅的做法【推荐】</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span> &#123;<span class="comment">/*before 是为了防止浏览器顶部空白的崩溃*/</span>   </div><div class="line">     <span class="attribute">content</span>: <span class="string">" "</span>;   </div><div class="line">     <span class="attribute">display</span>: table;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;    </div><div class="line">    <span class="attribute">clear</span>: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>清除浮动的原理是触发<code>BFC</code>，这里只有<code>clear:both</code>起清除浮动作用，其他的<code>line-height:0;  visibility:hidden;</code>都是为了隐藏生的内容需要的</p>
<ul>
<li>拓展阅读<ul>
<li><a href="http://www.jianshu.com/p/09bd5873bed4" target="_blank" rel="external">CSS中的浮动和清除浮动</a></li>
<li><a href="http://www.jianshu.com/p/e878122a92a3" target="_blank" rel="external">实用的60个CSS代码片段</a></li>
</ul>
</li>
</ul>
<h5 id="一些总结"><a href="#一些总结" class="headerlink" title="一些总结"></a>一些总结</h5><hr>
<ul>
<li><p>自动继承属性：</p>
<ul>
<li><code>color</code></li>
<li><code>font</code></li>
<li><code>text-align</code></li>
<li><code>list-style</code><br>…</li>
</ul>
</li>
<li><p>非继承属性：</p>
<ul>
<li><code>background</code></li>
<li><code>border</code></li>
<li><code>position</code><br>…</li>
</ul>
</li>
<li><p>具有破坏性的元素：</p>
<ul>
<li><code>float</code></li>
<li><code>display:none;</code></li>
<li><code>position:absoblute/fixed/sticky;</code></li>
</ul>
</li>
<li><p>具有包裹性的元素：</p>
<ul>
<li><p><code>display:inline-block/table-cell</code></p>
</li>
<li><p><code>position:absolute/fixed/sticky</code></p>
</li>
<li><p><code>overflow:hidden/scroll</code></p>
</li>
</ul>
</li>
<li><p>消除图片底部间隙的方法</p>
<ul>
<li><p>图片块状化-无基线对齐<br><code>img{display:block;}</code></p>
</li>
<li><p>图片底线对齐<br><code>img{vertical-align:bottom;}</code></p>
</li>
<li><p>行高足够小 - 基线位置上移<br><code>.box{line-height:0;}</code></p>
</li>
</ul>
</li>
<li><p>参考</p>
<ul>
<li><code>web</code>前端开发最佳实践</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、HTML实践&quot;&gt;&lt;a href=&quot;#一、HTML实践&quot; class=&quot;headerlink&quot; title=&quot;一、HTML实践&quot;&gt;&lt;/a&gt;一、HTML实践&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;使用标准的&lt;code&gt;HTML5&lt;/code&gt;简化的定义的方式&lt;ul&gt;
&lt;li&gt;定义文档类型  &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;定义页面的编码 &lt;code&gt;&amp;lt;meata charset=&amp;quot;UTF-8&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;样式和页脚的引用，不需要写&lt;code&gt;type&lt;/code&gt;类型，如&lt;code&gt;link&lt;/code&gt; &lt;code&gt;script&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;停止使用不标准的标签和属性，如&lt;code&gt;mqrquee&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不推荐在&lt;code&gt;HTML&lt;/code&gt;标签中添加样式属性，如&lt;code&gt;img&lt;/code&gt;标签中添加宽高&lt;/li&gt;
&lt;li&gt;不要使用&lt;code&gt;@import&lt;/code&gt;，此方式最大的缺点是引用&lt;code&gt;css&lt;/code&gt;文件不能同时并行下载
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="规则" scheme="http://www.poetries.top/tags/%E8%A7%84%E5%88%99/"/>
    
      <category term="实践" scheme="http://www.poetries.top/tags/%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap笔记总结</title>
    <link href="http://www.poetries.top/2016/11/19/bootstrap-review/"/>
    <id>http://www.poetries.top/2016/11/19/bootstrap-review/</id>
    <published>2016-11-19T08:55:24.000Z</published>
    <updated>2016-11-26T10:58:54.814Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、-bootstrap简介"><a href="#一、-bootstrap简介" class="headerlink" title="一、 bootstrap简介"></a>一、 <code>bootstrap</code>简介</h4><hr>
<ul>
<li><code>Bootstrap</code>，来自 <code>Twitter</code>（全国最大的微博），是目前最受欢迎的前端框架。</li>
<li><code>bootstrap</code>下载及演示 <a href="http://v3.bootcss.com" target="_blank" rel="external">http://v3.bootcss.com</a><ul>
<li>什么是<code>bootstrap</code>？<ul>
<li><code>Bootstrap</code>是基于 <code>HTML</code>、<code>CSS</code>、<code>JAVASCRIPT</code> 的开源框架，它简洁、直观、强悍、灵活，使得 <code>Web</code>开发更加快捷，</li>
</ul>
</li>
<li>用于开发响应式布局、移动设备优先的 <code>WEB</code>项目。</li>
<li>为什么使用 <code>Bootstrap</code>？<ul>
<li>跨设备</li>
<li>跨浏览器（<code>chrome</code>，<code>IE9</code>以上，<code>Firefox</code>，<code>Safari</code>，<code>Opera</code>…）</li>
<li>响应式布局</li>
<li>具有实用性强的组件</li>
<li>内置<code>jquery</code>插件</li>
</ul>
</li>
<li><code>bootstrap</code>的结构</li>
<li>主要分为三大核心模块：<code>css</code>、<code>js</code>、<code>font</code><a id="more"></a>
<h4 id="二、bootstrap排版样式"><a href="#二、bootstrap排版样式" class="headerlink" title="二、bootstrap排版样式"></a>二、<code>bootstrap</code>排版样式</h4></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><strong>标题</strong><ul>
<li>从 <code>h1</code> 到 <code>h6</code></li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> //36px</div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h2</span>&gt;</span> //30px</div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> //24px</div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h4</span>&gt;</span> //18px</div><div class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h5</span>&gt;</span> //14px</div><div class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">h6</span>&gt;</span> //12px</div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"lead"</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>内联文本元素<ul>
<li>添加标记，<code>&lt;mark&gt;</code>元素或<code>.mark</code> 类</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Bootstrap<span class="tag">&lt;<span class="name">mark</span>&gt;</span>排版<span class="tag">&lt;/<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--各种加线条的文本--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">del</span>&gt;</span>  //删除的文本</div><div class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">s</span>&gt;</span>  //无用的文本</div><div class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>  //插入的文本</div><div class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">u</span>&gt;</span>  //效果同上，下划线文本</div><div class="line"></div><div class="line"><span class="comment">&lt;!--各种强调的文本--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">small</span>&gt;</span>  //标准字号的 85%</div><div class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>    //加粗 700</div><div class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>Bootstrap 排版<span class="tag">&lt;/<span class="name">em</span>&gt;</span>    //倾斜</div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-left"</span>&gt;</span>向左对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>居中对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-right"</span>&gt;</span>向右对齐文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-justify"</span>&gt;</span>对齐文本。该段落会根据屏幕的大小对超出屏幕的文字进行换行<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-nowrap"</span>&gt;</span>该段落不会根据屏幕的大小对超出屏幕的文字进行换行。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-lowercase"</span>&gt;</span>BOOTSTROP<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-uppercase"</span>&gt;</span>bootstrap<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-capitalize"</span>&gt;</span>bootstrap<span class="tag">&lt;/<span class="name">p</span>&gt;</span> //单词首字母大写</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>缩略语</strong></p>
<ul>
<li><code>HTML</code>元素提供了用于缩写的标记，比如 <code>WWW</code> 或 <code>HTTP</code>。<code>Bootstrap</code> 定义 <code>&lt;abbr&gt;</code> 元素的样式为显示在文本底部的一条虚线边框</li>
<li>当鼠标悬停在上面时会显示完整的文本（只要您为 <code>&lt;abbr&gt;</code> title 属性添加了文本）。为了得到一个更小字体的文本，</li>
<li>请添加 <code>.initialism</code> 到 <code>&lt;abbr&gt;</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World Wide Web"</span>&gt;</span>WWW<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"Real Simple Syndication"</span> <span class="attr">class</span>=<span class="string">"initialism"</span>&gt;</span>RSS<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><strong>地址</strong><ul>
<li><code>address</code>默认为 <code>display:block</code>;，需要使用标签来为封闭的地址文本添加换行</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Twitter, Inc.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  795 Folsom Ave, Suite 600<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  San Francisco, CA 94107<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"Phone"</span>&gt;</span>P:<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> (123) 456-7890</div><div class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Full Name<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:#"</span>&gt;</span>first.last@example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>引用</strong><ul>
<li>默认样式引用，增加了左边线，设定了字体大小和内外边距<br><code>&lt;blockquote&gt; Bootstrap 框架 &lt;/blockquote&gt;</code></li>
<li>反向<br><code>&lt;blockquote class=&quot;blockquote-reverse &quot;&gt; Bootstrap 框架 &lt;/blockquote&gt;</code></li>
<li>多种引用样式</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"text-right"</span>&gt;</span>Someone famous in <span class="tag">&lt;<span class="name">cite</span> <span class="attr">title</span>=<span class="string">"Source Title"</span>&gt;</span>Source Title<span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>列表</strong></p>
<ul>
<li>有序列表、无序列表、自定义列表<ul>
<li><code>.list-unstyled</code></li>
<li><code>.list-inline</code></li>
<li><code>.dl-horizontal</code>  应用于<code>&lt;dl&gt;</code>元素和<code>&lt;dt&gt;</code>元素中</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>代码</strong></p>
<ul>
<li><code>.pre-scrollable</code>  使 <code>&lt;pre&gt;</code> 元素可滚动 <code>scrollable</code></li>
<li>内联代码   <code>&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;</code></li>
<li>用户输入   <code>press &lt;kbd&gt;ctrl + ,&lt;/kbd&gt;</code></li>
<li>标记变量   <code>&lt;var&gt;y&lt;/var&gt; = &lt;var&gt;m&lt;/var&gt;&lt;var&gt;x&lt;/var&gt; + &lt;var&gt;b&lt;/var&gt;</code></li>
<li>程序输出   <code>&lt;samp&gt;This text is meant to be treated as sample output from a computer program.&lt;/samp&gt;</code></li>
<li>代码块     <code>&lt;pre&gt;&amp;lt;article&amp;gt;Please input...&amp;lt;/article&amp;gt;&lt;/pre&gt;</code></li>
</ul>
</li>
</ul>
<h4 id="三、表格、按钮、图片"><a href="#三、表格、按钮、图片" class="headerlink" title="三、表格、按钮、图片"></a>三、表格、按钮、图片</h4><hr>
<ul>
<li><p><strong>表格</strong></p>
<ul>
<li>基本表格 <code>&lt;table class=&quot;table&quot;&gt;</code></li>
<li>条纹表格 <code>&lt;table class=&quot;table table-striped&quot;&gt;</code></li>
<li>边框表格  <code>&lt;table class=&quot;table table-bordered&quot;&gt;</code></li>
<li>悬停表格<code>&lt;table class=&quot;table table-hover&quot;&gt;</code></li>
<li>精简表格<code>&lt;table class=&quot;table table-condensed&quot;&gt;</code></li>
<li>状态表格<code>active</code>、<code>success</code>、<code>info</code>、<code>warning</code>、<code>danger</code></li>
<li>隐藏某一行<code>&lt;tr class=&quot;sr-only&quot;&gt;</code></li>
<li>响应式表格<ul>
<li>表格父元素设置响应式，小于 <code>768px</code> 出现边框<br><code>&lt;div class=&quot;table-responsive&quot;&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>按钮</strong></p>
<ul>
<li>按钮标签<ul>
<li>转化成普通按钮</li>
<li><code>&lt;a href=&quot;###&quot; class=&quot;btn btn-default&quot;&gt;Link&lt;/a&gt;</code></li>
<li><code>&lt;button class=&quot;btn btn-default&quot;&gt;Button&lt;/button&gt;</code></li>
<li><code>&lt;input type=&quot;button&quot; class=&quot;btn btn-default&quot; value=&quot;input&quot;&gt;</code></li>
<li>注意：为了跨浏览器展现，尽量使用<code>button</code></li>
</ul>
</li>
<li>按钮大小<ul>
<li><code>.btn-lg</code>    这会让按钮看起来比较大。</li>
<li><code>.btn-sm</code>    这会让按钮看起来比较小。</li>
<li><code>.btn-xs</code>    这会让按钮看起来特别小。</li>
</ul>
</li>
<li>预定义样式<ul>
<li><code>.btn-default</code>    默认/标准按钮</li>
<li><code>.btn-primary</code>    首选项样式</li>
<li><code>.btn-success</code>    成功样式</li>
<li><code>.btn-info</code>一般信息样式</li>
<li><code>.btn-warning</code>    警告样式</li>
<li><code>.btn-danger</code>    危险样式</li>
<li><code>.btn-link</code>    链接样式</li>
</ul>
</li>
<li>块级按钮<ul>
<li><code>.btn-block</code>    块级按钮(拉伸至父元素100%的宽度)</li>
</ul>
</li>
<li>激活状态<ul>
<li><code>&lt;button class=&quot;btn active&quot;&gt;Button&lt;/button&gt;</code></li>
</ul>
</li>
<li>禁用状态<ul>
<li><code>&lt;button class=&quot;btn active disabled&quot;&gt;Button&lt;/button&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>图片</strong></p>
<ul>
<li><code>.img-rounded</code>   圆角 (<code>IE8</code> 不支持)</li>
<li><code>.img-circle</code> 圆形 (<code>IE8</code> 不支持)</li>
<li><code>.img-thumbnail</code>  缩略图功能</li>
<li><code>.img-responsive</code>    图片响应式 (将很好地扩展到父元素)</li>
</ul>
</li>
</ul>
<h4 id="四、栅格系统、表单"><a href="#四、栅格系统、表单" class="headerlink" title="四、栅格系统、表单"></a>四、栅格系统、表单</h4><hr>
<ul>
<li><p><strong>栅格系统</strong></p>
<ul>
<li>响应式网格系统随着屏幕或视口（<code>viewport</code>）尺寸的增加，系统会自动分为最多<code>12</code>列。</li>
<li>工作原理<ul>
<li>行必须放置在<code>.container</code>(固定宽度)或者<code>.container-fluid(100%宽度)</code>  <code>class</code>内，获得适当的对齐<code>(alignment)</code>和内边距<code>(padding)</code></li>
<li>内容放置在列中，唯有列可以是行的直接子元素</li>
<li>预定义的网格类，比如 <code>.row</code> 和 <code>.col-lg-4</code>，可用于快速创建网格布局</li>
<li>列通过内边距<code>（padding）</code>来创建列内容之间的间隙</li>
</ul>
</li>
<li>媒体查询<ul>
<li>超小设备（手机，小于 <code>768px</code>） </li>
<li>没有任何媒体查询相关的代码，因为这在 Bootstrap 中是默认的（还记得 <code>Bootstrap</code> 是移动设备优先的吗？）</li>
<li>小型设备（平板电脑，大于等于<code>768px</code>）<code>@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) { ... }</code></li>
<li>中型设备（台式电脑，大于等于<code>992px</code>）<code>@media (min-width: @screen-md-min) and (max-width: @screen-md-max) { ... }</code></li>
<li>大型设备（大台式电脑，大于等于<code>1200px</code>）<code>@media (min-width: @screen-lg-min) { ... }</code></li>
</ul>
</li>
<li><p>栅格参数</p>
<ul>
<li>超小屏幕 手机 (<code>&lt;768px</code>)    </li>
<li>小屏幕 平板 (<code>≥768px</code>)    </li>
<li>中等屏幕 桌面显示器 (<code>≥992px</code>)    </li>
<li>大屏幕 大桌面显示器 (<code>≥1200px</code>)</li>
<li>栅格系统行为     <ul>
<li>总是水平排列    </li>
<li>开始是堆叠在一起的，当大于这些阈值时将变为水平排列C</li>
</ul>
</li>
<li><code>.container</code> 最大宽度    <code>None</code>（自动）<code>750px</code>  <code>970px</code>  <code>1170px</code></li>
<li>类前缀 <code>.col-xs-</code>  <code>.col-sm-</code>     <code>.col-md-</code>      <code>.col-lg-</code></li>
<li>列（<code>column</code>）数    <code>12</code></li>
<li>最大列（<code>column</code>）宽    自动 <code>~62px</code> <code>~81px</code>    <code>~97px</code></li>
<li>间隙宽度     <code>30px</code> （每列左右均有 <code>15px</code>）</li>
</ul>
</li>
<li><p>四种屏幕分类全部激活</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6 col-xs-12 a"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6 col-xs-12 a"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3 col-md-4 col-sm-6 col-xs-12 a"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         ....</div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>可以设置列偏移，让中间保持空隙</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8"</span>&gt;</span>1-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-md-offset-1"</span>&gt;</span>10-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>可以嵌套，嵌满也是 12 列</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-9"</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8"</span>&gt;</span>1-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span>9-12<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3"</span>&gt;</span> 10-12 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>可以把两个列交换位置，<code>push</code> 向右移动（推），<code>pull</code> 向左移动（拉）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8 col-md-push-4"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-pull-8"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><strong>表单</strong></p>
<ul>
<li>垂直或基本表单</li>
<li>内联表单<ul>
<li>让表单左对齐浮动，并表现为 <code>inline-block</code>内联块结构<code>&lt;form class=&quot;form-inline&quot;&gt;</code><br>注：当小于 <code>768px</code>，会恢复独占样式</li>
</ul>
</li>
<li>水平表单<ul>
<li>让表单内的元素保持水平排列</li>
</ul>
</li>
<li>表单组合<ul>
<li>前后增加片段<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>￥<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>输入框、文本域</p>
<ul>
<li>原生的<code>HTML5</code>的<code>input</code>类型的支持</li>
<li>包括：<ul>
<li><code>text</code></li>
<li><code>password</code></li>
<li><code>datetime</code></li>
<li><code>datetime-local</code></li>
<li><code>date</code></li>
<li><code>month</code></li>
<li><code>time</code></li>
<li><code>week</code></li>
<li><code>number</code></li>
<li><code>email</code></li>
<li><code>url</code></li>
<li><code>search</code></li>
<li><code>tel</code></li>
<li><code>color</code></li>
</ul>
</li>
<li><code>&lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;文本输入&quot;&gt;</code></li>
<li><code>&lt;textarea class=&quot;form-control&quot; rows=&quot;3&quot;&gt;&lt;/textarea&gt;</code><ul>
<li>复选框（<code>Checkbox</code>）和单选框（<code>Radio</code>）<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>选项 1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"optionsRadios"</span> <span class="attr">id</span>=<span class="string">"optionsRadios1"</span></span></div><div class="line">	   <span class="attr">value</span>=<span class="string">"option1"</span> <span class="attr">checked</span>&gt; 选项 1</div><div class="line"> <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>内联的复选框和单选框</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"inlineCheckbox1"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 选项 1</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"optionsRadiosinline"</span> <span class="attr">value</span>=<span class="string">"option1"</span>&gt;</span> 选项 1</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>选择框    <code>multiple</code>多行显示</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">multiple</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>静态控件   <code>.form-control-static</code></p>
</li>
<li>表单控件状态<ul>
<li>输入框焦点</li>
<li>当输入框 <code>input</code> 接收到<code>:focus</code> 时，输入框的轮廓会被移除，同时应用 <code>box-shadow</code>。</li>
<li>禁用的输入框 <code>input</code></li>
<li>如果您想要禁用一个输入框 <code>input</code>，只需要简单地添加 <code>disabled</code> 属性，这不仅会禁用输入框，还会改变输入框的样式以及当鼠标的指针悬停在元素上时鼠标指针的样式。</li>
<li>禁用的字段集 <code>fieldset</code></li>
<li>对 <code>&lt;fieldset&gt;</code> 添加 <code>disabled</code> 属性来禁用<code>&lt;fieldset&gt;</code> 内的所有控件。</li>
<li>校验状态<ul>
<li><code>.has-warning</code>、<code>.has-error</code> 或 <code>.has-success</code> 类到这些控件的父元素即可。</li>
</ul>
</li>
<li>任何包含在此元素之内的 <code>.control-label</code>、<code>.form-control</code> 和 <code>.help-block</code> 元素都将接受这些校验状态的样式。</li>
</ul>
</li>
<li><p>表单帮助文本</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">""</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"help-block"</span>&gt;</span>一个较长的帮助文本块，超过一行，需要扩展到下一行。本实例中的帮助文本总共有两行。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>控件尺寸</p>
<ul>
<li><code>.input-lg</code>和<code>col-lg-*</code>来设置表单的高度和宽度<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control input-lg"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"input-lg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"col-lg-2"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-3"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"col-lg-3"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-4"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"col-lg-4"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="五、辅助类、响应式工具、菜单、图标"><a href="#五、辅助类、响应式工具、菜单、图标" class="headerlink" title="五、辅助类、响应式工具、菜单、图标"></a>五、辅助类、响应式工具、菜单、图标</h4><hr>
<h4 id="辅助类"><a href="#辅助类" class="headerlink" title="辅助类"></a>辅助类</h4><hr>
<ul>
<li><strong>文本</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted"</span>&gt;</span>本行内容是减弱的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-primary"</span>&gt;</span>本行内容带有一个 primary class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-success"</span>&gt;</span>本行内容带有一个 success class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-info"</span>&gt;</span>本行内容带有一个 info class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-warning"</span>&gt;</span>本行内容带有一个 warning class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>本行内容带有一个 danger class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>背景</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-primary"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-success"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-info"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-warning"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bg-danger"</span>&gt;</span>bootstrap课程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>关闭按钮   <code>close</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>下拉式菜单  <code>caret</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>浮动 <code>pull-left</code>   <code>pull-right</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left"</span>&gt;</span>向左快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right"</span>&gt;</span>向右快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>清除浮动   <code>clearfix</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>  <span class="attr">style</span>=<span class="string">"background: #D8D8D8;border: 1px solid #000;padding: 10px;"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left"</span> <span class="attr">style</span>=<span class="string">"background:#58D3F7;"</span>&gt;</span>向左快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right"</span> <span class="attr">style</span>=<span class="string">"background: #DA81F5;"</span>&gt;</span>向右快速浮动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>块级内容居中 <code>center-block</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center-block"</span> <span class="attr">style</span>=<span class="string">"width:200px;background-color:#ccc;"</span>&gt;</span></div><div class="line">	这是 center-block</div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>显示、隐藏  <code>show</code> <code>hide</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">style</span>=<span class="string">"padding: 91px 100px 19px 50px;"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"show"</span> <span class="attr">style</span>=<span class="string">"width:300px;background-color:#ccc;"</span>&gt;</span></div><div class="line">	这是 show class</div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hidden"</span> <span class="attr">style</span>=<span class="string">"width:200px;background-color:#ccc;"</span>&gt;</span></div><div class="line">	这是 hide class</div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>屏幕阅读器和键盘导航  <code>.sr-only</code> 来把元素对所有设备隐藏，除了屏幕阅读器    <code>.sr-only-focusable</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">style</span>=<span class="string">"padding: 91px 100px 19px 50px;"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-inline"</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>Email 地址<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Enter email"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"sr-only"</span> <span class="attr">for</span>=<span class="string">"pass"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"sr-only sr-only-focusable"</span> <span class="attr">href</span>=<span class="string">"#content"</span>&gt;</span>Skip to main content<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>响应式工具</strong></p>
<ul>
<li><code>visible-xs</code> <code>visible-sm</code>  <code>visible-md</code>  <code>visible-lg</code></li>
<li><code>hidden-xs</code>   <code>hidden-sm</code>   <code>hidden-md</code>   <code>hidden-lg</code></li>
<li>以超小屏幕（<code>xs</code>）为例，可用的 <code>.visible-*-*</code> 类是：<code>visible-xs-block</code>、<code>visible-xs-inline</code> 和 <code>visible-xs-inline-block</code></li>
<li><code>visible-print-block</code>    <code>visible-print-inline</code>    <code>visible-print-inline-block</code>  浏览器隐藏   打印机可见<pre><code>`hidden-print`  浏览器可见   打印机隐藏 `visible-print`
</code></pre></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"padding: 40px;"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-xs"</span>&gt;</span>特别小型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-xs"</span>&gt;</span>✔ 在特别小型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-sm"</span>&gt;</span>小型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-sm"</span>&gt;</span>✔ 在小型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-md"</span>&gt;</span>中型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-md"</span>&gt;</span>✔ 在中型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span> <span class="attr">style</span>=<span class="string">"background-color: #dedef8;border:1px solid #000;"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hidden-lg"</span>&gt;</span>大型<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"visible-lg"</span>&gt;</span>✔ 在大型设备上可见<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>字体图标</strong></p>
<ul>
<li>用法：<code>&lt;span class=&quot;glyphicon glyphicon-search&quot;&gt;&lt;/span&gt;</code></li>
</ul>
</li>
<li><p>下拉菜单</p>
<ul>
<li>基本的下拉菜单</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html5+css3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>对齐 <code>dropdown-menu-right</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown-header"</span>&gt;</span>Dropdown header<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>分隔线</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">...</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>禁用的菜单项</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu4"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Regular link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Disabled link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>让菜单默认显示 <code>&lt;div class=&quot;dropdown open&quot;&gt;</code></li>
</ul>
<h4 id="六、按钮、输入框组件"><a href="#六、按钮、输入框组件" class="headerlink" title="六、按钮、输入框组件"></a>六、按钮、输入框组件</h4><hr>
<h4 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h4><hr>
<ul>
<li><strong>基本的按钮组</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮工具栏</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-toolbar"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮的大小</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-lg"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-sm"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-xs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>嵌套</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>按钮 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>垂直的按钮组</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group-vertical"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>按钮 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>两端对齐排列的按钮组</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-justified"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-justified"</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;div class="btn-group"&gt;--&gt;</span>    为了浏览器兼容问题使用btn-group包裹</div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;div class="btn-group"&gt;--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;div class="btn-group"&gt;--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>按钮式下拉菜单</strong></p>
</li>
<li><p>单按钮下拉菜单   <code>btn-default</code>  <code>btn-success</code>  <code>btn-primary</code>   <code>btn-info</code>   <code>btn-danger</code>   <code>btn-warning</code></p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Default <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>分裂式按钮下拉菜单</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮下拉菜单的大小   <code>btn-lg</code>   <code>btn-sm</code>   <code>btn-xs</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Default <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>向上弹出式菜单    <code>dropup</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group dropup"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default btn-lg dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Default <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	 <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>输入框</strong></p>
</li>
<li><p>基本的输入框组</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>@<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>$<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>输入框组的大小    <code>input-group-lg</code>  <code>input-group-xs</code>  <code>input-group-sm</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group input-group-lg"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span>@<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>复选框和单选框插件</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></div><div class="line">			   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>/&gt;</span></div><div class="line">		   <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>/&gt;</span></div><div class="line">	   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮插件   <code>input-group-btn</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Go<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>按钮式下拉菜单</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>dropdown<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>分裂式按钮下拉菜单</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>dropdown<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">					  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">				  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="七、导航、导航条、面包屑导航组件"><a href="#七、导航、导航条、面包屑导航组件" class="headerlink" title="七、导航、导航条、面包屑导航组件"></a>七、导航、导航条、面包屑导航组件</h4><hr>
<p><strong>导航（标签） <code>nav</code></strong></p>
<ul>
<li>标签页   <code>nav-tabs</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>胶囊式标签页 <code>nav-pills</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>垂直的胶囊式标签页  <code>nav-stacked</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills nav-stacked"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>两端对齐的标签页 <code>nav-justified</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills nav-justified"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>禁用链接  <code>disabled</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带有下拉菜单的标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带下拉菜单的胶囊式标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>导航条 <code>navbar</code>    <code>&lt;nav&gt;</code>标签中添加 <code>class</code> <code>.navbar</code>、<code>.navbar-default</code></strong></p>
<ul>
<li>默认的导航栏</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>潭州教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>响应式的导航栏</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"navbar-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbar-collapse"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>潭州教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"navbar-collapse"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">			  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>导航栏中的表单</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"navbar-form navbar-right"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Search"</span>/&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>导航栏中的按钮   <code>navbar-btn</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default navbar-btn"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>导航栏中的文本    <code>navbar-text</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"navbar-text"</span>&gt;</span>Signed in as Thomas<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>固定到顶部、底部   <code>navbar-fixed-top</code>    <code>navbar-fixed-bottom</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default navbar-fixed-top"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>潭州教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Project<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span>Message <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">		  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>通讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>静态的顶部 <code>navbar-static-top</code></p>
</li>
<li><p>倒置的导航栏  带有黑色背景白色文本的倒置的导航栏    <code>navbar-inverse</code></p>
</li>
<li><p>面包屑导航</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件"><a href="#八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件" class="headerlink" title="八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件"></a>八、分页、标签、徽章、巨幕、页头、缩略图、警告框组件</h4><hr>
<p><strong>分页</strong></p>
<ul>
<li>默认的分页</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>禁用和激活状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;laquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;raquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>分页的尺寸  <code>pagination-lg</code>    <code>pagination-sm</code></p>
</li>
<li><p>翻页（<code>Pager</code>）</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>next<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>对齐的链接</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"previous"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;larr; previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>next &amp;rarr;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>可选的禁用状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pager"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"previous disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>&amp;larr; previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>next &amp;rarr;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>标签</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span>Default<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-primary"</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>Success<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-info"</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-warning"</span>&gt;</span>Warning<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>徽章<code>badge</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Messages <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Messages <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>巨幕 <code>jumbotron</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jumbotron"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world!!!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured</div><div class="line">            content or information.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Learn more<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>页头 <code>page-header</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-header"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Example page header</div><div class="line">  <span class="tag">&lt;<span class="name">small</span>&gt;</span>Subtext for header<span class="tag">&lt;/<span class="name">small</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>缩略图</strong></p>
<ul>
<li>默认样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-sm-6"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/kittens.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>自定义内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3 col-sm-6"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"thumbnail"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/kittens.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"caption"</span>&gt;</span>  <span class="comment">&lt;!--text-center--&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>缩略图标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">p</span>&gt;</span>一些示例文本。一些示例文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">			   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">			   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span>按钮 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		   <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>警告框</strong></p>
<ul>
<li>基本默认样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span>成功！很好地完成了提交。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-info"</span>&gt;</span>信息！请注意这个信息。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span>&gt;</span>警告！请不要提交。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger"</span>&gt;</span>错误！请进行一些更改。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>可关闭的警告框<code>&lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;&amp;times;&lt;/button&gt;</code></p>
</li>
<li><p>警告中的链接</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"alert-link"</span>&gt;</span>成功！很好地完成了提交。<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="九、进度条、媒体对象、列表组、面板、响应式插入组件"><a href="#九、进度条、媒体对象、列表组、面板、响应式插入组件" class="headerlink" title="九、进度条、媒体对象、列表组、面板、响应式插入组件"></a>九、进度条、媒体对象、列表组、面板、响应式插入组件</h4><hr>
<p><strong>进度条</strong></p>
<ul>
<li>默认的进度条</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>情景变化的进度条</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-info"</span> <span class="attr">style</span>=<span class="string">"width:60%;"</span>&gt;</span>60%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-success"</span> <span class="attr">style</span>=<span class="string">"width:25%;"</span>&gt;</span>25%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-danger"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-warning"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>条纹的进度条 <code>progress-striped</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress progress-striped"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>动画的进度条<code>active</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress progress-striped active"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>堆叠的进度条</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-warning"</span> <span class="attr">style</span>=<span class="string">"width:45%;"</span>&gt;</span>45%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress-bar progress-bar-success"</span> <span class="attr">style</span>=<span class="string">"width:25%;"</span>&gt;</span>25%<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>媒体对象</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"pull-left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"media-object"</span> <span class="attr">src</span>=<span class="string">"images/kittens.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"95"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media-body"</span>&gt;</span></div><div class="line">	   <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"media-heading"</span>&gt;</span>媒体标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">	   这是一些示例文本。这是一些示例文本。</div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>列表组</strong></p>
<ul>
<li>向列表组添加国徽</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>免费域名注册 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge pull-right"</span>&gt;</span>20<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>免费 Window 空间托管<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>每年更新成本<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>向列表组添加链接</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"list-group-item active"</span>&gt;</span>免费域名注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>免费 Window 空间托管<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>每年更新成本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>向列表组添加自定义内容</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Cras justo odio<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Dapibus ac facilisis in<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Morbi leo risus<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Porta ac consectetur ac<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>Vestibulum at eros<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>面板</strong></p>
<ul>
<li>面板标题</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>面板脚注</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-footer text-right"</span>&gt;</span>by zichen<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>面板主题</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-success"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-info"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-warning"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带表格的面板</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>Panel heading<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">td</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">	  <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>带列表组的面板</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-danger"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span>面板内容显示区域<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>免费域名注册<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>免费 Window 空间托管<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>图像的数量<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>24*7 支持<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span>每年更新成本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-footer text-right"</span>&gt;</span>by zichen<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>响应式嵌入组件</strong></p>
<ul>
<li>根据被嵌入内容的外部容器的宽度，自动创建一个固定的比例，从而让浏览器自动确定 内容的尺寸，能够在各种设备上缩放<br> 这些规则可以直接用于<code>&lt;iframe&gt;</code>、<code>&lt;embed&gt;</code>、<code>&lt;video&gt;</code>和<code>&lt;object&gt;</code>元素。</li>
<li><code>16:9</code> 响应式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>4:3</code> 响应式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-4by3"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">embed</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"embed-responsive-item"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-4by3"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"embed-responsive-item"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>well</code></strong></p>
<ul>
<li>基本的<code>well</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well"</span>&gt;</span>您好，我在大的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>尺寸大小 <code>well-lg</code>   <code>well-sm</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well well-lg"</span>&gt;</span>您好，我在大的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well well-sm"</span>&gt;</span>您好，我在小的 Well 中！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="十、弹出框、警告框、标签页和工具提示插件插件"><a href="#十、弹出框、警告框、标签页和工具提示插件插件" class="headerlink" title="十、弹出框、警告框、标签页和工具提示插件插件"></a>十、弹出框、警告框、标签页和工具提示插件插件</h4><hr>
<p><strong>弹出框</strong></p>
<ul>
<li>弹出框点击一个元素，弹出一个包含标题和内容的容器</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//基本用法</div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-danger"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-toggle</span>=<span class="string">"popover"</span> <span class="attr">title</span>=<span class="string">"弹出框"</span> <span class="attr">data-content</span>=<span class="string">"这是一个弹出框插件"</span>&gt;</span></div><div class="line">	点击弹出/隐藏弹出框</div><div class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>JavaScript</code> 初始化  <code>$(&#39;button&#39;).popover();</code></p>
</li>
<li><p><code>Popover</code> 插件中的属性：</p>
<ul>
<li><code>data-animation</code>   默认 <code>true</code>，在 <code>popover</code> 上应用一个 <code>CSS</code> <code>fade</code> 动画。 如果设置 <code>false</code>，则不应用。</li>
<li><code>data-html</code>        默认 <code>false</code>，不允许提示内容格式为 <code>html</code>。如果设置 为 <code>true</code>，则可以设置 <code>html</code> 格式的提示内容</li>
<li><code>data-placement</code>   默认值 <code>top</code>，还有 <code>bottom</code>、<code>left</code>、<code>right</code> 和 <code>auto</code>。 如果<code>auto</code>会自行调整合适的位置，如果是<code>auto</code> <code>left</code> 则会尽量在左边显示，但左边不行就靠右边。</li>
<li><code>data-selector</code>   默认 <code>false</code>，可以选择绑定指定的选择器。</li>
<li><code>data-original-title</code> 默认空字符串，弹出框的标题。优先级比 <code>title</code> 低</li>
<li><code>title</code>          默认字空符串，弹出框的标题。</li>
<li><code>data-trigger</code>     默认值 <code>click</code>，表示怎么触发 <code>popover</code>，其他值为： <code>hover</code>、<code>focus</code>、<code>manual</code>。多个值用空格隔开，manual 手动不能和其他同时设置。</li>
<li><code>data-delay</code>       默认值 <code>0</code>，延迟触发 <code>popover(毫秒)</code>，如果传数字则， 表示 <code>show</code>/<code>hide</code> 的毫秒数，如果传对象，结构为： {show:500,hide:100}</li>
<li><code>data-container</code>   默认值 <code>false</code>，将 <code>popover</code> 附加到特定的元素上。比 如组合按钮组提示，容器不够，可以附加 <code>body</code> 上。<code>container : &#39;body&#39;</code></li>
<li><code>data-template</code>   更改提示框的 <code>HTML</code> 提示语的模版，默认值为：</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popover"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"arrow"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"popover-title"</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"popover-content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>data-content</code>    默认值为空，弹出框的内容。</li>
<li><code>data-viewport</code>    设置外围容器的边际，具体代码看示例。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> $(<span class="string">'button'</span>).popover(&#123;</div><div class="line"><span class="attr">trigger</span>:<span class="string">"click"</span>,</div><div class="line"><span class="attr">placement</span>:<span class="string">"right"</span>,</div><div class="line"><span class="attr">viewport</span> : &#123;</div><div class="line">	<span class="attr">selector</span> : <span class="string">'#view'</span></div><div class="line">&#125;</div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>Popover</code> 插件中的方法：</p>
<ul>
<li>显示 <code>$(&#39;button&#39;).popover(&#39;show&#39;);</code></li>
<li>隐藏 <code>$(&#39;button&#39;).popover(&#39;hide&#39;);</code></li>
<li>反转显示和隐藏 <code>$(&#39;button&#39;).popover(&#39;toggle&#39;);</code></li>
<li>隐藏并销毁 <code>$(&#39;button&#39;).popover(&#39;destroy&#39;);</code></li>
</ul>
</li>
<li><p><code>Popover</code> 插件中的事件：</p>
<ul>
<li><code>show.bs.popover</code> 在调用 <code>show</code> 方法时触发</li>
<li><code>shown.bs.popover</code> 在显示整个弹窗时时触发</li>
<li><code>hide.bs.popover</code> 在调用 <code>hide</code> 方法时触发</li>
<li><code>hidden.bs.popover</code> 在完全关闭整个弹出时触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'show.bs.tab'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'调用 show 方法时触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>警告框</strong></p>
<ul>
<li>警告框即为点击小时的信息框</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//基本实例</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-warning"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">span</span>&gt;</span>&amp;times;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>警告：您的浏览器不支持！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>添加淡入淡出效果   <code>&lt;div class=&quot;alert alert-warning fade in&quot;&gt;</code></p>
</li>
<li><p>如果用 <code>JavaScript</code>，可以代替 <code>data-dismiss=&quot;alert&quot;</code></p>
</li>
<li><code>Alert</code> 插件中的方法：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.close'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     $(<span class="string">'#alert'</span>).alert(<span class="string">'close'</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><code>Alert</code> 插件中的事件：<ul>
<li><code>close.bs.alert</code>   当 <code>close</code> 方法被调用后立即触发</li>
<li><code>closed.bs.alert</code>  当警告框被完全关闭后立即触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#alert'</span>).on(<span class="string">'close.bs.alert'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'当 close 方法被触发时调用！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>标签页</strong></p>
<ul>
<li>标签页也就是通常所说的选项卡功能</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//基本用法</div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#html5"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#bootstrap"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>Bootstrap<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#jquery"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#extjs"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>ExtJS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-content"</span> <span class="attr">style</span>=<span class="string">"padding: 10px;"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane active"</span> <span class="attr">id</span>=<span class="string">"html5"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"bootstrap"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"jquery"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"extjs"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>可以设置淡入淡出效果 fade，而 in 表示首选的内容默认显示</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane fade in active"</span> <span class="attr">id</span>=<span class="string">"html5"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>也可以换成胶囊式</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>data-target</code>    使用 <code>data-target</code> 绑定或不绑定效果都是一样的</p>
</li>
<li><p><code>Tab</code> 插件中的方法：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#nav a'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">     e.preventDefault();</div><div class="line">     $(<span class="keyword">this</span>).tab(<span class="string">'show'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>Tab</code> 插件中的事件：<ul>
<li><code>show.bs.tab</code>      在调用 <code>tab</code> 方法时触发</li>
<li><code>shown.bs.tab</code>     在显示整个标签时触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#nav a'</span>).on(<span class="string">'show.bs.tab'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'调用 tab 时触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>工具提示</strong></p>
<ul>
<li>工具提示就是通过鼠标移动选定在特定的元素上时，显示相关的提示语</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//基本实例</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">data-toggle</span>=<span class="string">"tooltip"</span> <span class="attr">title</span>=<span class="string">"超文本标识符"</span>&gt;</span>HTML5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>JavaScript</code> 初始化 <code>$(&#39;#section&#39;).tooltip();</code></p>
</li>
<li><p><code>data-animation</code>   默认 <code>true</code>，在 <code>tooltip</code> 上应用一个 <code>CSS fade</code> 动画。 如果设置 <code>false</code>，则不应用。</p>
</li>
<li><code>data-html</code>       默认 <code>false</code>，不允许提示内容格式为 <code>html</code>。如果设置 为 <code>true</code>，则可以设置 <code>html</code> 格式的提示内容。</li>
<li><code>data-placement</code>   默认值 <code>top</code>，还有 <code>bottom</code>、<code>left</code>、<code>right</code> 和 <code>auto</code>。 如果<code>auto</code>会自行调整合适的位置，如果是<code>auto</code> <code>left</code> 则会尽量在左边显示，但左边不行就靠右边。</li>
<li><code>data-selector</code>    默认 <code>false</code>，可以选择绑定指定的选择器。 <code>rel=&quot;tooltip&quot;</code></li>
<li><code>data-original-title</code> 默认空字符串，提示语的内容。优先级比 title 低</li>
<li><code>title</code>           默认字空符串，提示语的内容。</li>
<li><code>data-trigger</code>     默认值 <code>hover</code> <code>foucs</code>，表示怎么触发 <code>tooltip</code>，其 他值为：<code>click</code>、<code>manual</code>。多个值用空格隔开，<code>manual</code> 手动不能和其他同时设置。</li>
<li><code>data-delay</code>       默认值 <code>0</code>，延迟触发 <code>tooltip(毫秒)</code>，如果传数字则， 表示 <code>show</code>/<code>hide</code> 的毫秒数，如果传对象，结构为：<code>{   show:500,hide:100   }</code></li>
<li><code>data-containe</code>r   默认值 <code>false</code>，将<code>tooltip</code> 附加到特定的元素上。比 如组合按钮组提示，容器不够，可以附加 <code>body</code> 上。<code>container : &#39;body&#39;</code></li>
<li><code>data-template</code>    更改提示框的 <code>HTML</code> 提示语的模版，默认值为：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tooltip'</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tooltip-arrow'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'tooltip-inner'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">rel</span>=<span class="string">"tooltip"</span></span></div><div class="line">	<span class="attr">data-toggle</span>=<span class="string">"tooltip"</span></div><div class="line">	<span class="attr">title</span>=<span class="string">"超文本标识符"</span></div><div class="line">	<span class="attr">data-animation</span>=<span class="string">"false"</span></div><div class="line">	<span class="attr">data-html</span>=<span class="string">"true"</span></div><div class="line">	<span class="attr">data-placement</span>=<span class="string">"auto"</span></div><div class="line">	<span class="attr">data-selector</span>=<span class="string">"a[rel=tooltip]"</span></div><div class="line">	<span class="attr">data-trigger</span>=<span class="string">"click"</span></div><div class="line">	<span class="attr">data-delay</span>=<span class="string">"500"</span></div><div class="line">	<span class="attr">data-template</span>=<span class="string">"&lt;b&gt;123&lt;/b&gt;"</span> &gt;HTML5</div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#selector a'</span>).tooltip(&#123;</div><div class="line">	<span class="attr">delay</span> : &#123;</div><div class="line">		<span class="attr">show</span> : <span class="number">500</span>,</div><div class="line">		<span class="attr">hide</span> : <span class="number">100</span>,</div><div class="line">	&#125;,</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>Tooltip</code>插件中的方法：</p>
<ul>
<li>显示   <code>$(&#39;#section a&#39;).tooltip(&#39;show&#39;);</code></li>
<li>隐藏              <code>$(&#39;#section a&#39;).tooltip(&#39;hide&#39;);</code></li>
<li>反转显示和隐藏    <code>$(&#39;#section a&#39;).tooltip(&#39;toggle&#39;);</code></li>
<li>隐藏并销毁        <code>$(&#39;#section a&#39;).tooltip(&#39;destroy&#39;);</code></li>
</ul>
</li>
<li><p><code>Tooltip</code>插件中的事件：</p>
<ul>
<li><code>show.bs.tooltip</code>  在 <code>show</code> 方法调用时立即触发</li>
<li><code>shown.bs.tooltip</code> 在提示框完全显示给用户之后触发</li>
<li><code>hide.bs.tooltip</code>  在 <code>hide</code> 方法调用时立即触发</li>
<li><code>hidden.bs.tooltip</code> 在提示框完全隐藏之后触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#select a'</span>).on(<span class="string">'show.bs.tooltip'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'调用 show 时触发！'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//data-selector</span></div><div class="line">$(<span class="string">"#selector"</span>).tooltip(&#123;</div><div class="line">     <span class="attr">selector</span>:<span class="string">"a[rel='tooltip']"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>data-container</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"超文本标记符"</span>&gt;</span>left<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"超文本标记符"</span>&gt;</span>middle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">title</span>=<span class="string">"超文本标记符"</span>&gt;</span>right<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"button"</span>).tooltip(&#123;</div><div class="line">    <span class="attr">delay</span>:&#123;</div><div class="line">        <span class="attr">show</span>:<span class="number">500</span>,</div><div class="line">        <span class="attr">hide</span>:<span class="number">100</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">container</span>:<span class="string">"body"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="十一、下拉菜单、滚动监听、按钮和折叠插件"><a href="#十一、下拉菜单、滚动监听、按钮和折叠插件" class="headerlink" title="十一、下拉菜单、滚动监听、按钮和折叠插件"></a>十一、下拉菜单、滚动监听、按钮和折叠插件</h4><hr>
<p><strong>下拉菜单插件</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span>&gt;</span> 下拉菜单 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>如果按钮在容器外部，可以通过 <code>data-target</code> 进行绑定</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">data-target</span>=<span class="string">"#dropdown"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>Dropdown</code>插件的方法：，但仍然需要 <code>data-*</code></p>
<ul>
<li><code>$(&#39;#btn&#39;).dropdown();</code></li>
<li><code>$(&#39;#btn&#39;).dropdown(&#39;toggle&#39;);</code></li>
</ul>
</li>
<li><p><code>Dropdown</code>插件的事件：</p>
<ul>
<li><code>show.bs.dropdown</code>    在 <code>show</code> 方法调用时立即触发。</li>
<li><code>shown.bs.dropdown</code>   在下拉菜单完全显示出来，并且等 <code>CSS</code> 动画完成之后 触发。</li>
<li><code>hide.bs.dropdown</code>     在 <code>hide</code> 方法调用时，但还未关闭隐藏时触发。</li>
<li><code>hidden.bs.dropdown</code>   在下拉菜单完全隐藏之后，并且等 <code>CSS</code> 动画完成之后 触发。</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#dropdown'</span>).on(<span class="string">'show.bs.dropdown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'在调用 show 方法时立即触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>滚动监听插件</strong></p>
<ul>
<li><code>data-offset</code>  默认值为 <code>10</code>，固定弄内容距滚动容器 <code>10</code> 像素以内， 就高亮显示所对应的菜单</li>
<li><code>data-spy</code>    设置 <code>scroll</code>，将设置滚动容器监听</li>
<li><p><code>data-target</code>  设置<code>#nav</code>，绑定指定监听的菜单</p>
</li>
<li><p><code>scroll</code>插件的方法：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#scroll"</span>).scrollspy(&#123;</div><div class="line">     <span class="comment">//offset: 0,</span></div><div class="line">     target: <span class="string">"#nav"</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>activate.bs.scrollspy</code>    每当一个新条目被激活后都将由滚动监听插件触 发此事件。</li>
<li>事件绑定在导航上</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#nav'</span>).on(<span class="string">'activate.bs.scrollspy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     alert(<span class="string">'新条目被激活后触发此事件！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>滚动监听还有一个更新容器 <code>DOM</code> 的方法<ul>
<li><code>refresh</code>  更新容器 <code>DOM</code> 的方法</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeSec</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    $(e).parents(<span class="string">'.sec'</span>).remove();</div><div class="line">    $(<span class="string">'#content'</span>).scrollspy(<span class="string">'refresh'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>按钮插件</strong></p>
<ul>
<li>单个切换</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"button"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span>单个切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><p>注：在 <code>Firefox</code> 多次页面加载时，按钮可能保持表单的禁用或选择状态。解决方案是： 添加<code>autocomplete=&quot;off&quot;。</code></p>
</li>
<li><p>单选按钮</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary active"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">checked</span>&gt;</span> 男</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 女</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>复选按钮</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span> <span class="attr">data-toggle</span>=<span class="string">"buttons"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary active"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">checked</span>&gt;</span> 音乐</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 体育</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 美术</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fa"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 电脑</div><div class="line">   <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>加载状态</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"myButton"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">data-loading-text</span>=<span class="string">"Loading..."</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span> 加载状态 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myButton'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> btn = $(<span class="keyword">this</span>).button(<span class="string">'loading'</span>);</div><div class="line">     setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">         btn.button(<span class="string">'reset'</span>);</div><div class="line">     &#125;, <span class="number">1000</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>Button</code> 插件中的 <code>button</code> 方法中有三个参数：<code>toggle</code>、<code>reset</code>、<code>string</code>(比如 <code>loading</code>、 <code>complete</code>)。</li>
<li>可代替    <code>data-toggle=&quot;button&quot;</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     $(<span class="keyword">this</span>).button(<span class="string">'toggle'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>折叠插件</strong></p>
<ul>
<li>基本实例</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#content"</span>&gt;</span> Bootstrap <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse"</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"well"</span>&gt;</span></div><div class="line">         Bootstrap 是 Twitter 推出的一个用于前端开发的开源工具包。它由 Twitter 的设计师 Mark Otto 和 Jacob Thornton 合作开发,是一个 CSS/HTML 框架。目 前,Bootstrap 最新版本为 3.0 。</div><div class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>Collapse</code>插件的方法：<code>hide</code>、<code>show</code>、<code>toggle</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     $(<span class="string">'#collapseOne'</span>).collapse(<span class="string">'toggle'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><code>Collapse</code>插件的事件：<ul>
<li><code>show.bs.collapse</code>     在 <code>show</code> 方法调用时立即触发</li>
<li><code>shown.bs.collapse</code>   折叠区完全显示出来是触发</li>
<li><code>hide.bs.collapse</code>    在 <code>hide</code> 方法调用时触发</li>
<li><code>hidden.bs.collapse</code>   该事件在折叠区域完全隐藏之后触发</li>
</ul>
</li>
</ul>
<h4 id="十二、模态框、轮播插件"><a href="#十二、模态框、轮播插件" class="headerlink" title="十二、模态框、轮播插件"></a>十二、模态框、轮播插件</h4><hr>
<p>  <strong>模态框插件</strong></p>
<ul>
<li>模态框的弹窗组件需要三层 <code>div</code> 容器元素，分别为 <code>modal</code>(模态声明层)、 <code>dialog</code>(窗口声明层)、<code>content</code>(内容层)</li>
<li>在内容层里面，还有三层，分别为 <code>header</code>(头部)、<code>body</code>(主体)、<code>footer</code>(注脚)</li>
<li>模态框去掉 <code>show</code>，增加一个 <code>id</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal"</span> <span class="attr">id</span>=<span class="string">"myModal"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 点击触发模态框显示 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-lg"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span>&gt;</span> 点击弹窗 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 弹窗的大小有三种，默认情况下是正常，还有 lg(大)和 sm(小) --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog modal-lg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog sm-lg"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 可设置淡入淡出效果 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>所有的插件，都是基于 <code>JavaScript</code>/<code>jQuery</code> 的。</li>
<li><p>四个要素：用法、参数、方法和事件。</p>
</li>
<li><p><strong>用法</strong></p>
<ul>
<li>可以通过 <code>data</code> 属性 <code>data-toggle</code>  <code>data-toggle=&quot;modal&quot;</code>  <code>data-target=&quot;#myModal&quot;</code></li>
<li><code>data-toggle</code> 表示触发类型</li>
<li><code>data-target</code> 表示触发的节点</li>
<li>如果不是使用<code>&lt;button&gt;</code>，而是<code>&lt;a&gt;</code>，其中 <code>data-target</code> 也可以使用 <code>href=&quot;#myModal&quot;</code>取代</li>
<li>建议使用 <code>data-target</code>。除了 <code>data-toggle</code> 和 <code>data-target</code> 两个声明 属性外，还有一些可以用选项</li>
</ul>
</li>
<li><p><strong>参数</strong></p>
<ul>
<li><code>data-backdrop</code>    布尔值或 <code>&#39;static&#39;</code>   默认值 <code>true</code>，表示背景存在黑灰透明 遮罩，且单击空白背景可关闭弹窗；</li>
<li>如果为 <code>false</code>，表示背景不存在黑灰 透明遮罩，且点击空白背景不可关闭 弹窗；</li>
<li>如果是字符串<code>&#39;static&#39;</code>，表示背景存 在黑灰透明遮罩，且点击空白不可关 闭弹窗。</li>
<li><code>data-keyboard</code>   布尔值 <code>true</code>   如果是 <code>true</code>，按 <code>esc</code> 键会关闭窗口； 如果是 <code>false</code>，按 <code>esc</code> 键会不会关闭。</li>
<li><code>data-show</code>   布尔值 <code>true</code>   如果是 <code>true</code>，初始化时，默认显示； 如果是 <code>false</code>，初始化时，默认隐藏。</li>
<li><code>remote</code>   <code>url</code> 路径 空值   如果值不是以<code>#</code>号开头，则表示一个 <code>url</code> 地址，加载 <code>url</code> 内容到 <code>modal-content</code> 容器里，并只加载一 次。</li>
<li>如果是<code>#</code>号，就是取代 <code>data-target</code> 的方法。</li>
<li>在 <code>JavaScript</code> 直接设置</li>
<li>通过 <code>jQuery</code> 方式声明</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myModal'</span>).modal(&#123;</div><div class="line">     <span class="attr">show</span> : <span class="literal">true</span>,</div><div class="line">     <span class="attr">backdrop</span> : <span class="literal">false</span>,</div><div class="line">     <span class="attr">keyboard</span> : <span class="literal">false</span>,</div><div class="line">     <span class="attr">remote</span> : <span class="string">'index.html'</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><strong>方法</strong><ul>
<li><code>toggle .modal(&#39;toggle&#39;)</code>; 触发时，反转切换弹窗状态</li>
<li><code>show .modal(&#39;show&#39;)</code>; 触发时，显示弹窗</li>
<li><code>hide .modal(&#39;hide&#39;)</code>; 触发时，关闭弹窗</li>
<li>点击显示弹窗<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	$(<span class="string">'#myModal'</span>).modal(<span class="string">'show'</span>);</div><div class="line">&#125;);</div><div class="line">$(<span class="string">'#myModal'</span>).modal(&#123;</div><div class="line">	   <span class="attr">show</span> : <span class="literal">false</span>,</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><strong>事件</strong></p>
<ul>
<li><code>show.bs.modal</code>    在<code>show</code> 方法调用时立即触发。</li>
<li><code>shown.bs.modal</code>  在模态框完全显示出来，并且等 <code>CSS</code> 动画完成之后触 发。</li>
<li><code>hide.bs.modal</code>    在 <code>hide</code> 方法调用时，但还未关闭隐藏时触发。</li>
<li><code>hidden.bs.modal</code>  在模态框完全隐藏之后，并且等 <code>CSS</code> 动画完成之后触 发</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myModal'</span>).on(<span class="string">'show.bs.modal'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">'在 show 方法调用时立即触发！'</span>);</div><div class="line">&#125;);</div><div class="line">$(<span class="string">'#myModal'</span>).on(<span class="string">'loaded.bs.modal'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">'远程数据加载完毕后触发！'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><strong>轮播图插件</strong></p>
<ul>
<li><code>data</code> 属性解释：<ul>
<li><code>data-slide</code> 接受关键字 <code>prev</code> 或 <code>next</code>，用来改变幻灯片相对于当前位置的位置；</li>
<li><code>data-slide-to</code> 来向轮播底部创建一个原始滑动索引，<code>data-slide-to=&quot;2&quot;</code>将把滑 动块移动到一个特定的索引，索引从 0 开始计数。</li>
<li><code>data-ride=&quot;carousel&quot;</code>属性用户标记轮播在页面加载时开始动画播放。</li>
<li><code>data-interval</code>   默认值 <code>5000</code>，幻灯片的等待时间(毫秒)。如果为 <code>false</code>，轮播将不会自动开始循环。</li>
<li><code>data-pause</code>       默认鼠标停留在幻灯片区域(<code>hover</code>)即暂停轮播，鼠 标离开即启动轮播。</li>
<li><code>data-wrap</code>        默认值 <code>true</code>，轮播是否持续循环。</li>
<li>如果在 <code>JavaScript</code> 调用就直接使用键值对方法，并去掉 <code>data-</code>；</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myCarousel'</span>).carousel(&#123;  <span class="comment">//设置自定义属性</span></div><div class="line">     interval : <span class="number">2000</span>,<span class="comment">//设置自动播放`/2` 秒</span></div><div class="line">     pause : <span class="string">'hover'</span>,<span class="comment">//设置暂停按钮的事件</span></div><div class="line">     wrap : <span class="literal">false</span>,   <span class="comment">//只播一次</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><strong>方法：</strong><ul>
<li><code>cycle</code> 循环各帧(默认从左到右)</li>
<li><code>pause</code> 停止轮播</li>
<li><code>number</code> 轮播到指定的图片上(小标从 <code>0</code> 开始，类似数组)</li>
<li><code>prev</code> 循环轮播到上一个项目</li>
<li><code>next</code> 循环轮播到下一个项目</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击按钮执行</span></div><div class="line">     $(<span class="string">'#myCarousel'</span>).carousel(<span class="string">'cycle'</span>); <span class="comment">//点击后，自动播放</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>事件</strong></p>
</li>
<li><p><code>slide.bs.carousel</code> 当调用 <code>slide</code> 实例方式时立即触发该事件。</p>
</li>
<li><code>slid.bs.carousel</code> 当轮播完成一个幻灯片触发该事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myCarousel'</span>).on(<span class="string">'slide.bs.carousel'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        alert(<span class="string">'当调用 slide 实例方式时立即触发'</span>);</div><div class="line">   &#125;);</div><div class="line">$(<span class="string">'#myCarousel'</span>).on(<span class="string">'slid.bs.carousel'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	alert(<span class="string">'当轮播完成一个幻灯片触发'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><hr>
<ul>
<li><a href="http://v3.bootcss.com/" target="_blank" rel="external">bootstrap中文教程</a></li>
<li><a href="https://hackerthemes.com/bootstrap-cheatsheet/" target="_blank" rel="external">bootstrap很方便的速查表-推荐</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、-bootstrap简介&quot;&gt;&lt;a href=&quot;#一、-bootstrap简介&quot; class=&quot;headerlink&quot; title=&quot;一、 bootstrap简介&quot;&gt;&lt;/a&gt;一、 &lt;code&gt;bootstrap&lt;/code&gt;简介&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;，来自 &lt;code&gt;Twitter&lt;/code&gt;（全国最大的微博），是目前最受欢迎的前端框架。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bootstrap&lt;/code&gt;下载及演示 &lt;a href=&quot;http://v3.bootcss.com&quot;&gt;http://v3.bootcss.com&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;什么是&lt;code&gt;bootstrap&lt;/code&gt;？&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;是基于 &lt;code&gt;HTML&lt;/code&gt;、&lt;code&gt;CSS&lt;/code&gt;、&lt;code&gt;JAVASCRIPT&lt;/code&gt; 的开源框架，它简洁、直观、强悍、灵活，使得 &lt;code&gt;Web&lt;/code&gt;开发更加快捷，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用于开发响应式布局、移动设备优先的 &lt;code&gt;WEB&lt;/code&gt;项目。&lt;/li&gt;
&lt;li&gt;为什么使用 &lt;code&gt;Bootstrap&lt;/code&gt;？&lt;ul&gt;
&lt;li&gt;跨设备&lt;/li&gt;
&lt;li&gt;跨浏览器（&lt;code&gt;chrome&lt;/code&gt;，&lt;code&gt;IE9&lt;/code&gt;以上，&lt;code&gt;Firefox&lt;/code&gt;，&lt;code&gt;Safari&lt;/code&gt;，&lt;code&gt;Opera&lt;/code&gt;…）&lt;/li&gt;
&lt;li&gt;响应式布局&lt;/li&gt;
&lt;li&gt;具有实用性强的组件&lt;/li&gt;
&lt;li&gt;内置&lt;code&gt;jquery&lt;/code&gt;插件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bootstrap&lt;/code&gt;的结构&lt;/li&gt;
&lt;li&gt;主要分为三大核心模块：&lt;code&gt;css&lt;/code&gt;、&lt;code&gt;js&lt;/code&gt;、&lt;code&gt;font&lt;/code&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="bootstrap" scheme="http://www.poetries.top/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>居中解决方案荟萃</title>
    <link href="http://www.poetries.top/2016/11/12/CSS-center-methods/"/>
    <id>http://www.poetries.top/2016/11/12/CSS-center-methods/</id>
    <published>2016-11-12T09:55:24.000Z</published>
    <updated>2016-11-26T10:58:54.806Z</updated>
    
    <content type="html"><![CDATA[<h3 id="水平居中方案"><a href="#水平居中方案" class="headerlink" title="水平居中方案"></a>水平居中方案</h3><hr>
<h4 id="方案一：text-align-inline-block"><a href="#方案一：text-align-inline-block" class="headerlink" title="方案一：text-align +  inline-block"></a>方案一：<code>text-align +  inline-block</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent1"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent1</span>&#123;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent1</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">display</span>: inline-block;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="方案二：margin：0-auto"><a href="#方案二：margin：0-auto" class="headerlink" title="方案二：margin：0 auto"></a>方案二：<code>margin：0 auto</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent2"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent2</span>&#123;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent2</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">display</span>: table;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案三：absolute-transform"><a href="#方案三：absolute-transform" class="headerlink" title="方案三：absolute+transform)"></a>方案三：<code>absolute+transform)</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent3"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent3</span>&#123;</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent3</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">position</span>: absolute;</div><div class="line">	<span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">	<span class="attribute">transform</span>: <span class="built_in">translateX</span>(-50%);</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案四：justify-content"><a href="#方案四：justify-content" class="headerlink" title="方案四：justify-content"></a>方案四：<code>justify-content</code></h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent4"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent4</span>&#123;</div><div class="line">	<span class="attribute">display</span>: flex;</div><div class="line">	<span class="attribute">justify-content</span>: center;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#ddd</span>;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#parent4</span> <span class="selector-class">.child</span>&#123;</div><div class="line">	<span class="attribute">margin</span>:<span class="number">0</span> auto;</div><div class="line">	<span class="attribute">background</span>:<span class="number">#666</span>;</div><div class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="垂直居中方案"><a href="#垂直居中方案" class="headerlink" title="垂直居中方案"></a>垂直居中方案</h3><hr>
<h4 id="方案一：-利用-line-height-实现垂直居中"><a href="#方案一：-利用-line-height-实现垂直居中" class="headerlink" title="方案一： 利用 line-height 实现垂直居中"></a>方案一： 利用 line-height 实现垂直居中</h4><hr>
<ul>
<li>这种方法适用于单行文本垂直居中,如果文本内容太长，出现了换行，换行后的内容会溢出</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example1"</span>&gt;</span></div><div class="line">    单行文字垂直居中</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example1</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案二-利用-display-table-实现垂直居中"><a href="#方案二-利用-display-table-实现垂直居中" class="headerlink" title="方案二 利用 display: table 实现垂直居中"></a>方案二 利用 display: table 实现垂直居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example2"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example2</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">display</span>: table;</div><div class="line">			<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example2</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">display</span>: table-cell;</div><div class="line">    <span class="attribute">vertical-align</span>: middle;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="number">#999</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案三-margin-填充-这种方法需要知道内外容器的大小"><a href="#方案三-margin-填充-这种方法需要知道内外容器的大小" class="headerlink" title="方案三 margin 填充 这种方法需要知道内外容器的大小"></a>方案三 margin 填充 这种方法需要知道内外容器的大小</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example3"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example3</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">			<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example3</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">margin-left</span>: auto;</div><div class="line">    <span class="attribute">margin-right</span>: auto;</div><div class="line">    <span class="attribute">margin-top</span>: <span class="built_in">calc</span>((100px - 50px)/<span class="number">2</span>);</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="number">#999</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案四：经典-absolute-布局上下文垂直居中"><a href="#方案四：经典-absolute-布局上下文垂直居中" class="headerlink" title="方案四：经典 absolute 布局上下文垂直居中"></a>方案四：经典 absolute 布局上下文垂直居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example4"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example4</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">		<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example4</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">margin-top</span>: -<span class="number">25px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: -<span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>:<span class="number">#999</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案五：absolute-transform"><a href="#方案五：absolute-transform" class="headerlink" title="方案五：absolute+transform"></a>方案五：absolute+transform</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example5"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>块区域垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#example5</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#161616</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#example5</span> <span class="selector-class">.inner</span>&#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#999</span>;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-50%) <span class="built_in">translateY</span>(-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案六-利用margin：auto-居中"><a href="#方案六-利用margin：auto-居中" class="headerlink" title="方案六 利用margin：auto 居中"></a>方案六 利用margin：auto 居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"expample6"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>Content here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#expample6</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">		<span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#expample6</span> <span class="selector-class">.inner</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#aaa</span>;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="方案七-利用-Flex布局-居中"><a href="#方案七-利用-Flex布局-居中" class="headerlink" title="方案七 利用 Flex布局 居中"></a>方案七 利用 Flex布局 居中</h4><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"expample7"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span>Content here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#expample7</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</div><div class="line">    <span class="attribute">display</span>: flex;</div><div class="line">    <span class="attribute">justify-content</span>: center;</div><div class="line">    <span class="attribute">align-items</span>: center;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#expample7</span> <span class="selector-class">.inner</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#aaa</span>;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;水平居中方案&quot;&gt;&lt;a href=&quot;#水平居中方案&quot; class=&quot;headerlink&quot; title=&quot;水平居中方案&quot;&gt;&lt;/a&gt;水平居中方案&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;方案一：text-align-inline-block&quot;&gt;&lt;a href=&quot;#方案一：text-align-inline-block&quot; class=&quot;headerlink&quot; title=&quot;方案一：text-align +  inline-block&quot;&gt;&lt;/a&gt;方案一：&lt;code&gt;text-align +  inline-block&lt;/code&gt;&lt;/h4&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;parent1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;child&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;水平居中&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#parent1&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#ddd&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#parent1&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.child&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;#fff&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
      <category term="居中" scheme="http://www.poetries.top/tags/%E5%B1%85%E4%B8%AD/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript&amp;&amp;PHP常用函数对比</title>
    <link href="http://www.poetries.top/2016/11/12/compare-js-php-func/"/>
    <id>http://www.poetries.top/2016/11/12/compare-js-php-func/</id>
    <published>2016-11-12T08:08:24.000Z</published>
    <updated>2016-11-26T10:58:54.814Z</updated>
    
    <content type="html"><![CDATA[<h4 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h4><hr>
<table>
<thead>
<tr>
<th></th>
<th>JavaScript</th>
<th>php</th>
</tr>
</thead>
<tbody>
<tr>
<td>获取字符串长度</td>
<td><code>字符串.length</code></td>
<td><code>strlen( 字符串 )</code>;</td>
</tr>
<tr>
<td>截取字符串</td>
<td><code>字符串.substr( 起始位 [,长度] )</code>;</td>
<td>substr( 字符串, 起始位 [,长度] );</td>
</tr>
<tr>
<td>字符串定位（子字符串 在字符串 中出现的位置）</td>
<td>字符串.indexOf( 子字符串  );<br>字符串.lastIndexOf( 子字符串 );</td>
<td>strpos( 字符串, 子字符串 );<br>strrpos( 字符串, 子字符串 );</td>
</tr>
<tr>
<td>拆分为数组</td>
<td>字符串.split( 分割符 );</td>
<td>explode( 分隔符, 字符串 );</td>
</tr>
<tr>
<td>转化为大写</td>
<td>字符串.toLowerCase();</td>
<td>strtoupper( 字符串 );</td>
</tr>
<tr>
<td>转化为小写</td>
<td>字符串.toUpperCase();</td>
<td>strtolower( 字符串 );</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h3 id="数组函数"><a href="#数组函数" class="headerlink" title="数组函数"></a>数组函数</h3><hr>
<table>
<thead>
<tr>
<th></th>
<th>JavaScript</th>
<th>php</th>
</tr>
</thead>
<tbody>
<tr>
<td>获取数组长度</td>
<td>数组.length;</td>
<td>count( 数组 ) 或  sizeof( 数组 );</td>
</tr>
<tr>
<td>连接为字符串</td>
<td>数组.join( 连接符 );</td>
<td>implode( 连接符, 数组 );</td>
</tr>
<tr>
<td>头部压入</td>
<td>数组.unshift( 元素1, 元素2… );</td>
<td>array_unshift( 数组, 元素1, 元素2… );</td>
</tr>
<tr>
<td>头部弹出</td>
<td>数组.shift();</td>
<td>array_shift( 数组 );</td>
</tr>
<tr>
<td>尾部压入</td>
<td>数组.push( 元素1, 元素2… ) ;</td>
<td>array_push( 数组 , 元素1, 元素2… );</td>
</tr>
<tr>
<td>尾部弹出</td>
<td>数组.pop();</td>
<td>array_pop( 数组 );</td>
</tr>
</tbody>
</table>
<h3 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h3><hr>
<table>
<thead>
<tr>
<th></th>
<th>JavaScript  月日时分秒均无前导零</th>
<th>php  以下月日时分秒均含前导零</th>
</tr>
</thead>
<tbody>
<tr>
<td>获取年份</td>
<td>new Date().getFullYear();</td>
<td>date( ‘Y’ );</td>
</tr>
<tr>
<td>获取月份</td>
<td>new Date().getMonth(); //0~11</td>
<td>date( ‘m’ );  //01~12</td>
</tr>
<tr>
<td>获取几号</td>
<td>new Date().getDate();</td>
<td>date( ‘d’ );</td>
</tr>
<tr>
<td>获取星期</td>
<td>new Date().getDay();  //0~6</td>
<td>date( ‘N’ );  //1~7</td>
</tr>
<tr>
<td>获取小时</td>
<td>new Date().getHours();</td>
<td>date( ‘H’ );</td>
</tr>
<tr>
<td>获取分钟</td>
<td>new Date().getMinutes();</td>
<td>date( ‘i’ );</td>
</tr>
<tr>
<td>获取秒</td>
<td>new Date().getSeconds();</td>
<td>date( ‘s’ );</td>
</tr>
<tr>
<td>获取时间戳</td>
<td>new Date().getTime()/1000;</td>
<td>time();</td>
</tr>
</tbody>
</table>
<h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><hr>
<table>
<thead>
<tr>
<th></th>
<th>JavaScript</th>
<th>php</th>
</tr>
</thead>
<tbody>
<tr>
<td>舍一取整</td>
<td>Math.floor( 变量 ) ;</td>
<td>floor( 变量 );</td>
</tr>
<tr>
<td>进一取整</td>
<td>Math.ceil( 变量 ) ;</td>
<td>ceil( 变量 );</td>
</tr>
<tr>
<td>随机数</td>
<td>Math.random(); //0~1</td>
<td>mt_rand( 起始, 终止 );</td>
</tr>
<tr>
<td>幂运算</td>
<td>Math.pow( 底数, 指数 );</td>
<td>pow( 底数, 指数 );</td>
</tr>
<tr>
<td>开平方</td>
<td>Math.sqrt( 变量 );</td>
<td>sqrt( 变量 );</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;字符函数&quot;&gt;&lt;a href=&quot;#字符函数&quot; class=&quot;headerlink&quot; title=&quot;字符函数&quot;&gt;&lt;/a&gt;字符函数&lt;/h4&gt;&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;JavaScript&lt;/th&gt;
&lt;th&gt;php&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;获取字符串长度&lt;/td&gt;
&lt;td&gt;&lt;code&gt;字符串.length&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;strlen( 字符串 )&lt;/code&gt;;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;截取字符串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;字符串.substr( 起始位 [,长度] )&lt;/code&gt;;&lt;/td&gt;
&lt;td&gt;substr( 字符串, 起始位 [,长度] );&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符串定位（子字符串 在字符串 中出现的位置）&lt;/td&gt;
&lt;td&gt;字符串.indexOf( 子字符串  );&lt;br&gt;字符串.lastIndexOf( 子字符串 );&lt;/td&gt;
&lt;td&gt;strpos( 字符串, 子字符串 );&lt;br&gt;strrpos( 字符串, 子字符串 );&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;拆分为数组&lt;/td&gt;
&lt;td&gt;字符串.split( 分割符 );&lt;/td&gt;
&lt;td&gt;explode( 分隔符, 字符串 );&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转化为大写&lt;/td&gt;
&lt;td&gt;字符串.toLowerCase();&lt;/td&gt;
&lt;td&gt;strtoupper( 字符串 );&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;转化为小写&lt;/td&gt;
&lt;td&gt;字符串.toUpperCase();&lt;/td&gt;
&lt;td&gt;strtolower( 字符串 );&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="PHP" scheme="http://www.poetries.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript常用的代码片段</title>
    <link href="http://www.poetries.top/2016/10/27/JavaScript-code-snippets/"/>
    <id>http://www.poetries.top/2016/10/27/JavaScript-code-snippets/</id>
    <published>2016-10-27T03:40:43.000Z</published>
    <updated>2016-11-26T10:58:54.810Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>转义特殊字符为html实体</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">HtmlEncode: function(str)&#123;</div><div class="line">	return str.replace(/&amp;/g, '&amp;').replace(/\"/g, '"').replace(/&lt;/g, '&lt;').replace(/&gt;/g, '&gt;').replace(/'/g, ''');</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<ul>
<li>验证是否为有效的手机电话号码</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">IsMobile: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> rp = <span class="regexp">/^1[3|4|5|7|8][0-9]\d&#123;4,8&#125;$/</span>;</div><div class="line">	<span class="keyword">return</span> rp.test(str);</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<ul>
<li>验证是否为有效的座机电话号码</li>
</ul>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">IsTel: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> rp = <span class="regexp">/^([0-9]&#123;3,4&#125;-)?[0-9]&#123;7,8&#125;$/</span>;</div><div class="line">	<span class="keyword">return</span> rp.test(str);</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<ul>
<li>判断是那种类型的浏览器</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">WhichBrowser: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> userAgent = navigator.userAgent;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> isOpera = userAgent.indexOf(<span class="string">"Opera"</span>) &gt; <span class="number">-1</span>;</div><div class="line">	<span class="keyword">var</span> isIE = userAgent.indexOf(<span class="string">"compatible"</span>) &gt; <span class="number">-1</span> &amp;&amp; userAgent.indexOf(<span class="string">"MSIE"</span>) &gt; <span class="number">-1</span> &amp;&amp; !isOpera;</div><div class="line">	<span class="keyword">var</span> isFF = userAgent.indexOf(<span class="string">"Firefox"</span>) &gt; <span class="number">-1</span>;</div><div class="line">	<span class="keyword">var</span> isCH = userAgent.indexOf(<span class="string">"Chrome"</span>) &gt; <span class="number">-1</span>;</div><div class="line">	<span class="keyword">var</span> isSafari = userAgent.indexOf(<span class="string">"Safari"</span>) &gt; <span class="number">-1</span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (isIE)&#123;</div><div class="line">		<span class="keyword">var</span> IE5 = IE55 = IE6 = IE7 = IE8 = <span class="literal">false</span>;</div><div class="line">		<span class="keyword">var</span> reIE = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"MSIE (\\d+\\.\\d+);"</span>);</div><div class="line">		reIE.test(userAgent);</div><div class="line">		<span class="keyword">var</span> fIEVersion = <span class="built_in">parseFloat</span>(<span class="built_in">RegExp</span>[<span class="string">"$1"</span>]);</div><div class="line">		IE55 = fIEVersion == <span class="number">5.5</span>;</div><div class="line">		IE6 = fIEVersion == <span class="number">6.0</span>;</div><div class="line">		IE7 = fIEVersion == <span class="number">7.0</span>;</div><div class="line">		IE8 = fIEVersion == <span class="number">8.0</span>;</div><div class="line">		<span class="keyword">if</span> (IE55) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"IE55"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (IE6) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"IE6"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (IE7) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"IE7"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (IE8) &#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"IE8"</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (isFF) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"Firefox"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (isCH) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"Chrome"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (isOpera) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"Opera"</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (isSafari) &#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"Safari"</span>;</div><div class="line">	&#125;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<ul>
<li>获取客户端浏览器cookie</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">GetCookie: <span class="function"><span class="keyword">function</span>(<span class="params">c_name</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">document</span>.cookie.length&gt;<span class="number">0</span>)&#123;</div><div class="line">		c_start = <span class="built_in">document</span>.cookie.indexOf(c_name + <span class="string">'='</span>);</div><div class="line">		<span class="keyword">if</span>(c_start != <span class="number">-1</span>)&#123;</div><div class="line">			c_start = c_start + c_name.length + <span class="number">1</span>;</div><div class="line">			c_end = <span class="built_in">document</span>.cookie.indexOf(<span class="string">';'</span>,c_start);</div><div class="line">			<span class="keyword">if</span> (c_end==<span class="number">-1</span>) c_end = <span class="built_in">document</span>.cookie.length;</div><div class="line">			<span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">document</span>.cookie.substring(c_start,c_end));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="string">''</span>;</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<ul>
<li>设置客户端浏览器cookie</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SetCookie: <span class="function"><span class="keyword">function</span>(<span class="params">c_name, value, expiredays</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> exdate = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">	exdate.setDate(exdate.getDate() + expiredays);</div><div class="line">	<span class="built_in">document</span>.cookie = c_name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + ((expiredays==<span class="literal">null</span>) ? <span class="string">""</span> : <span class="string">";expires="</span>+exdate.toGMTString());</div><div class="line">&#125;,</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>字符串长度截取</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cutstr</span>(<span class="params">str, len</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> temp,</div><div class="line">        icount = <span class="number">0</span>,</div><div class="line">        patrn = <span class="regexp">/[^\x00-\xff]/</span>，</div><div class="line">        strre = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (icount &lt; len - <span class="number">1</span>) &#123;</div><div class="line">            temp = str.substr(i, <span class="number">1</span>);</div><div class="line">                <span class="keyword">if</span> (patrn.exec(temp) == <span class="literal">null</span>) &#123;</div><div class="line">                   icount = icount + <span class="number">1</span></div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                icount = icount + <span class="number">2</span></div><div class="line">            &#125;</div><div class="line">            strre += temp</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> strre + <span class="string">"..."</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>替换全部</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.replaceAll = <span class="function"><span class="keyword">function</span>(<span class="params">s1, s2</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(s1, <span class="string">"gm"</span>), s2)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>清除空格</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> reExtraSpace = <span class="regexp">/^\s*(.*?)\s+$/</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(reExtraSpace, <span class="string">"$1"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>清除左空格/右空格</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ltrim</span>(<span class="params">s</span>)</span>&#123; <span class="keyword">return</span> s.replace( <span class="regexp">/^(\s*|　*)/</span>, <span class="string">""</span>); &#125; </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rtrim</span>(<span class="params">s</span>)</span>&#123; <span class="keyword">return</span> s.replace( <span class="regexp">/(\s*|　*)$/</span>, <span class="string">""</span>); &#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否以某个字符串开头</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.startWith = <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.indexOf(s) == <span class="number">0</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否以某个字符串结束</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.endWith = <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> d = <span class="keyword">this</span>.length - s.length;</div><div class="line">    <span class="keyword">return</span> (d &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">this</span>.lastIndexOf(s) == d)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>转义html标签</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">HtmlEncode</span>(<span class="params">text</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> text.replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;'</span>).replace(<span class="regexp">/\"/g</span>, <span class="string">'"'</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">'&lt;'</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">'&gt;'</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>时间日期格式转换</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Date</span>.prototype.Format = <span class="function"><span class="keyword">function</span>(<span class="params">formatStr</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> str = formatStr;</div><div class="line">    <span class="keyword">var</span> Week = [<span class="string">'日'</span>, <span class="string">'一'</span>, <span class="string">'二'</span>, <span class="string">'三'</span>, <span class="string">'四'</span>, <span class="string">'五'</span>, <span class="string">'六'</span>];</div><div class="line">    str = str.replace(<span class="regexp">/yyyy|YYYY/</span>, <span class="keyword">this</span>.getFullYear());</div><div class="line">    str = str.replace(<span class="regexp">/yy|YY/</span>, (<span class="keyword">this</span>.getYear() % <span class="number">100</span>) &gt; <span class="number">9</span> ? (<span class="keyword">this</span>.getYear() % <span class="number">100</span>).toString() : <span class="string">'0'</span> + (<span class="keyword">this</span>.getYear() % <span class="number">100</span>));</div><div class="line">    str = str.replace(<span class="regexp">/MM/</span>, (<span class="keyword">this</span>.getMonth() + <span class="number">1</span>) &gt; <span class="number">9</span> ? (<span class="keyword">this</span>.getMonth() + <span class="number">1</span>).toString() : <span class="string">'0'</span> + (<span class="keyword">this</span>.getMonth() + <span class="number">1</span>));</div><div class="line">    str = str.replace(<span class="regexp">/M/g</span>, (<span class="keyword">this</span>.getMonth() + <span class="number">1</span>));</div><div class="line">    str = str.replace(<span class="regexp">/w|W/g</span>, Week[<span class="keyword">this</span>.getDay()]);</div><div class="line">    str = str.replace(<span class="regexp">/dd|DD/</span>, <span class="keyword">this</span>.getDate() &gt; <span class="number">9</span> ? <span class="keyword">this</span>.getDate().toString() : <span class="string">'0'</span> + <span class="keyword">this</span>.getDate());</div><div class="line">    str = str.replace(<span class="regexp">/d|D/g</span>, <span class="keyword">this</span>.getDate());</div><div class="line">    str = str.replace(<span class="regexp">/hh|HH/</span>, <span class="keyword">this</span>.getHours() &gt; <span class="number">9</span> ? <span class="keyword">this</span>.getHours().toString() : <span class="string">'0'</span> + <span class="keyword">this</span>.getHours());</div><div class="line">    str = str.replace(<span class="regexp">/h|H/g</span>, <span class="keyword">this</span>.getHours());</div><div class="line">    str = str.replace(<span class="regexp">/mm/</span>, <span class="keyword">this</span>.getMinutes() &gt; <span class="number">9</span> ? <span class="keyword">this</span>.getMinutes().toString() : <span class="string">'0'</span> + <span class="keyword">this</span>.getMinutes());</div><div class="line">    str = str.replace(<span class="regexp">/m/g</span>, <span class="keyword">this</span>.getMinutes());</div><div class="line">    str = str.replace(<span class="regexp">/ss|SS/</span>, <span class="keyword">this</span>.getSeconds() &gt; <span class="number">9</span> ? <span class="keyword">this</span>.getSeconds().toString() : <span class="string">'0'</span> + <span class="keyword">this</span>.getSeconds());</div><div class="line">    str = str.replace(<span class="regexp">/s|S/g</span>, <span class="keyword">this</span>.getSeconds());</div><div class="line">    <span class="keyword">return</span> str</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否为数字类型</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isDigit</span>(<span class="params">value</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> patrn = <span class="regexp">/^[0-9]*$/</span>;</div><div class="line">    <span class="keyword">if</span> (patrn.exec(value) == <span class="literal">null</span> || value == <span class="string">""</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>设置cookie值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">name, value, Hours</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    <span class="keyword">var</span> offset = <span class="number">8</span>;</div><div class="line">    <span class="keyword">var</span> utc = d.getTime() + (d.getTimezoneOffset() * <span class="number">60000</span>);</div><div class="line">    <span class="keyword">var</span> nd = utc + (<span class="number">3600000</span> * offset);</div><div class="line">    <span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>(nd);</div><div class="line">    exp.setTime(exp.getTime() + Hours * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</div><div class="line">    <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + <span class="string">";path=/;expires="</span> + exp.toGMTString() + <span class="string">";domain=360doc.com;"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取cookie值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = <span class="built_in">document</span>.cookie.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span> + name + <span class="string">"=([^;]*)(;|$)"</span>));</div><div class="line">    <span class="keyword">if</span> (arr != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]);</div><div class="line">    <span class="keyword">return</span> <span class="literal">null</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>加入收藏夹</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AddFavorite</span>(<span class="params">sURL, sTitle</span>) </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="built_in">window</span>.external.addFavorite(sURL, sTitle)</div><div class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="built_in">window</span>.sidebar.addPanel(sTitle, sURL, <span class="string">""</span>)</div><div class="line">        &#125; <span class="keyword">catch</span>(e) &#123;</div><div class="line">            alert(<span class="string">"加入收藏失败，请使用Ctrl+D进行添加"</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>设为首页</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setHomepage</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.all) &#123;</div><div class="line">        <span class="built_in">document</span>.body.style.behavior = <span class="string">'url(#default#homepage)'</span>;</div><div class="line">        <span class="built_in">document</span>.body.setHomePage(<span class="string">'http://w3cboy.com'</span>)</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.sidebar) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.netscape) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                netscape.security.PrivilegeManager.enablePrivilege(<span class="string">"UniversalXPConnect"</span>)</div><div class="line">            &#125; <span class="keyword">catch</span>(e) &#123;</div><div class="line">                alert(<span class="string">"该操作被浏览器拒绝，如果想启用该功能，请在地址栏内输入 about:config,然后将项 signed.applets.codebase_principal_support 值该为true"</span>)</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">var</span> prefs = Components.classes[<span class="string">'@mozilla.org/preferences-service;1'</span>].getService(Components.interfaces.nsIPrefBranch);</div><div class="line">        prefs.setCharPref(<span class="string">'browser.startup.homepage'</span>, <span class="string">'http://w3cboy.com'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>加载样式文件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadStyle</span>(<span class="params">url</span>) </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="built_in">document</span>.createStyleSheet(url)</div><div class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</div><div class="line">        <span class="keyword">var</span> cssLink = <span class="built_in">document</span>.createElement(<span class="string">'link'</span>);</div><div class="line">        cssLink.rel = <span class="string">'stylesheet'</span>;</div><div class="line">        cssLink.type = <span class="string">'text/css'</span>;</div><div class="line">        cssLink.href = url;</div><div class="line">        <span class="keyword">var</span> head = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>];</div><div class="line">        head.appendChild(cssLink)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>返回脚本内容</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">evalscript</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(s.indexOf(<span class="string">'&lt;script'</span>) == <span class="number">-1</span>) <span class="keyword">return</span> s;</div><div class="line">    <span class="keyword">var</span> p = <span class="regexp">/&lt;script[^\&gt;]*?&gt;([^\x00]*?)&lt;\/script&gt;/ig</span>;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">while</span>(arr = p.exec(s)) &#123;</div><div class="line">        <span class="keyword">var</span> p1 = <span class="regexp">/&lt;script[^\&gt;]*?src=\"([^\&gt;]*?)\"[^\&gt;]*?(reload=\"1\")?(?:charset=\"([\w\-]+?)\")?&gt;&lt;\/script&gt;/i</span>;</div><div class="line">        <span class="keyword">var</span> arr1 = [];</div><div class="line">        arr1 = p1.exec(arr[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span>(arr1) &#123;</div><div class="line">            appendscript(arr1[<span class="number">1</span>], <span class="string">''</span>, arr1[<span class="number">2</span>], arr1[<span class="number">3</span>]);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            p1 = <span class="regexp">/&lt;script(.*?)&gt;([^\x00]+?)&lt;\/script&gt;/i</span>;</div><div class="line">            arr1 = p1.exec(arr[<span class="number">0</span>]);</div><div class="line">            appendscript(<span class="string">''</span>, arr1[<span class="number">2</span>], arr1[<span class="number">1</span>].indexOf(<span class="string">'reload='</span>) != <span class="number">-1</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> s;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>清除脚本内容</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">stripscript</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> s.replace(<span class="regexp">/&lt;script.*?&gt;.*?&lt;\/script&gt;/ig</span>, <span class="string">''</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>动态加载脚本文件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">appendscript</span>(<span class="params">src, text, reload, charset</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> id = hash(src + text);</div><div class="line">    <span class="keyword">if</span>(!reload &amp;&amp; in_array(id, evalscripts)) <span class="keyword">return</span>;</div><div class="line">    <span class="keyword">if</span>(reload &amp;&amp; $(id)) &#123;</div><div class="line">        $(id).parentNode.removeChild($(id));</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    evalscripts.push(id);</div><div class="line">    <span class="keyword">var</span> scriptNode = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</div><div class="line">    scriptNode.type = <span class="string">"text/javascript"</span>;</div><div class="line">    scriptNode.id = id;</div><div class="line">    scriptNode.charset = charset ? charset : (BROWSER.firefox ? <span class="built_in">document</span>.characterSet : <span class="built_in">document</span>.charset);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">if</span>(src) &#123;</div><div class="line">            scriptNode.src = src;</div><div class="line">            scriptNode.onloadDone = <span class="literal">false</span>;</div><div class="line">            scriptNode.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                scriptNode.onloadDone = <span class="literal">true</span>;</div><div class="line">                JSLOADED[src] = <span class="number">1</span>;</div><div class="line">             &#125;;</div><div class="line">             scriptNode.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                 <span class="keyword">if</span>((scriptNode.readyState == <span class="string">'loaded'</span> || scriptNode.readyState == <span class="string">'complete'</span>) &amp;&amp; !scriptNode.onloadDone) &#123;</div><div class="line">                    scriptNode.onloadDone = <span class="literal">true</span>;</div><div class="line">                    JSLOADED[src] = <span class="number">1</span>;</div><div class="line">                &#125;</div><div class="line">             &#125;;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(text)&#123;</div><div class="line">            scriptNode.text = text;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(scriptNode);</div><div class="line">    &#125; <span class="keyword">catch</span>(e) &#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>返回按ID检索的元素对象</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> !id ? <span class="literal">null</span> : <span class="built_in">document</span>.getElementById(id);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>跨浏览器绑定事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEventSamp</span>(<span class="params">obj,evt,fn</span>)</span>&#123; </div><div class="line">    <span class="keyword">if</span>(!oTarget)&#123;<span class="keyword">return</span>;&#125;</div><div class="line">    <span class="keyword">if</span> (obj.addEventListener) &#123; </div><div class="line">        obj.addEventListener(evt, fn, <span class="literal">false</span>); </div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj.attachEvent)&#123; </div><div class="line">        obj.attachEvent(<span class="string">'on'</span>+evt,fn); </div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        oTarget[<span class="string">"on"</span> + sEvtType] = fn;</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>跨浏览器删除事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">delEvt</span>(<span class="params">obj,evt,fn</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(!obj)&#123;<span class="keyword">return</span>;&#125;</div><div class="line">    <span class="keyword">if</span>(obj.addEventListener)&#123;</div><div class="line">        obj.addEventListener(evt,fn,<span class="literal">false</span>);</div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(oTarget.attachEvent)&#123;</div><div class="line">        obj.attachEvent(<span class="string">"on"</span> + evt,fn);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        obj[<span class="string">"on"</span> + evt] = fn;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>为元素添加on方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Element.prototype.on = Element.prototype.addEventListener;</div><div class="line"> </div><div class="line">NodeList.prototype.on = <span class="function"><span class="keyword">function</span> (<span class="params">event, fn</span>) </span>&#123;、</div><div class="line">    [][<span class="string">'forEach'</span>].call(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</div><div class="line">        el.on(event, fn);</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>为元素添加trigger方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Element.prototype.trigger = <span class="function"><span class="keyword">function</span> (<span class="params">type, data</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> event = <span class="built_in">document</span>.createEvent(<span class="string">'HTMLEvents'</span>);</div><div class="line">    event.initEvent(type, <span class="literal">true</span>, <span class="literal">true</span>);</div><div class="line">    event.data = data || &#123;&#125;;</div><div class="line">    event.eventName = type;</div><div class="line">    event.target = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">this</span>.dispatchEvent(event);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;;</div><div class="line"> </div><div class="line">NodeList.prototype.trigger = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">    [][<span class="string">'forEach'</span>].call(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</div><div class="line">        el[<span class="string">'trigger'</span>](event);</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>检验URL链接是否有效</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrlState</span>(<span class="params">URL</span>)</span>&#123; </div><div class="line">    <span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"microsoft.xmlhttp"</span>); </div><div class="line">    xmlhttp.Open(<span class="string">"GET"</span>,URL, <span class="literal">false</span>);  </div><div class="line">    <span class="keyword">try</span>&#123;  </div><div class="line">            xmlhttp.Send(); </div><div class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</div><div class="line">    &#125;<span class="keyword">finally</span>&#123; </div><div class="line">        <span class="keyword">var</span> result = xmlhttp.responseText; </div><div class="line">        <span class="keyword">if</span>(result)&#123;</div><div class="line">            <span class="keyword">if</span>(xmlhttp.Status==<span class="number">200</span>)&#123; </div><div class="line">                <span class="keyword">return</span>(<span class="literal">true</span>); </div><div class="line">             &#125;<span class="keyword">else</span>&#123; </div><div class="line">                   <span class="keyword">return</span>(<span class="literal">false</span>); </div><div class="line">             &#125; </div><div class="line">         &#125;<span class="keyword">else</span>&#123; </div><div class="line">             <span class="keyword">return</span>(<span class="literal">false</span>); </div><div class="line">         &#125; </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>格式化CSS样式代码</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatCss</span>(<span class="params">s</span>)</span>&#123;<span class="comment">//格式化代码</span></div><div class="line">    s = s.replace(<span class="regexp">/\s*([\&#123;\&#125;\:\;\,])\s*/g</span>, <span class="string">"$1"</span>);</div><div class="line">    s = s.replace(<span class="regexp">/;\s*;/g</span>, <span class="string">";"</span>); <span class="comment">//清除连续分号</span></div><div class="line">    s = s.replace(<span class="regexp">/\,[\s\.\#\d]*&#123;/g</span>, <span class="string">"&#123;"</span>);</div><div class="line">    s = s.replace(<span class="regexp">/([^\s])\&#123;([^\s])/g</span>, <span class="string">"$1 &#123;\n\t$2"</span>);</div><div class="line">    s = s.replace(<span class="regexp">/([^\s])\&#125;([^\n]*)/g</span>, <span class="string">"$1\n&#125;\n$2"</span>);</div><div class="line">    s = s.replace(<span class="regexp">/([^\s]);([^\s\&#125;])/g</span>, <span class="string">"$1;\n\t$2"</span>);</div><div class="line">    <span class="keyword">return</span> s;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>压缩CSS样式代码</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">compressCss</span> (<span class="params">s</span>) </span>&#123;<span class="comment">//压缩代码</span></div><div class="line">    s = s.replace(<span class="regexp">/\/\*(.|\n)*?\*\//g</span>, <span class="string">""</span>); <span class="comment">//删除注释</span></div><div class="line">    s = s.replace(<span class="regexp">/\s*([\&#123;\&#125;\:\;\,])\s*/g</span>, <span class="string">"$1"</span>);</div><div class="line">    s = s.replace(<span class="regexp">/\,[\s\.\#\d]*\&#123;/g</span>, <span class="string">"&#123;"</span>); <span class="comment">//容错处理</span></div><div class="line">    s = s.replace(<span class="regexp">/;\s*;/g</span>, <span class="string">";"</span>); <span class="comment">//清除连续分号</span></div><div class="line">    s = s.match(<span class="regexp">/^\s*(\S+(\s+\S+)*)\s*$/</span>); <span class="comment">//去掉首尾空白</span></div><div class="line">    <span class="keyword">return</span> (s == <span class="literal">null</span>) ? <span class="string">""</span> : s[<span class="number">1</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取当前路径</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> currentPageUrl = <span class="string">""</span>;</div><div class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>.href === <span class="string">"undefined"</span>) &#123;</div><div class="line">    currentPageUrl = <span class="built_in">document</span>.location.toString().toLowerCase();</div><div class="line">&#125;<span class="keyword">else</span> &#123;</div><div class="line">    currentPageUrl = <span class="keyword">this</span>.href.toString().toLowerCase();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否移动设备</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMobile</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>._isMobile === <span class="string">'boolean'</span>)&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._isMobile;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> screenWidth = <span class="keyword">this</span>.getScreenWidth();</div><div class="line">    <span class="keyword">var</span> fixViewPortsExperiment = rendererModel.runningExperiments.FixViewport ||rendererModel.runningExperiments.fixviewport;</div><div class="line">    <span class="keyword">var</span> fixViewPortsExperimentRunning = fixViewPortsExperiment &amp;&amp; (fixViewPortsExperiment.toLowerCase() === <span class="string">"new"</span>);</div><div class="line">    <span class="keyword">if</span>(!fixViewPortsExperiment)&#123;</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">this</span>.isAppleMobileDevice())&#123;</div><div class="line">            screenWidth = screenWidth/<span class="built_in">window</span>.devicePixelRatio;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> isMobileScreenSize = screenWidth &lt; <span class="number">600</span>;</div><div class="line">    <span class="keyword">var</span> isMobileUserAgent = <span class="literal">false</span>;</div><div class="line">    <span class="keyword">this</span>._isMobile = isMobileScreenSize &amp;&amp; <span class="keyword">this</span>.isTouchScreen();</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._isMobile;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否移动设备访问</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isMobileUserAgent</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="regexp">/iphone|ipod|android.*mobile|windows.*phone|blackberry.*mobile/i</span>.test(<span class="built_in">window</span>.navigator.userAgent.toLowerCase()));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否苹果移动设备访问</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAppleMobileDevice</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="regexp">/iphone|ipod|ipad|Macintosh/i</span>.test(navigator.userAgent.toLowerCase()));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否安卓移动设备访问</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isAndroidMobileDevice</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> (<span class="regexp">/android/i</span>.test(navigator.userAgent.toLowerCase()));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否Touch屏幕</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isTouchScreen</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> ((<span class="string">'ontouchstart'</span> <span class="keyword">in</span> <span class="built_in">window</span>) || <span class="built_in">window</span>.DocumentTouch &amp;&amp; <span class="built_in">document</span> <span class="keyword">instanceof</span> DocumentTouch);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>判断是否打开视窗</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">isViewportOpen</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> !!<span class="built_in">document</span>.getElementById(<span class="string">'wixMobileViewport'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取移动设备初始化大小</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getInitZoom</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>._initZoom)&#123;</div><div class="line">        <span class="keyword">var</span> screenWidth = <span class="built_in">Math</span>.min(screen.height, screen.width);</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.isAndroidMobileDevice() &amp;&amp; !<span class="keyword">this</span>.isNewChromeOnAndroid())&#123;</div><div class="line">            screenWidth = screenWidth/<span class="built_in">window</span>.devicePixelRatio;</div><div class="line">        &#125;</div><div class="line">            <span class="keyword">this</span>._initZoom = screenWidth /<span class="built_in">document</span>.body.offsetWidth;</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._initZoom;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取移动设备最大化大小</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getZoom</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> screenWidth = (<span class="built_in">Math</span>.abs(<span class="built_in">window</span>.orientation) === <span class="number">90</span>) ? <span class="built_in">Math</span>.max(screen.height, screen.width) : <span class="built_in">Math</span>.min(screen.height, screen.width);</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.isAndroidMobileDevice() &amp;&amp; !<span class="keyword">this</span>.isNewChromeOnAndroid())&#123;</div><div class="line">        screenWidth = screenWidth/<span class="built_in">window</span>.devicePixelRatio;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> FixViewPortsExperiment = rendererModel.runningExperiments.FixViewport || rendererModel.runningExperiments.fixviewport;</div><div class="line">    <span class="keyword">var</span> FixViewPortsExperimentRunning = FixViewPortsExperiment &amp;&amp; (FixViewPortsExperiment === <span class="string">"New"</span> || FixViewPortsExperiment === <span class="string">"new"</span>);</div><div class="line">    <span class="keyword">if</span>(FixViewPortsExperimentRunning)&#123;</div><div class="line">        <span class="keyword">return</span> screenWidth / <span class="built_in">window</span>.innerWidth;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> screenWidth / <span class="built_in">document</span>.body.offsetWidth;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取移动设备屏幕宽度</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getScreenWidth</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> smallerSide = <span class="built_in">Math</span>.min(screen.width, screen.height);</div><div class="line">    <span class="keyword">var</span> fixViewPortsExperiment = rendererModel.runningExperiments.FixViewport || rendererModel.runningExperiments.fixviewport;</div><div class="line">    <span class="keyword">var</span> fixViewPortsExperimentRunning = fixViewPortsExperiment &amp;&amp; (fixViewPortsExperiment.toLowerCase() === <span class="string">"new"</span>);</div><div class="line">    <span class="keyword">if</span>(fixViewPortsExperiment)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.isAndroidMobileDevice() &amp;&amp; !<span class="keyword">this</span>.isNewChromeOnAndroid())&#123;</div><div class="line">            smallerSide = smallerSide/<span class="built_in">window</span>.devicePixelRatio;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> smallerSide;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>完美判断是否为网址</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsURL</span>(<span class="params">strUrl</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> regular = <span class="regexp">/^\b(((https?|ftp):\/\/)?[-a-z0-9]+(\.[-a-z0-9]+)*\.(?:com|edu|gov|int|mil|net|org|biz|info|name|museum|asia|coop|aero|[a-z][a-z]|((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]\d)|\d))\b(\/[-a-z0-9_:\@&amp;?=+,.!\/~%\$]*)?)$/i</span></div><div class="line">    <span class="keyword">if</span> (regular.test(strUrl)) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;<span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取页面高度</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPageHeight</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> g = <span class="built_in">document</span>, a = g.body, f = g.documentElement, d = g.compatMode == <span class="string">"BackCompat"</span></div><div class="line">                    ? a</div><div class="line">                    : g.documentElement;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(f.scrollHeight, a.scrollHeight, d.clientHeight);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取页面scrollLeft</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPageScrollLeft</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="built_in">document</span>;</div><div class="line">    <span class="keyword">return</span> a.documentElement.scrollLeft || a.body.scrollLeft;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取页面可视宽度</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPageViewWidth</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>, a = d.compatMode == <span class="string">"BackCompat"</span></div><div class="line">                    ? d.body</div><div class="line">                    : d.documentElement;</div><div class="line">    <span class="keyword">return</span> a.clientWidth;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取页面宽度</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPageWidth</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> g = <span class="built_in">document</span>, a = g.body, f = g.documentElement, d = g.compatMode == <span class="string">"BackCompat"</span></div><div class="line">                    ? a</div><div class="line">                    : g.documentElement;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(f.scrollWidth, a.scrollWidth, d.clientWidth);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取页面scrollTop</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPageScrollTop</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="built_in">document</span>;</div><div class="line">    <span class="keyword">return</span> a.documentElement.scrollTop || a.body.scrollTop;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取页面可视高度</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPageViewHeight</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>, a = d.compatMode == <span class="string">"BackCompat"</span></div><div class="line">                    ? d.body</div><div class="line">                    : d.documentElement;</div><div class="line">    <span class="keyword">return</span> a.clientHeight;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>去掉url前缀</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeUrlPrefix</span>(<span class="params">a</span>)</span>&#123;</div><div class="line">    a=a.replace(<span class="regexp">/：/g</span>,<span class="string">":"</span>).replace(<span class="regexp">/．/g</span>,<span class="string">"."</span>).replace(<span class="regexp">/／/g</span>,<span class="string">"/"</span>);</div><div class="line">    <span class="keyword">while</span>(trim(a).toLowerCase().indexOf(<span class="string">"http://"</span>)==<span class="number">0</span>)&#123;</div><div class="line">        a=trim(a.replace(<span class="regexp">/http:\/\//i</span>,<span class="string">""</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>随机数时间戳</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniqueId</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> a=<span class="built_in">Math</span>.random,b=<span class="built_in">parseInt</span>;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Number</span>(<span class="keyword">new</span> <span class="built_in">Date</span>()).toString()+b(<span class="number">10</span>*a())+b(<span class="number">10</span>*a())+b(<span class="number">10</span>*a());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>全角半角转换</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//iCase: 0全到半，1半到全，其他不转化</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">chgCase</span>(<span class="params">sStr,iCase</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> sStr != <span class="string">"string"</span> || sStr.length &lt;= <span class="number">0</span> || !(iCase === <span class="number">0</span> || iCase == <span class="number">1</span>))&#123;</div><div class="line">        <span class="keyword">return</span> sStr;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> i,oRs=[],iCode;</div><div class="line">    <span class="keyword">if</span>(iCase)&#123;<span class="comment">/*半-&gt;全*/</span></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;sStr.length;i+=<span class="number">1</span>)&#123; </div><div class="line">            iCode = sStr.charCodeAt(i);</div><div class="line">            <span class="keyword">if</span>(iCode == <span class="number">32</span>)&#123;</div><div class="line">                iCode = <span class="number">12288</span>;                                </div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(iCode &lt; <span class="number">127</span>)&#123;</div><div class="line">                iCode += <span class="number">65248</span>;</div><div class="line">            &#125;</div><div class="line">                oRs.push(<span class="built_in">String</span>.fromCharCode(iCode)); </div><div class="line">            &#125;                </div><div class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">/*全-&gt;半*/</span></div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;sStr.length;i+=<span class="number">1</span>)&#123; </div><div class="line">            iCode = sStr.charCodeAt(i);</div><div class="line">            <span class="keyword">if</span>(iCode == <span class="number">12288</span>)&#123;</div><div class="line">                iCode = <span class="number">32</span>;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(iCode &gt; <span class="number">65280</span> &amp;&amp; iCode &lt; <span class="number">65375</span>)&#123;</div><div class="line">                iCode -= <span class="number">65248</span>;                                </div><div class="line">            &#125;</div><div class="line">                oRs.push(<span class="built_in">String</span>.fromCharCode(iCode)); </div><div class="line">         &#125;                </div><div class="line">    &#125;                </div><div class="line">    <span class="keyword">return</span> oRs.join(<span class="string">""</span>);                </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>确认是否键盘有效输入值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkKey</span>(<span class="params">iKey</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(iKey == <span class="number">32</span> || iKey == <span class="number">229</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*空格和异常*/</span></div><div class="line">    <span class="keyword">if</span>(iKey&gt;<span class="number">47</span> &amp;&amp; iKey &lt; <span class="number">58</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*数字*/</span></div><div class="line">    <span class="keyword">if</span>(iKey&gt;<span class="number">64</span> &amp;&amp; iKey &lt; <span class="number">91</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*字母*/</span></div><div class="line">    <span class="keyword">if</span>(iKey&gt;<span class="number">95</span> &amp;&amp; iKey &lt; <span class="number">108</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*数字键盘1*/</span></div><div class="line">    <span class="keyword">if</span>(iKey&gt;<span class="number">108</span> &amp;&amp; iKey &lt; <span class="number">112</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*数字键盘2*/</span></div><div class="line">    <span class="keyword">if</span>(iKey&gt;<span class="number">185</span> &amp;&amp; iKey &lt; <span class="number">193</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*符号1*/</span></div><div class="line">    <span class="keyword">if</span>(iKey&gt;<span class="number">218</span> &amp;&amp; iKey &lt; <span class="number">223</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;<span class="comment">/*符号2*/</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>日期格式化函数+调用方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span>(<span class="params">format</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> o = &#123;</div><div class="line">        <span class="string">"M+"</span> : <span class="keyword">this</span>.getMonth()+<span class="number">1</span>, <span class="comment">//month</span></div><div class="line">        <span class="string">"d+"</span> : <span class="keyword">this</span>.getDate(),    <span class="comment">//day</span></div><div class="line">        <span class="string">"h+"</span> : <span class="keyword">this</span>.getHours(),   <span class="comment">//hour</span></div><div class="line">        <span class="string">"m+"</span> : <span class="keyword">this</span>.getMinutes(), <span class="comment">//minute</span></div><div class="line">        <span class="string">"s+"</span> : <span class="keyword">this</span>.getSeconds(), <span class="comment">//second</span></div><div class="line">        <span class="string">"q+"</span> : <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth()+<span class="number">3</span>)/<span class="number">3</span>),  <span class="comment">//quarter</span></div><div class="line">        <span class="string">"S"</span> : <span class="keyword">this</span>.getMilliseconds() <span class="comment">//millisecond</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.test(format)) format=format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>,</div><div class="line">(<span class="keyword">this</span>.getFullYear()+<span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span>+ k +<span class="string">")"</span>).test(format))</div><div class="line">            format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>,<span class="built_in">RegExp</span>.$<span class="number">1.</span>length==<span class="number">1</span> ? o[k] :(<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> format;</div><div class="line">&#125;</div><div class="line">alert(<span class="keyword">new</span> <span class="built_in">Date</span>().format(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>));</div></pre></td></tr></table></figure>
<ul>
<li>常用的正则表达式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">//正整数</div><div class="line">/^[0-9]*[1-9][0-9]*$/;</div><div class="line">//负整数</div><div class="line">/^-[0-9]*[1-9][0-9]*$/;</div><div class="line">//正浮点数</div><div class="line">/^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$/;   </div><div class="line">//负浮点数</div><div class="line">/^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/;  </div><div class="line">//浮点数</div><div class="line">/^(-?\d+)(\.\d+)?$/;</div><div class="line">//email地址</div><div class="line">/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;</div><div class="line">//url地址</div><div class="line">/^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$/;</div><div class="line">或：^http:\/\/[A-Za-z0-9]+\.[A-Za-z0-9]+[\/=\?%\-&amp;_~`@[\]\&apos;:+!]*([^&lt;&gt;\&quot;\&quot;])*$ </div><div class="line">//年/月/日（年-月-日、年.月.日）</div><div class="line">/^(19|20)\d\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$/;</div><div class="line">//匹配中文字符</div><div class="line">/[\u4e00-\u9fa5]/;</div><div class="line">//匹配帐号是否合法(字母开头，允许5-10字节，允许字母数字下划线)</div><div class="line">/^[a-zA-Z][a-zA-Z0-9_]&#123;4,9&#125;$/;</div><div class="line">//匹配空白行的正则表达式</div><div class="line">/\n\s*\r/;</div><div class="line">//匹配中国邮政编码</div><div class="line">/[1-9]\d&#123;5&#125;(?!\d)/;</div><div class="line">//匹配身份证</div><div class="line">/\d&#123;15&#125;|\d&#123;18&#125;/;</div><div class="line">//匹配国内电话号码</div><div class="line">/(\d&#123;3&#125;-|\d&#123;4&#125;-)?(\d&#123;8&#125;|\d&#123;7&#125;)?/;</div><div class="line">//匹配IP地址</div><div class="line">/((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?)/;</div><div class="line">//匹配首尾空白字符的正则表达式</div><div class="line">/^\s*|\s*$/;</div><div class="line">//匹配HTML标记的正则表达式</div><div class="line">&lt; (\S*?)[^&gt;]*&gt;.*?|&lt; .*? /&gt;;</div><div class="line">//sql 语句</div><div class="line">^(select|drop|delete|create|update|insert).*$</div><div class="line">//提取信息中的网络链接</div><div class="line">(h|H)(r|R)(e|E)(f|F) *= *(&apos;|&quot;)?(\w|\\|\/|\.)+(&apos;|&quot;| *|&gt;)? </div><div class="line">//提取信息中的邮件地址</div><div class="line">\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)* </div><div class="line">//提取信息中的图片链接</div><div class="line">(s|S)(r|R)(c|C) *= *(&apos;|&quot;)?(\w|\\|\/|\.)+(&apos;|&quot;| *|&gt;)? </div><div class="line">//提取信息中的 IP 地址</div><div class="line">(\d+)\.(\d+)\.(\d+)\.(\d+)</div><div class="line">//取信息中的中国手机号码</div><div class="line">(86)*0*13\d&#123;9&#125; </div><div class="line">//提取信息中的中国邮政编码</div><div class="line">[1-9]&#123;1&#125;(\d+)&#123;5&#125; </div><div class="line">//提取信息中的浮点数（即小数）</div><div class="line">(-?\d*)\.?\d+ </div><div class="line">//提取信息中的任何数字</div><div class="line">(-?\d*)(\.\d+)?</div><div class="line">//电话区号</div><div class="line">^0\d&#123;2,3&#125;$</div><div class="line">//腾讯 QQ 号</div><div class="line">^[1-9]*[1-9][0-9]*$ </div><div class="line">//帐号（字母开头，允许 5-16 字节，允许字母数字下划线）</div><div class="line">^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$ </div><div class="line">//中文、英文、数字及下划线</div><div class="line">^[\u4e00-\u9fa5_a-zA-Z0-9]+$</div></pre></td></tr></table></figure>
<ul>
<li>返回顶部的通用方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">backTop</span>(<span class="params">btnId</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(btnId);</div><div class="line">    <span class="keyword">var</span> d = <span class="built_in">document</span>.documentElement;</div><div class="line">    <span class="keyword">var</span> b = <span class="built_in">document</span>.body;</div><div class="line">    <span class="built_in">window</span>.onscroll = set;</div><div class="line">    btn.style.display = <span class="string">"none"</span>;</div><div class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        btn.style.display = <span class="string">"none"</span>;</div><div class="line">        <span class="built_in">window</span>.onscroll = <span class="literal">null</span>;</div><div class="line">        <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            d.scrollTop -= <span class="built_in">Math</span>.ceil((d.scrollTop + b.scrollTop) * <span class="number">0.1</span>);</div><div class="line">            b.scrollTop -= <span class="built_in">Math</span>.ceil((d.scrollTop + b.scrollTop) * <span class="number">0.1</span>);</div><div class="line">            <span class="keyword">if</span> ((d.scrollTop + b.scrollTop) == <span class="number">0</span>) clearInterval(btn.timer, <span class="built_in">window</span>.onscroll = set);</div><div class="line">            &#125;, <span class="number">10</span>);</div><div class="line">    &#125;;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        btn.style.display = (d.scrollTop + b.scrollTop &gt; <span class="number">100</span>) ? <span class="string">'block'</span>: <span class="string">"none"</span></div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">backTop(<span class="string">'goTop'</span>);</div></pre></td></tr></table></figure>
<ul>
<li>获得URL中GET参数值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 用法：如果地址是 test.htm?t1=1&amp;t2=2&amp;t3=3, 那么能取得：GET["t1"], GET["t2"], GET["t3"]</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_get</span>(<span class="params"></span>)</span>&#123; </div><div class="line">    querystr = <span class="built_in">window</span>.location.href.split(<span class="string">"?"</span>)</div><div class="line">    <span class="keyword">if</span>(querystr[<span class="number">1</span>])&#123;</div><div class="line">        GETs = querystr[<span class="number">1</span>].split(<span class="string">"&amp;"</span>);</div><div class="line">        GET = [];</div><div class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GETs.length;i++)&#123;</div><div class="line">              tmp_arr = GETs.split(<span class="string">"="</span>)</div><div class="line">              key=tmp_arr[<span class="number">0</span>]</div><div class="line">              GET[key] = tmp_arr[<span class="number">1</span>]</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> querystr[<span class="number">1</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>打开一个窗体通用方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">openWindow</span>(<span class="params">url,windowName,width,height</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> x = <span class="built_in">parseInt</span>(screen.width / <span class="number">2.0</span>) - (width / <span class="number">2.0</span>); </div><div class="line">    <span class="keyword">var</span> y = <span class="built_in">parseInt</span>(screen.height / <span class="number">2.0</span>) - (height / <span class="number">2.0</span>);</div><div class="line">    <span class="keyword">var</span> isMSIE= (navigator.appName == <span class="string">"Microsoft Internet Explorer"</span>);</div><div class="line">    <span class="keyword">if</span> (isMSIE) &#123;</div><div class="line">        <span class="keyword">var</span> p = <span class="string">"resizable=1,location=no,scrollbars=no,width="</span>;</div><div class="line">        p = p+width;</div><div class="line">           p = p+<span class="string">",height="</span>;</div><div class="line">           p = p+height;</div><div class="line">        p = p+<span class="string">",left="</span>;</div><div class="line">        p = p+x;</div><div class="line">        p = p+<span class="string">",top="</span>;</div><div class="line">        p = p+y;</div><div class="line">        retval = <span class="built_in">window</span>.open(url, windowName, p);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">var</span> win = <span class="built_in">window</span>.open(url, <span class="string">"ZyiisPopup"</span>, <span class="string">"top="</span> + y + <span class="string">",left="</span> + x + <span class="string">",scrollbars="</span> + scrollbars + <span class="string">",dialog=yes,modal=yes,width="</span> + width + <span class="string">",height="</span> + height + <span class="string">",resizable=no"</span> );</div><div class="line">        <span class="built_in">eval</span>(<span class="string">"try &#123; win.resizeTo(width, height); &#125; catch(e) &#123; &#125;"</span>);</div><div class="line">        win.focus();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>提取页面代码中所有网址</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> aa = <span class="built_in">document</span>.documentElement.outerHTML.match(<span class="regexp">/(url\(|src=|href=)[\"\']*([^\"\'\(\)\&lt;\&gt;\[\] ]+)[\"\'\)]*|(http:\/\/[\w\-\.]+[^\"\'\(\)\&lt;\&gt;\[\] ]+)/ig</span>).join(<span class="string">"\r\n"</span>).replace(<span class="regexp">/^(src=|href=|url\()[\"\']*|[\"\'\&gt;\) ]*$/igm</span>,<span class="string">""</span>);</div><div class="line">alert(aa);</div></pre></td></tr></table></figure>
<ul>
<li>清除相同的数组</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.unique=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> x=<span class="keyword">this</span>.split(<span class="regexp">/[\r\n]+/</span>);</div><div class="line">    <span class="keyword">var</span> y=<span class="string">''</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;x.length;i++)&#123;</div><div class="line">        <span class="keyword">if</span>(!<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^"</span>+x.replace(<span class="regexp">/([^\w])/ig</span>,<span class="string">"\\$1"</span>)+<span class="string">"$"</span>,<span class="string">"igm"</span>).test(y))&#123;</div><div class="line">            y+=x+<span class="string">"\r\n"</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> y</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>按字母排序，对每行进行数组排序</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetSort</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> text=K1.value.split(<span class="regexp">/[\r\n]/</span>).sort().join(<span class="string">"\r\n"</span>);<span class="comment">//顺序</span></div><div class="line">    <span class="keyword">var</span> test=K1.value.split(<span class="regexp">/[\r\n]/</span>).sort().reverse().join(<span class="string">"\r\n"</span>);<span class="comment">//反序</span></div><div class="line">    K1.value=K1.value!=text?text:test;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>清除html代码中的脚本</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">clear_script</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    K1.value=K1.value.replace(<span class="regexp">/&lt;script.*?&gt;[\s\S]*?&lt;\/script&gt;|\s+on[a-zA-Z]&#123;3,16&#125;\s?=\s?"[\s\S]*?"|\s+on[a-zA-Z]&#123;3,16&#125;\s?=\s?'[\s\S]*?'|\s+on[a-zA-Z]&#123;3,16&#125;\s?=[^ &gt;]+/ig</span>,<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line">动态执行JavaScript脚本</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">javascript</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">try</span>&#123;</div><div class="line">      <span class="built_in">eval</span>(K1.value);</div><div class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</div><div class="line">      alert(e.message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>金额大写转换函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">transform</span>(<span class="params">tranvalue</span>) </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">var</span> i = <span class="number">1</span>;</div><div class="line">        <span class="keyword">var</span> dw2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">""</span>, <span class="string">"万"</span>, <span class="string">"亿"</span>); <span class="comment">//大单位</span></div><div class="line">        <span class="keyword">var</span> dw1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"拾"</span>, <span class="string">"佰"</span>, <span class="string">"仟"</span>); <span class="comment">//小单位</span></div><div class="line">        <span class="keyword">var</span> dw = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"零"</span>, <span class="string">"壹"</span>, <span class="string">"贰"</span>, <span class="string">"叁"</span>, <span class="string">"肆"</span>, <span class="string">"伍"</span>, <span class="string">"陆"</span>, <span class="string">"柒"</span>, <span class="string">"捌"</span>, <span class="string">"玖"</span>); <span class="comment">//整数部分用</span></div><div class="line">        <span class="comment">//以下是小写转换成大写显示在合计大写的文本框中     </span></div><div class="line">        <span class="comment">//分离整数与小数</span></div><div class="line">        <span class="keyword">var</span> source = splits(tranvalue);</div><div class="line">        <span class="keyword">var</span> num = source[<span class="number">0</span>];</div><div class="line">        <span class="keyword">var</span> dig = source[<span class="number">1</span>];</div><div class="line">        <span class="comment">//转换整数部分</span></div><div class="line">        <span class="keyword">var</span> k1 = <span class="number">0</span>; <span class="comment">//计小单位</span></div><div class="line">        <span class="keyword">var</span> k2 = <span class="number">0</span>; <span class="comment">//计大单位</span></div><div class="line">        <span class="keyword">var</span> sum = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line">        <span class="keyword">var</span> len = source[<span class="number">0</span>].length; <span class="comment">//整数的长度</span></div><div class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= len; i++) &#123;</div><div class="line">              <span class="keyword">var</span> n = source[<span class="number">0</span>].charAt(len - i); <span class="comment">//取得某个位数上的数字</span></div><div class="line">              <span class="keyword">var</span> bn = <span class="number">0</span>;</div><div class="line">              <span class="keyword">if</span> (len - i - <span class="number">1</span> &gt;= <span class="number">0</span>) &#123;</div><div class="line">                bn = source[<span class="number">0</span>].charAt(len - i - <span class="number">1</span>); <span class="comment">//取得某个位数前一位上的数字</span></div><div class="line">              &#125;</div><div class="line">              sum = sum + <span class="built_in">Number</span>(n);</div><div class="line">              <span class="keyword">if</span> (sum != <span class="number">0</span>) &#123;</div><div class="line">                str = dw[<span class="built_in">Number</span>(n)].concat(str); <span class="comment">//取得该数字对应的大写数字，并插入到str字符串的前面</span></div><div class="line">                <span class="keyword">if</span> (n == <span class="string">'0'</span>) sum = <span class="number">0</span>;</div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (len - i - <span class="number">1</span> &gt;= <span class="number">0</span>) &#123; <span class="comment">//在数字范围内</span></div><div class="line">                <span class="keyword">if</span> (k1 != <span class="number">3</span>) &#123; <span class="comment">//加小单位</span></div><div class="line">                      <span class="keyword">if</span> (bn != <span class="number">0</span>) &#123;</div><div class="line">                        str = dw1[k1].concat(str);</div><div class="line">                      &#125;</div><div class="line">                      k1++;</div><div class="line">                &#125; <span class="keyword">else</span> &#123; <span class="comment">//不加小单位，加大单位</span></div><div class="line">                      k1 = <span class="number">0</span>;</div><div class="line">                      <span class="keyword">var</span> temp = str.charAt(<span class="number">0</span>);</div><div class="line">                      <span class="keyword">if</span> (temp == <span class="string">"万"</span> || temp == <span class="string">"亿"</span>) <span class="comment">//若大单位前没有数字则舍去大单位</span></div><div class="line">                      str = str.substr(<span class="number">1</span>, str.length - <span class="number">1</span>);</div><div class="line">                      str = dw2[k2].concat(str);</div><div class="line">                      sum = <span class="number">0</span>;</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (k1 == <span class="number">3</span>)&#123; <span class="comment">//小单位到千则大单位进一</span></div><div class="line">                k2++;</div><div class="line">              &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//转换小数部分</span></div><div class="line">        <span class="keyword">var</span> strdig = <span class="string">""</span>;</div><div class="line">        <span class="keyword">if</span> (dig != <span class="string">""</span>) &#123;</div><div class="line">              <span class="keyword">var</span> n = dig.charAt(<span class="number">0</span>);</div><div class="line">              <span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</div><div class="line">                strdig += dw[<span class="built_in">Number</span>(n)] + <span class="string">"角"</span>; <span class="comment">//加数字</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">var</span> n = dig.charAt(<span class="number">1</span>);</div><div class="line">              <span class="keyword">if</span> (n != <span class="number">0</span>) &#123;</div><div class="line">                strdig += dw[<span class="built_in">Number</span>(n)] + <span class="string">"分"</span>; <span class="comment">//加数字</span></div><div class="line">              &#125;</div><div class="line">        &#125;</div><div class="line">        str += <span class="string">"元"</span> + strdig;</div><div class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"0元"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> str;</div><div class="line">&#125;</div><div class="line"><span class="comment">//拆分整数与小数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">splits</span>(<span class="params">tranvalue</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> value = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">''</span>, <span class="string">''</span>);</div><div class="line">    temp = tranvalue.split(<span class="string">"."</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; temp.length; i++) &#123;</div><div class="line">        value = temp;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取窗体可见范围的宽与高</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getViewSize</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> de=<span class="built_in">document</span>.documentElement;</div><div class="line">    <span class="keyword">var</span> db=<span class="built_in">document</span>.body;</div><div class="line">    <span class="keyword">var</span> viewW=de.clientWidth==<span class="number">0</span> ?  db.clientWidth : de.clientWidth;</div><div class="line">    <span class="keyword">var</span> viewH=de.clientHeight==<span class="number">0</span> ?  db.clientHeight : de.clientHeight;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Array</span>(viewW ,viewH);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;转义特殊字符为html实体&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;HtmlEncode: function(str)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	return str.replace(/&amp;amp;/g, &#39;&amp;amp;&#39;).replace(/\&quot;/g, &#39;&quot;&#39;).replace(/&amp;lt;/g, &#39;&amp;lt;&#39;).replace(/&amp;gt;/g, &#39;&amp;gt;&#39;).replace(/&#39;/g, &#39;&#39;&#39;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;验证是否为有效的手机电话号码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;IsMobile: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;str&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rp = &lt;span class=&quot;regexp&quot;&gt;/^1[3|4|5|7|8][0-9]\d&amp;#123;4,8&amp;#125;$/&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rp.test(str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;验证是否为有效的座机电话号码&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="Snippet" scheme="http://www.poetries.top/tags/Snippet/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记总结篇</title>
    <link href="http://www.poetries.top/2016/10/20/review-jQuery/"/>
    <id>http://www.poetries.top/2016/10/20/review-jQuery/</id>
    <published>2016-10-20T01:35:08.000Z</published>
    <updated>2016-11-26T10:58:54.818Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文链接 <a href="http://blog.poetries.top/2016/10/20/review-jQuery" target="_blank" rel="external">http://blog.poetries.top/2016/10/20/review-jQuery</a></p>
</blockquote>
<p>首先，来了解一下<code>jQuery</code>学习的整体思路</p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery1.png" alt="jQuery系统学习篇"><br><a id="more"></a></p>
<ul>
<li><a href="http://pan.baidu.com/s/1slq212l" target="_blank" rel="external">XMind源文件提供参考下载</a></li>
</ul>
<h4 id="第一节-jQuery初步认知"><a href="#第一节-jQuery初步认知" class="headerlink" title="第一节 jQuery初步认知"></a>第一节 jQuery初步认知</h4><hr>
<h5 id="jQuery概述"><a href="#jQuery概述" class="headerlink" title="jQuery概述"></a>jQuery概述</h5><hr>
<ul>
<li><p><strong><code>JQuery</code>概念</strong></p>
<ul>
<li><code>javascript</code>概念<ul>
<li>基于<code>Js</code>语言的<code>API</code>和语法组织逻辑，通过内置<code>window</code>和<code>document</code>对象，来操作内存中的<code>DOM</code>元素</li>
</ul>
</li>
<li><code>JQuery</code>概念<ul>
<li>基于<code>javascript</code>的，同上，提高了代码的效率</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>jQuery</code>是什么:</strong></p>
<ul>
<li>是一个<code>javascript</code>代码仓库，我们称之为<code>javascript</code>框架。</li>
<li>是一个快速的简洁的<code>javascript</code>框架，可以简化查询<code>DOM</code>对象、处理事件、制作动画、处理<code>Ajax</code>交互过程。</li>
<li><strong>它可以帮我们做什么(有什么优势)</strong><ul>
<li>轻量级、体积小，使用灵巧(只需引入一个<code>js</code>文件)</li>
<li>强大的选择器</li>
<li>出色的<code>DOM</code>操作的封装</li>
<li>出色的浏览器兼容性</li>
<li>可靠的事件处理机制</li>
<li>完善的<code>Ajax</code></li>
<li>链式操作、隐式迭代</li>
<li>方便的选择页面元素(模仿<code>CSS</code>选择器更精确、灵活)</li>
<li>动态更改页面样式/页面内容(操作<code>DOM</code>，动态添加、移除样式)</li>
<li>控制响应事件(动态添加响应事件)</li>
<li>提供基本网页特效(提供已封装的网页特效方法)</li>
<li>快速实现通信(<code>ajax</code>)</li>
<li>易扩展、插件丰富</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>如何引入<code>JQuery</code>包</strong></p>
<ul>
<li>引入本地的<code>JQuery</code></li>
<li>引入<code>Google</code>在线提供的库文件（稳定可靠高速）</li>
<li><p>使用<code>Google</code>提供的<code>API</code>导入 <code>&lt;script type=“text/javascript” src=“jquery.js”&gt;&lt;/script&gt;</code></p>
</li>
<li><p>写第一个<code>JQUery</code>案例</p>
<ul>
<li>解释:在<code>JQuery</code>库中，<code>$</code>是<code>JQuery</code>的别名，<code>$()</code>等效于就<code>jQuery()</code></li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script type=“text/javascript” src=“”&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script type=“text/javascript”&gt;</div><div class="line">	$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		alert(“jQuery 你好!”);</div><div class="line">	&#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p><strong>讲解<code>$(function(){})</code>;</strong></p>
<ul>
<li><code>$</code>是<code>jQuery</code>别名。如<code>$()</code>也可<code>jQuery()</code>这样写,相当于页面初始化函数，当页面加载完毕，会执行<code>jQuery()</code>。</li>
<li>希望在做所有事情之前，<code>JQuery</code>操作<code>DOM</code>文档。必须确保在<code>DOM</code>载入完毕后开始执行，应该用<code>ready</code>事件做处理<code>HTML</code>文档的开始</li>
<li><code>$(document).ready(function(){})</code>;<ul>
<li>类似于<code>js</code>的<code>window.onload</code>事件函数，但是<code>ready</code>事件要先于<code>onload</code>事件执行</li>
<li><code>window.onload = function(){}</code>;</li>
</ul>
</li>
<li><p>为方便开发，<code>jQuery</code>简化这样的方法，直接用<code>$()</code>表示</p>
</li>
<li><p><code>JQuery</code>的<code>ready</code>事件不等于<code>Js</code>的<code>load</code>：</p>
<ul>
<li>执行时机不同：<code>load</code>需要等外部图片和视频等全部加载才执行。<code>ready</code>是<code>DOM</code>绘制完毕后执行，先与外部文件</li>
<li>用法不同：<code>load</code>只可写一次，<code>ready</code>可以多次</li>
</ul>
</li>
</ul>
</li>
<li><strong><code>window.onload</code>与<code>$(document).ready()</code>对比</strong></li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>window.onload</th>
<th>$(document).ready()</th>
</tr>
</thead>
<tbody>
<tr>
<td>执行时机</td>
<td>必须等网页中所有内容加载完后(图片)才执行</td>
<td>网页中的<code>DOM</code>结构绘制完后就执行,可能<code>DOM</code>元素相关的东西并没有加载完</td>
</tr>
<tr>
<td>编写个数</td>
<td>不能同时执行多个</td>
<td>能同时执行多个</td>
</tr>
<tr>
<td>简化写法</td>
<td>无</td>
<td><code>$(document).ready(function(){ //.. });</code><br><br>推荐写法：<code>$(function(){ });</code></td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong><code>jQuery</code>有哪些功能(<code>API</code>)</strong>：</p>
<ul>
<li>选择器 </li>
<li>过滤器 </li>
<li>事件 </li>
<li>效果 </li>
<li><code>ajax</code></li>
</ul>
</li>
<li><p><strong>简单的<code>JQuery</code>选择器</strong>：</p>
<ul>
<li><code>JQuery</code>基本选择器（<code>ID</code>选择器，标签选择器，类选择器，通配选择器和组选择器<code>5</code>种）</li>
<li><code>ID</code>选择器：<code>document.getElementById(id)</code>与<code>$(&quot;#id&quot;)</code>对比(改变文字大小)—<code>id</code>唯一，返回单个元素</li>
<li>标签选择器：<code>document.getElementsByTagName(tagName)</code>与<code>$(&quot;tagname&quot;)</code>对比—多个标签，返回数组</li>
<li>类选择器:<code>$(&quot;.className&quot;)</code>–多个<code>classname</code>（改变背景图片）</li>
<li>通配选择器：<code>document.getElementsByTagName(&quot;*&quot;)</code>与<code>$(&quot;*&quot;)</code>对比—指范围内的所有标签元素</li>
<li>组选择器：<code>$(&quot;seletor1,seletor2,seletor3&quot;)</code>—-无数量限制，用逗号分割</li>
</ul>
</li>
</ul>
<h5 id="初步了解JQuery"><a href="#初步了解JQuery" class="headerlink" title="初步了解JQuery"></a>初步了解<code>JQuery</code></h5><hr>
<ul>
<li><strong><code>JQuery</code>是什么</strong><ul>
<li><code>javascript</code>用来干什么的：<ul>
<li>操作<code>DOM</code>对象</li>
<li>动态操作样式<code>css</code></li>
<li>数据访问</li>
<li>控制响应事件等</li>
</ul>
</li>
<li><code>jQuery</code>作用一样，只是更加快速简洁</li>
</ul>
</li>
<li><p><strong>如何引用<code>JQuery</code></strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">写第一个JQUery案例</div><div class="line">&lt;script type=“text/javascript” src=“”&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script type=“text/javascript”&gt;</div><div class="line">	$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		alert(“jQuery 你好!”);</div><div class="line">	&#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
</li>
<li><p><strong><code>$()讲解</code></strong></p>
<ul>
<li><code>$</code>在<code>JQuery</code>库中，<code>$</code>是<code>JQuery</code>的别名，<code>$()</code>等效于就<code>jQuery()</code>.</li>
<li><code>$()</code>是<code>JQuery</code>方法,赞可看作是<code>JQuery</code>的选择器，与<code>css</code>选择器相似（可做对比）</li>
<li><code>var jQuery==$ =function(){}</code> <code>$()</code>本质就是一个函数也就是 <code>jQuery</code>的核心函数</li>
<li>只要是<code>jQuery</code>的对象都这样变量加上一个<code>符号$</code>方便识别：<code>var $div = $(&quot;#&quot;)</code></li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span>　<span class="title">$</span>(<span class="params">id</span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>$()</code>和<code>document</code>是相等的吗</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"a"</span> <span class="attr">class</span>=<span class="string">"aa"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">class</span>=<span class="string">"aa"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"c"</span> <span class="attr">class</span>=<span class="string">"aa"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">alert(document.getElementById("id") == $("#aa"));//返回结果为false</div><div class="line">alert(document.getElementById("id") == $("#aa").get(0));//返回true</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>代理对象<code>$()</code></strong></p>
<ul>
<li><code>jQuery</code>中返回的是代理对象本身</li>
<li><code>jQuery</code>的核心原理是通过选择器找到对应的代理对象</li>
<li><code>jQuery</code>全都是通过方法操作</li>
<li>样式选择器<code>$(&quot;.className&quot;)</code><ul>
<li><code>$(&quot;.aa&quot;).css(&quot;color&quot;,&quot;green&quot;);</code></li>
</ul>
</li>
<li>id选择器(“”)<ul>
<li><code>$(&quot;#a&quot;).css(&quot;background-color&quot;,&quot;#ff0066&quot;);</code></li>
</ul>
</li>
<li>标签选择器<ul>
<li><code>$(&quot;p&quot;).css(&quot;color&quot;,&quot;#cc3366&quot;);</code></li>
</ul>
</li>
<li>组选择器<ul>
<li><code>$(&quot;#b ul li&quot;).size();</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>对象转换(<code>$(element)</code>)</strong></p>
<ul>
<li>原生<code>dom</code>对象和<code>jquery</code>代理对象的相互转换</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(传入的原生对象);</div><div class="line"><span class="comment">//原生对象转化成jQuery对象</span></div><div class="line"><span class="keyword">var</span> nav = <span class="built_in">document</span>.getElementById(<span class="string">"nav"</span>);</div><div class="line"><span class="keyword">var</span> $nav = $(nav);</div><div class="line">alert($nav.get(<span class="number">0</span>) == nav);<span class="comment">//true</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>检索范围的限制（<code>$(&#39;字符串&#39;,element)</code>）</strong></p>
<ul>
<li><p><strong>总结：三种写法对比：</strong></p>
<ul>
<li><p>方式一：不推荐 搜索速度最慢</p>
<ul>
<li><code>$(&quot;#nav&quot;).css();</code></li>
<li><code>$(&quot;#nav li&quot;).css();</code></li>
</ul>
</li>
<li><p>方式二：搜索速度最快 链式操作</p>
<ul>
<li><code>$(&quot;#nav&quot;).css().children().css();</code></li>
</ul>
</li>
<li><p>方式三：也常用 速度第二快</p>
<ul>
<li><code>var $nav = $(&quot;#nav&quot;).css()</code>;</li>
<li><code>$(&quot;li&quot;,$nav).css()</code>;  <code>$nav</code>限制了搜索范围 速度快</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>总结： <code>$()</code> <code>jquery</code>核心方法的作用和使用场景</strong></p>
<ul>
<li>如果是一个字符串参数并且没有标签对（选择器）<code>$(ul.nav&quot;)</code></li>
<li>如果是一个字符串参数并且有标签对（创建<code>html</code>标签）<code>$(&quot;&lt;img&gt;&quot;)</code> –最终加到<code>DOM</code>树中 <code>$xx.append(&quot;&lt;img&gt;&quot;)</code>;</li>
<li>如果是传入一个<code>element dom</code>对象，直接包装为<code>proxy</code>对象返回 <code>$(DOM对象)</code></li>
<li>如果第一个参数是字符串，第二个是<code>element</code> <code>dom</code>对象的话，那么就是在<code>element</code>这个<code>dom</code>对象里面寻找选择器对应的元素并且代理 <code>$(&quot;li&quot;,$DOM对象)</code></li>
</ul>
</li>
</ul>
<ul>
<li><strong>代理模式以及代理内存结构</strong></li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery2.png" alt="代理内存结构1"></p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery3.png" alt="代理内存结构2"></p>
<h4 id="第二节-选择器"><a href="#第二节-选择器" class="headerlink" title="第二节 选择器"></a>第二节 选择器</h4><hr>
<ul>
<li><strong>来回顾一下<code>CSS</code>常用的选择器</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>语法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>标签选择器</td>
<td><code>E{css规则}</code></td>
<td>以文档元素作为选择符</td>
</tr>
<tr>
<td><code>ID</code>选择器</td>
<td><code>#ID{css规则}</code></td>
<td><code>ID</code>作为选择符</td>
</tr>
<tr>
<td>类选择器</td>
<td><code>E.className{css规则}</code></td>
<td><code>class</code>作为选择符</td>
</tr>
<tr>
<td>群组选择器</td>
<td><code>E1,E2,E3{css规则}</code></td>
<td>多个选择符应用同样的样式</td>
</tr>
<tr>
<td>后代选择器</td>
<td><code>E F{css规则}</code></td>
<td>元素<code>E</code>的任意后代元素<code>F</code></td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong>选择器引擎规则(<code>$(&#39;字符串&#39;)</code>)</strong></p>
<ul>
<li><code>css</code>选择器的规则<ul>
<li>标签选择器</li>
<li><code>id</code>选择器</li>
<li>类选择器</li>
<li>混合选择器</li>
</ul>
</li>
<li><p><code>css3</code>的选择器规则</p>
</li>
<li><p>状态和伪类（<code>:even</code> <code>:odd</code> <code>:first</code> <code>:last</code> <code>:eq(index)</code>）</p>
</li>
<li>属性（<code>[attr=value]</code>）</li>
</ul>
</li>
</ul>
<ul>
<li><strong>层级选择器:通过<code>DOM</code>的嵌套关系匹配元素</strong><ul>
<li><code>jQuery</code>层级选择器—-包含选择器、子选择器、相邻选择器、兄弟选择器4种</li>
<li>a.包含选择器：<code>$(&quot;a b&quot;)</code>在给定的祖先元素下匹配所有后代元素。(不受层级限制)</li>
<li>b.子选择器：<code>$(&quot;parent &gt; child&quot;)</code>在给定的父元素下匹配所有子元素。</li>
<li>c.相邻选择器：<code>$(&quot;prev + next&quot;)</code> 匹配所有紧接在<code>prev</code>元素后的<code>next</code>元素。</li>
<li>d.兄弟选择器：<code>$(&quot;prev ~ siblings&quot;)</code> 匹配prev元素之后的所有<code>sibling</code>元素。</li>
</ul>
</li>
</ul>
<h5 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h5><hr>
<ul>
<li><strong>基本过滤选择</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>说明</th>
<th>返回</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:first</code></td>
<td>匹配找到的第1个元素</td>
<td>单个元素</td>
</tr>
<tr>
<td><code>:last</code></td>
<td>匹配找到的最后一个元素</td>
<td>单个元素</td>
</tr>
<tr>
<td><code>:eq</code></td>
<td>匹配一个给定索引值的元素</td>
<td>单个元素</td>
</tr>
<tr>
<td><code>:even</code></td>
<td>匹配所有索引值为偶数的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>: odd</code></td>
<td>匹配所有索引值为奇数的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:gt(index)</code></td>
<td>匹配所有大于给定索引值的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:lt(index)</code></td>
<td>匹配所有小于给定索引值的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:not</code></td>
<td>去除所有与给定选择器匹配的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:animated</code></td>
<td>选取当前正在执行动画的所有元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>focus</code></td>
<td>选取当前正在获取焦点的元素</td>
<td>集合元素</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>内容过滤选择器</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>描述</th>
<th>返回</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:contains(text)</code></td>
<td>选取含有文本内容为text的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:empty</code></td>
<td>选取不包含子元素获取文本的空元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:has(selector)</code></td>
<td>选择含有选择器所匹配的元素的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:parent</code></td>
<td>选取含有子元素或者文本的元素</td>
<td>集合元素</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>可见过滤选择器</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>描述</th>
<th>返回</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:hidden</code></td>
<td>选择所有不可见的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:visible</code></td>
<td>选取所有可见的元素</td>
<td>集合元素</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>属性过滤选择器</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>说明</th>
<th>返回</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[attribute]</code></td>
<td>选取拥有此属性的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>[attribute=value]</code></td>
<td>选取属性值为<code>value</code>值的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>[attribue^=value]</code></td>
<td>选取属性的值以<code>value</code>开始的元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>[attribue$=value]</code></td>
<td>选取属性的值以<code>value</code>结束的元素</td>
<td>集合元素</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>子元素过滤选择器</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>说明</th>
<th>返回</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:nth-child(index/even/odd)</code></td>
<td>选取每个父元素下的第index个子元素或者奇偶元素（<code>index</code>从<code>1</code>算起）</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:first-child</code></td>
<td>选取每个元素的第一个子元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:last-child</code></td>
<td>选取每个元素的最后一个子元素</td>
<td>集合元素</td>
</tr>
</tbody>
</table>
<ul>
<li><p><code>:nth-child()</code>选择器是很常用的子元素过滤选择器，如下</p>
<ul>
<li><code>:nth-child(even)</code>选择每个父元素下的索引值是偶数的元素</li>
<li><code>:nth-child(odd)</code>选择每个父元素下的索引值是奇数的元素</li>
<li><code>:nth-child(2)</code>选择每个父元素下的索引值是<code>2</code>的元素</li>
<li><code>:nth-child(3n)</code>选择每个父元素下的索引值是3的倍数的元素 (<code>n</code>从<code>1</code>开始)</li>
</ul>
</li>
<li><p><strong>表单对象属性过滤选择器</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>说明</th>
<th>返回</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:enabled</code></td>
<td>选取所有可用元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:disabled</code></td>
<td>选取所有不可用元素</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:checked</code></td>
<td>选取所有被选中的元素（单选框、复选框）</td>
<td>集合元素</td>
</tr>
<tr>
<td><code>:selected</code></td>
<td>选取所有被选中的元素（下拉列表）</td>
<td>集合元素</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>表单选择器</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选择器</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:input</code></td>
<td>选取所有<code>input</code> <code>textarea</code> <code>select</code> <code>button</code>元素</td>
</tr>
<tr>
<td><code>:text</code></td>
<td>选取所有单行文本框</td>
</tr>
<tr>
<td><code>:password</code></td>
<td>选取所有密码框</td>
</tr>
<tr>
<td><code>:radio</code></td>
<td>选取所有单选框</td>
</tr>
<tr>
<td><code>:checkbox</code></td>
<td>选取所有多选框</td>
</tr>
<tr>
<td><code>:submit</code></td>
<td>选取所有的提交按钮</td>
</tr>
<tr>
<td><code>:image</code></td>
<td>选取所有的图像按钮</td>
</tr>
<tr>
<td><code>:reset</code></td>
<td>选取所有的重置按钮</td>
</tr>
<tr>
<td><code>:button</code></td>
<td>选取所有的按钮</td>
</tr>
<tr>
<td><code>:file</code></td>
<td>选取所有的上传域</td>
</tr>
<tr>
<td><code>:hidden</code></td>
<td>选取所有的不可见元素</td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong>特定位置选择器</strong></p>
<ul>
<li><code>:first</code></li>
<li><code>:last</code></li>
<li><code>:eq(index)</code></li>
</ul>
</li>
<li><p><strong>指定范围选择器</strong></p>
<ul>
<li><code>:even</code></li>
<li><code>:odd</code></li>
<li><code>:gt(index)</code></li>
<li><code>:lt(index)</code></li>
</ul>
</li>
<li><p><strong>排除选择器</strong></p>
<ul>
<li><code>:not</code> 非</li>
</ul>
</li>
</ul>
<h4 id="第三节-选择器优化"><a href="#第三节-选择器优化" class="headerlink" title="第三节 选择器优化"></a>第三节 选择器优化</h4><hr>
<ul>
<li><p>使用合适的选择器表达式可以提高性能、增强语义并简化逻辑。常用的选择器中，<code>ID</code>选择器速度最快，其次是类型选择器。</p>
<ul>
<li>a. 多用<code>ID</code>选择器</li>
<li>b. 少直接使用<code>class</code>选择器</li>
<li>c. 多用父子关系，少用嵌套关系</li>
<li>d. 缓存<code>jQuery</code>对象</li>
</ul>
</li>
<li><p><strong>使用过滤器</strong></p>
<ul>
<li><code>jQuery</code>提供了<code>2</code>种选择文档元素的方式：选择器和过滤器</li>
<li>a. 类过虑器：根据元素的类属性来进行过滤操作。<ul>
<li><code>hasClass(className)</code>：判断当前<code>jQuery</code>对象中的某个元素是否包含指定类名，包含返回<code>true</code>，不包含返回<code>false</code></li>
</ul>
</li>
<li>b. 下标过滤器：精确选出指定下标元素<ul>
<li><code>eq(index)</code>：获取第<code>N</code>个元素。<code>index</code>是整数值，下标从<code>0</code>开始</li>
</ul>
</li>
<li>c. 表达式过滤器 <ul>
<li><code>filter(expr)/(fn)</code>：筛选出与指定表达式/函数匹配的元素集合。</li>
<li>功能最强大的表达式过滤器，可接收函数参数，也可以是简单的选择器表达式</li>
</ul>
</li>
<li>d. 映射 <code>map(callback)</code>：将一组元素转换成其他数组</li>
<li>e. 清洗 <code>not(expr)</code>：删除与指定表达式匹配的元素</li>
<li>f. 截取 <code>slice(start,end)</code>：选取一个匹配的子集</li>
</ul>
</li>
<li><p><strong>查找</strong></p>
<ul>
<li>向下查找后代元素 <ul>
<li><code>children()</code>:取得所有元素的所有子元素集合（子元素）</li>
<li><code>find()</code>:搜索所有与指定表达式匹配的元素(所有后代元素中查找)</li>
</ul>
</li>
<li>查找兄弟元素 <code>siblings()</code>查找当前元素的兄弟</li>
</ul>
</li>
</ul>
<h4 id="第四节-代理对象属性和样式操作"><a href="#第四节-代理对象属性和样式操作" class="headerlink" title="第四节 代理对象属性和样式操作"></a>第四节 代理对象属性和样式操作</h4><hr>
<ul>
<li><p><strong>代理对象属性和样式操作</strong></p>
<ul>
<li><code>attr</code></li>
<li><code>prop</code>(一般属性值是<code>boolean</code>的值或者不用设置属性值，一般使用)</li>
<li><code>css</code>(最好不用，一般我用来做测试)</li>
<li><code>addClass</code> / <code>removeClass</code></li>
</ul>
</li>
<li><p>操作原生<code>DOM</code>的时候用的方式：一次只能操作一个</p>
<ul>
<li>操作属性：<code>setAttribute</code> / <code>getAttribute</code></li>
<li>操作样式：<code>style.xx = value</code></li>
<li>操作类样式：<code>className=&#39;&#39;</code></li>
<li>获取<code>DOM</code>的子元素<code>children</code>属性</li>
<li><code>DOM</code>里面添加一个子元素<code>appendChild()</code></li>
</ul>
</li>
<li><p>操作<code>jQuery</code>代理对象的时候：批量操作<code>DOM</code>对象(全都是通过方法操作)</p>
</li>
<li><p>操作属性：<code>attr()</code>、<code>prop()</code> </p>
<ul>
<li><code>attr</code>和<code>prop</code>区别：如果属性的值是布尔类型的值 用<code>prop</code>操作 反之<code>attr</code></li>
</ul>
</li>
<li><p>操作样式：<code>css()</code></p>
</li>
<li>操作类样式：<code>addClass()</code> <code>removeClass()</code></li>
<li>操作<code>DOM</code>子元素：<code>children()</code></li>
<li>添加子元素：<code>append()</code></li>
</ul>
<h4 id="第五节-jQuery中DOM操作"><a href="#第五节-jQuery中DOM操作" class="headerlink" title="第五节 jQuery中DOM操作"></a>第五节 jQuery中DOM操作</h4><hr>
<ul>
<li><p><code>DOM</code>是一种与浏览器、平台|语言无关的接口，使用该接口可以轻松的访问 页面中的所有的标准组件</p>
</li>
<li><p><strong><code>DOM</code>操作的分类</strong></p>
<ul>
<li><p><strong><code>DOM Core</code></strong></p>
<ul>
<li><code>DOM core</code>并不专属于<code>JavaScript</code>，任何支持<code>DOM</code>的程序都可以使用</li>
<li><code>JavaScript</code> 中的<code>getElementByID()</code> <code>getElementsByTagName()</code> <code>getAttribute()</code> <code>setAttribute()</code>等方法都是<code>DOM Core</code>的组成部分</li>
</ul>
</li>
<li><p><strong><code>HTML-DOM</code></strong></p>
<ul>
<li><code>HTML -DOM</code>的出现比<code>DOM-Core</code>还要早，它提供一些更简明的标志来描述<code>HTML</code>元素的属性</li>
<li>比如：使用<code>HTML-DOM</code>来获取某元素的<code>src</code>属性的方法<ul>
<li><code>element.src</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>CSS-DOM</code></strong></p>
<ul>
<li>针对<code>CSS</code>的操作。在<code>JavaScript</code>中，主要用于获取和设置<code>style</code>对象的各种属性，通过改变<code>style</code>对象的属性，使网页呈现不同的效果</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>查找节点</strong></p>
<ul>
<li>查找属性节点 <code>attr()</code> 可以获取各属性的值</li>
</ul>
</li>
<li><strong>创建节点</strong><ul>
<li><code>$(html)</code>：根据传递的标记字符串，创建<code>DOM</code>对象</li>
</ul>
</li>
<li><strong>插入节点</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>append()</code></td>
<td>向每个匹配元素内部追加内容</td>
</tr>
<tr>
<td><code>appendTo()</code></td>
<td>颠倒<code>append()</code>的操作</td>
</tr>
<tr>
<td><code>prepend()</code></td>
<td>向每个匹配元素的内容内部前置内容</td>
</tr>
<tr>
<td><code>prependTo()</code></td>
<td>颠倒<code>prepend()</code>的操作</td>
</tr>
<tr>
<td><code>after()</code></td>
<td>向每个匹配元素之后插入内容</td>
</tr>
<tr>
<td><code>insertAfter()</code></td>
<td>颠倒<code>after()</code>的操作</td>
</tr>
<tr>
<td><code>before()</code></td>
<td>在每个匹配元素之前插入内容</td>
</tr>
<tr>
<td><code>insertBefore()</code></td>
<td>颠倒<code>before()</code>的操作</td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong>删除节点</strong></p>
<ul>
<li>jQuery提供了三种删除节点的方法 <code>remove()</code> <code>detach()</code> <code>empty()</code></li>
<li><strong><code>remove()方法</code></strong><ul>
<li>当某个节点用此方法删除后，该节点所包含的所有后代节点将同时被删除，用<code>remove()</code>方法删除后，还是可以继续使用删除后的引用</li>
</ul>
</li>
<li><strong><code>detach()</code></strong><ul>
<li>和<code>remove()</code>方法一样，也是从<code>DOM</code>中去掉所有匹配的元素，与<code>remove()</code>不同的是，所有绑定的事件、附加的数据等，都会被保留下来</li>
</ul>
</li>
<li><strong><code>empty()</code></strong><ul>
<li><code>empty()</code>方法并不是删除节点，而是清空节点，它能清空元素中所有后代节点</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>复制节点</strong></p>
<ul>
<li>使用<code>clone()</code>方法来完成</li>
<li>在<code>clone()</code>方法中传递一个参数<code>true</code>，同时复制元素中所绑定的事件</li>
</ul>
</li>
<li><p><strong>替换节点</strong></p>
<ul>
<li><code>jQuery</code>提供相应的方法 <code>replaceWidth()</code></li>
</ul>
</li>
<li><p><strong>样式操作</strong></p>
<ul>
<li>获取样式和设置样式 <code>attr()</code></li>
<li>追加样式 <code>addClass()</code></li>
<li>移除样式 <code>removeClass()</code></li>
<li>切换样式 <ul>
<li><code>toggle()</code>方法只要是控制行为上的重复切换（如果元素是显示的，则隐藏；如果元素原来是隐藏的，则显示）</li>
<li><code>toggleClass()</code>方法控制样式上的重复切换（如何类名存在，则删除它，如果类名不存在，则添加它） </li>
</ul>
</li>
<li>判断是否含有某个样式<ul>
<li><code>hasClass()</code>可以用来判断元素是否含有某个<code>class</code>,如有返回<code>true</code> 该方法等价于<code>is()</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>设置和获取HTML、文本和值</strong></p>
<ul>
<li><strong><code>html()</code></strong><ul>
<li>此方法类似<code>JavaScript</code>中<code>innerHTML</code>属性，可以用来读取和设置某个元素中的<code>HTML</code>内容</li>
</ul>
</li>
<li><strong><code>text()</code></strong>方法<ul>
<li>此方法类型<code>JavaScript</code>中<code>innerHTML</code>，用来读取和设置某个元素中的文本内容</li>
</ul>
</li>
<li><strong><code>val()</code></strong>方法<ul>
<li>此方法类似<code>JavaScript</code>中的<code>value</code>属性，用来设置获取元素的值。无论是文本框、下拉列表还是单选框，都可以返回元素的值，如果元素多选，返回一个包含所有选择的值的数组</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>遍历节点</strong></p>
<ul>
<li><strong><code>children()</code></strong>方法<ul>
<li>该方法用来取得匹配元素的子元素集合</li>
<li><code>childre()</code>方法只考虑子元素而不考虑其他后代元素</li>
</ul>
</li>
<li><strong><code>next()</code></strong>方法<ul>
<li>该方法用于取得匹配元素后面紧邻的同辈元素</li>
</ul>
</li>
<li><strong><code>prev()</code></strong>方法<ul>
<li>用于匹配元素前面紧邻的同辈元素</li>
</ul>
</li>
<li><strong><code>siblings()</code></strong>方法<ul>
<li>用于匹配元素前后所有的同辈元素</li>
</ul>
</li>
<li><strong><code>parent()</code></strong>方法<ul>
<li>获得集合中每个 元素的父级元素</li>
</ul>
</li>
<li><strong><code>parents()</code></strong>方法<ul>
<li>获得集合中每个元素的祖先元素</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="CSS-DOM操作"><a href="#CSS-DOM操作" class="headerlink" title="CSS DOM操作"></a>CSS DOM操作</h5><hr>
<ul>
<li><code>CSS DOM</code>技术简单的来说就是读取和设置<code>style</code>对象的各种属性</li>
<li>用<code>css()</code>方法获取元素的样式属性，可以同时设置多个样式属性</li>
<li><strong><code>CSS DOM</code>中关于元素定位有几个常用的方法</strong><ul>
<li><strong><code>offset()</code></strong>方法<ul>
<li>它的作用是获取元素在当前视窗的相对偏移其中返回的对象包含两个属性，即<code>top</code>和<code>left</code>，他只对可见元素有效 </li>
</ul>
</li>
<li><strong><code>position()</code></strong>方法<ul>
<li>获取相对于最近的一个<code>position()</code>样式属性设置为<code>relative</code>或者<code>absolute</code>的祖父节点的相对偏移，与<code>offset()</code>一样，他返回的对象也包括两个属性，即<code>top</code>和<code>left</code></li>
</ul>
</li>
<li><strong><code>scrollTop()</code></strong>方法和<strong><code>scrollLeft</code></strong>方法<ul>
<li>这两个方法的作用分别是获取元素的滚动条距顶端的距离和距左侧的距离</li>
</ul>
</li>
<li><strong>一张图总结以上的位置关系(项目中很常用-必须要弄清楚)</strong></li>
</ul>
</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery4.jpg" alt=""><br><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery5.jpg" alt=""><br><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery6.jpg" alt=""><br><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery7.jpg" alt=""><br><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery7.jpg" alt=""></p>
<h4 id="第六节-jQuery动画"><a href="#第六节-jQuery动画" class="headerlink" title="第六节 jQuery动画"></a>第六节 jQuery动画</h4><hr>
<h5 id="回顾上节"><a href="#回顾上节" class="headerlink" title="回顾上节"></a>回顾上节</h5><hr>
<ul>
<li>操作DOM<ul>
<li>a.什么是<code>DOM</code>：<code>Document Object Model</code>缩写，文档对象模型</li>
<li>b.理解页面的树形结构</li>
<li>c.什么是节点：是DOM结构中最小单元，包括元素、属性、文本、文档等。</li>
</ul>
</li>
</ul>
<h6 id="一、创建节点"><a href="#一、创建节点" class="headerlink" title="一、创建节点"></a>一、创建节点</h6><hr>
<ul>
<li>1.创建元素<ul>
<li>语法：<code>document.createElement(name)</code>;</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line"><span class="built_in">document</span>.body.appendChild(div);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>$(html)</code>：根据传递的标记字符串，创建DOM对象</p>
</li>
<li><p>2.创建文本</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">var</span> txt = <span class="built_in">document</span>.createTextNode(<span class="string">"DOM"</span>);</div><div class="line">div.appendChild(txt);</div><div class="line"><span class="built_in">document</span>.body.appendChild(div);</div><div class="line"></div><div class="line"><span class="keyword">var</span> $div = = $(<span class="string">"&lt;div&gt;DOM&lt;/div&gt;"</span>);</div><div class="line">$(body).append($div);</div><div class="line"><span class="string">``</span><span class="string">`		</span></div><div class="line"></div><div class="line">- 3.设置属性</div><div class="line">	- 语法：`e.setAttrbute(name,value)<span class="string">`</span></div><div class="line"></div><div class="line">`<span class="string">``</span>javascript</div><div class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">var</span> txt = <span class="built_in">document</span>.createTextNode(<span class="string">"DOM"</span>);</div><div class="line">div.appendChild(txt);</div><div class="line"><span class="built_in">document</span>.body.appendChild(div);</div><div class="line">div.setAttribute(<span class="string">"title"</span>,<span class="string">"盒子"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> $div = = $(<span class="string">"&lt;div title='盒子'&gt;DOM&lt;/div&gt;"</span>);</div><div class="line">$(body).append($div);</div></pre></td></tr></table></figure>
<h6 id="二、插入内容"><a href="#二、插入内容" class="headerlink" title="二、插入内容"></a>二、插入内容</h6><hr>
<ul>
<li><p>内部插入</p>
<ul>
<li>向元素最后面插入节点：<ul>
<li><code>append()</code>:向每个匹配的元素内部追加内容</li>
<li><code>appendTo()</code>:把所有匹配的元素追加到指定元素集合中，<code>$(&quot;A&quot;).append(&quot;B&quot;)</code>等效 <code>$(&quot;B&quot;).appendTo(&quot;A&quot;)</code></li>
</ul>
</li>
<li>向元素最前面插入节点：<ul>
<li><code>prepend（）</code>：把每个匹配的元素内部前置内容</li>
<li><code>prependTo（）</code>：把所有匹配的元素前置到另一个指定的元素集合中,<code>$(&quot;A&quot;).prepend(&quot;B&quot;)</code> 等效 <code>$(&quot;B&quot;).prependTo(&quot;A&quot;)</code></li>
</ul>
</li>
</ul>
</li>
<li><p>外部插入</p>
<ul>
<li><code>after()</code>:在每个匹配的元素之后插入内容</li>
<li><code>before()</code>：在每个匹配想元素之前插入内容</li>
<li><code>insertAfter()</code>：将所有匹配的元素插入到另一个指定的元素集合后面，<code>$A.insert($B)</code> 等效<code>$B.insertAfter($A);</code></li>
<li><code>insertBefore()</code>：将所有匹配的元素插入到另一个指定的元素集合前面 <code>$A.before($B)</code> 等效 <code>$B.insertBefore($A)</code>;</li>
</ul>
</li>
</ul>
<h6 id="三、删除内容"><a href="#三、删除内容" class="headerlink" title="三、删除内容"></a>三、删除内容</h6><hr>
<ul>
<li>移除<ul>
<li><code>remove()</code>:从<code>DOM</code>中删除所有匹配元素</li>
</ul>
</li>
<li>清空<ul>
<li><code>empty()</code>:删除匹配的元素集合中所有子节点内容</li>
</ul>
</li>
</ul>
<h6 id="四、克隆内容：创建指定节点副本"><a href="#四、克隆内容：创建指定节点副本" class="headerlink" title="四、克隆内容：创建指定节点副本"></a>四、克隆内容：创建指定节点副本</h6><hr>
<ul>
<li><code>clone()</code><ul>
<li>注意：若<code>clone（true）</code>则是包括克隆元素的属性，事件等</li>
</ul>
</li>
</ul>
<h6 id="五、替换内容"><a href="#五、替换内容" class="headerlink" title="五、替换内容"></a>五、替换内容</h6><hr>
<ul>
<li><code>replaceWith()</code>:将所有匹配的元素替换成指定的元素</li>
<li><code>replaceAll()</code>:用匹配的元素替换掉指定元素</li>
</ul>
<ul>
<li>注意：两者效果一致，只是语法不同 <code>$A.replaceAll($B)</code>等效于 <code>$B.replaceWhith($A)</code>;</li>
</ul>
<h5 id="本节新知识"><a href="#本节新知识" class="headerlink" title="本节新知识"></a>本节新知识</h5><hr>
<ul>
<li><code>JavaScrip</code>t语言本身不支持动画设计，必须通过改变<code>CSS</code>来实现动画效果</li>
</ul>
<p><strong>显隐动画</strong></p>
<ul>
<li><p><code>show()</code>:显示 <code>hide()</code>:隐藏</p>
<ul>
<li>原理：<code>hide()</code>通过改变元素的高度宽度和不透明度，直到这三个属性值到<code>0</code></li>
<li><code>show()</code>从上到下增加元素的高度，从左到右增加元素宽度，从<code>0</code>到<code>1</code>增加透明度，直至内容完全可见</li>
<li>参数：<ul>
<li><code>show(speed,callback)</code><ul>
<li><code>speed</code>: 字符串或数字，表示动画将运行多久（<code>slow=0.6</code>/<code>normal=0.4</code>/<code>fast=0.2</code>）</li>
<li><code>callback</code>: 动画完成时执行的方法</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>显示和隐藏式一对密不可分的动画形式</p>
</li>
<li><p><strong>显隐切换</strong></p>
<ul>
<li><code>toggle()</code>:切换元素的可见状态<ul>
<li>原理：匹配元素的宽度、高度以及不透明度，同时进行动画，隐藏动画后将<code>display</code>设置为<code>none</code></li>
<li>参数：<ul>
<li><code>toggle(speed)</code></li>
<li><code>toggle(speed,callback)</code></li>
<li><code>toggle(boolean)</code><ul>
<li><code>speed</code>: 字符串或数字，表示动画将运行多久（<code>slow=0.6</code>/<code>normal=0.4</code>/<code>fast=0.2</code>）</li>
<li><code>easing</code>： 使用哪个缓冲函数来过渡的字符串(<code>linear</code>/<code>swing</code>)</li>
<li><code>callback</code>： 动画完成时执行的方法</li>
<li><code>boolean</code>:<code>true</code>为显示 <code>false</code>为隐藏</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>滑动</strong></p>
<ul>
<li><p><strong>显隐滑动效果</strong></p>
<ul>
<li><code>slideDown()</code>:滑动隐藏</li>
<li><p><code>slidUp()</code>:滑动显示</p>
</li>
<li><p>参数:</p>
<ul>
<li><code>slideDown(speed,callback)</code></li>
<li><code>slidUp(speed,callback)</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>显隐切换滑动</strong></p>
<ul>
<li><code>slideToggle()</code>:显隐滑动切换</li>
<li>参数:<ul>
<li><code>slidUp(speed,callback)</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>渐变：通过改变不透明度</strong></p>
<ul>
<li><p><strong>淡入淡出</strong></p>
<ul>
<li><code>fadeIn()</code></li>
<li><p><code>fadeOut()</code></p>
</li>
<li><p>参数：</p>
<ul>
<li><code>fadeIn(speed,callback)</code></li>
<li><code>fadeOut(speed,callback)</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>设置淡出透明效果</strong></p>
<ul>
<li><p><code>fadeTo()</code>⁭：以渐进的方式调整到指定透明度</p>
</li>
<li><p>参数：</p>
<ul>
<li><code>fadeTo(speed,opacity,callback)</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>渐变切换:结合<code>fadeIn</code>和<code>fadeOut</code></strong></p>
<ul>
<li><p><code>fadeToggle()</code></p>
</li>
<li><p>参数:</p>
<ul>
<li><code>fadeOut(speed,callback)</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><strong>自定义动画：<code>animate()</code></strong><ul>
<li>注意：在使用<code>animate</code>方法之前，为了影响该元素的<code>top</code>  <code>left</code> <code>bottom</code>  <code>right</code>样式属性，必须先把元素的<code>position</code>样式设置为<code>relative</code>或者<code>absolute</code></li>
<li><strong>停止元素的动画</strong><ul>
<li>很多时候需要停止匹配正在进行的动画，需要使用stop() </li>
<li><code>stop()</code>语法结构：<code>stop([clearQueue],[gotoEnd]);</code><ul>
<li>都是可选参数，为布尔值</li>
<li>如果直接使用<code>stop()</code>方法，会立即停止当前正在进行的动画</li>
</ul>
</li>
</ul>
</li>
<li><strong>判断元素是否处于动画状态</strong><ul>
<li>如果不处于动画状态，则为元素添加新的动画，否则不添加<br><code>if(!$(element).is(&quot;:animated&quot;)){ //判断元素是否处于动画状态}</code></li>
<li>这个方法在<code>animate</code>动画中经常被用到，需要注意</li>
</ul>
</li>
<li><strong>延迟动画</strong><ul>
<li>在动画执行过程中，如果你想对动画进行延迟操作，那么使用<code>delay()</code></li>
</ul>
</li>
</ul>
</li>
<li><p>用<code>animate</code>模拟<code>show()</code>:</p>
<ul>
<li><code>show</code>: 表示由透明到不透明</li>
<li><code>toggle</code>: 切换</li>
<li><code>hide</code>:表示由显示到隐藏</li>
</ul>
</li>
<li><p><strong>动画方法总结</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>方法名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>hide()</code>和<code>show()</code></td>
<td>同时修改多个样式属性即高度和宽度和不透明度</td>
</tr>
<tr>
<td><code>fadeIn()</code>和<code>fadeOut()</code></td>
<td>只改变不透明度</td>
</tr>
<tr>
<td><code>slideUp()</code>和<code>slideDown()</code></td>
<td>只改变高度</td>
</tr>
<tr>
<td><code>fadeTo()</code></td>
<td>只改变不透明度</td>
</tr>
<tr>
<td><code>toggle()</code></td>
<td>用来代替<code>show()</code>和<code>hide()</code>方法，所以会同时修改多个属性即高度、宽度和不透明度</td>
</tr>
<tr>
<td><code>slideToggle()</code></td>
<td>用来代替<code>slideUp</code>和<code>slideDown()</code>方法，所以只能改变高度</td>
</tr>
<tr>
<td><code>fadeToggle()</code></td>
<td>用来代替<code>fadeIn()</code>和<code>fadeOut</code>方法，只能改变不透明度</td>
</tr>
<tr>
<td><code>animate()</code></td>
<td>属于自定义动画，以上各种动画方法都是调用了<code>animate</code>方法。此外，用<code>animate</code>方法还能自定义其他的样式属性，例如：<code>left</code> <code>marginLeft ``scrollTop</code>等</td>
</tr>
</tbody>
</table>
<h4 id="第七节-jQuery中的事件"><a href="#第七节-jQuery中的事件" class="headerlink" title="第七节 jQuery中的事件"></a>第七节 jQuery中的事件</h4><hr>
<ul>
<li><p><strong>事件对象的属性</strong></p>
<ul>
<li><code>event.type</code>：获取事件的类型</li>
<li><code>event.target</code>:获取到触发事件的元素</li>
<li><code>event.preventDefault</code>方法 阻止默认事件行为</li>
<li><code>event.stopPropagation()</code>阻止事件的冒泡</li>
<li><p><code>keyCode</code>：只针对于<code>keypress</code>事件，获取键盘键数字 按下回车，<code>13</code></p>
</li>
<li><p><code>event.pageX / event.pageY</code> 获取到光标相对于页面的<code>x</code>坐标和<code>y</code>坐标</p>
<ul>
<li>如果没有<code>jQuery</code>，在IE浏览器中用<code>event.x</code> / <code>event.y</code>;在<code>Firefox</code>浏览器中用<code>event.pageX</code> / <code>event.pageY</code>。如果页面上有滚动条还要加上滚动条的宽度和高度</li>
</ul>
</li>
<li><p><code>event.clientX</code>：光标对于浏览器窗口的水平坐标  浏览器</p>
</li>
<li><p><code>event.clientY</code>：光标对于浏览器窗口的垂直坐标</p>
</li>
<li><p><code>event.screenX</code>：光标对于电脑屏幕的水平坐标    电脑屏幕  </p>
</li>
<li><code>event.screenY</code>：光标对于电脑屏幕的水平坐标 </li>
<li><code>event.which</code> 该方法的作用是在鼠标单击事件中获取到鼠标的左、中、右键，在键盘事件中的按键 <code>1</code>代表左键  <code>2</code>代表中键  <code>3</code>代表右键</li>
</ul>
</li>
<li><p><strong>事件冒泡</strong></p>
<ul>
<li>什么是冒泡<ul>
<li>在页面上可以有多个事件，也可以多个元素影响同一个元素</li>
<li>从里到外</li>
<li>嵌套关系</li>
<li>相同事件</li>
<li>其中的某一父类没有相同事件时,继续向上查找</li>
</ul>
</li>
<li><strong>停止事件冒泡</strong><ul>
<li>停止事件冒泡可以阻止事件中其他对象的事件处理函数被执行</li>
<li>在<code>jQuery</code>中提供了<strong><code>stopPropagation()</code></strong>方法</li>
</ul>
</li>
<li><strong>阻止默认行为</strong><ul>
<li>网页中元素有自己的默认行为，例如：单击超链接后会跳转、单击提交后表单会提交，有时需要阻止元素的默认行为</li>
<li>在<code>jQuery</code>中提供了<code>preventDefault()</code>方法来阻止元素的默认行为</li>
</ul>
</li>
<li><strong>事件捕获</strong><ul>
<li>事件捕获和冒泡是相反的过程，事件捕获是从最顶端往下开始触发</li>
<li>并非所有的浏览器都支持事件捕获，并且这个缺陷无法通过<code>JavaScript</code>来修复。<code>jQuery</code>不支持事件捕获，如需要用事件捕获，要用原生的<code>JavaScript</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>bind()</code>;绑定</strong></p>
<ul>
<li><p>为匹配元素绑定处理方法</p>
</li>
<li><p>需要给一个元素添加多个事件 ，事件执行一样时候</p>
</li>
<li><code>one()</code>：只执行一次         </li>
</ul>
</li>
</ul>
<ul>
<li><strong>绑定特定事件类型方法</strong>：</li>
</ul>
<table>
<thead>
<tr>
<th>分类</th>
<th>方法名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>页面载入</td>
<td><code>ready(fn)</code></td>
<td>当<code>DOM</code>载入就绪可以绑定一个要执行的函数</td>
</tr>
<tr>
<td>事件绑定</td>
<td><code>blind(type,[data],fn)</code></td>
<td>为每个匹配元素的特定事件绑定一个事件处理函数</td>
</tr>
<tr>
<td>事件绑定</td>
<td><code>unblind()</code></td>
<td>解除绑定</td>
</tr>
<tr>
<td>事件绑定</td>
<td><code>on(events,[,selector[,]data],handler)</code></td>
<td>在选择元素上绑定一个或者多个事件处理函数</td>
</tr>
<tr>
<td>事件绑定</td>
<td><code>off()</code></td>
<td>移除<code>on</code>绑定的事件</td>
</tr>
<tr>
<td>事件绑定</td>
<td><code>delegate(selector,eventType,handler)</code></td>
<td>为所有选择匹配元素附加一个或多个事件处理函数</td>
</tr>
<tr>
<td>事件绑定</td>
<td><code>undelegate()</code></td>
<td>移除绑定</td>
</tr>
<tr>
<td>事件动态</td>
<td><code>live(type,fn)</code></td>
<td>对动态生成的元素进行事件绑定</td>
</tr>
<tr>
<td>事件动态</td>
<td><code>die(type,fn)</code></td>
<td>移除<code>live()</code>绑定的事件</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>hover()</code></td>
<td>鼠标移入移出</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>toggle(fn1,fn2,[fn3],[fn4])</code></td>
<td>每单击后依次调用函数</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>blur(fn)</code></td>
<td>触发每一个匹配元素的<code>blur</code>事件</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>change()</code></td>
<td>触发每一个匹配元素的<code>change</code>事件</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>click()</code></td>
<td>触发每一个匹配元素的<code>click</code>事件</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>focus()</code></td>
<td>触发每一个匹配元素的<code>focus</code>事件</td>
</tr>
<tr>
<td>交互事件</td>
<td><code>submit()</code></td>
<td>触发每一个匹配元素的<code>submit</code>事件</td>
</tr>
<tr>
<td>键盘事件</td>
<td><code>keydown()</code></td>
<td>触发每一个匹配元素的<code>keydown</code>事件</td>
</tr>
<tr>
<td>键盘事件</td>
<td><code>keypress()</code></td>
<td>触发每一个匹配元素的<code>keypress</code>事件</td>
</tr>
<tr>
<td>键盘事件</td>
<td><code>keyup()</code></td>
<td>触发每一个匹配元素的keyup事件</td>
</tr>
<tr>
<td>鼠标事件</td>
<td><code>mousedown(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
<tr>
<td>鼠标事件</td>
<td><code>mouseenter(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
<tr>
<td>键盘事件</td>
<td><code>mouseleave(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
<tr>
<td>键盘事件</td>
<td><code>mouseout(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
<tr>
<td>键盘事件</td>
<td><code>mouseover(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
<tr>
<td>窗口操作</td>
<td><code>resize(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
<tr>
<td>窗口操作</td>
<td><code>scroll(fn)</code></td>
<td>绑定一个处理函数</td>
</tr>
</tbody>
</table>
<h4 id="第八节-jQuery与Ajax"><a href="#第八节-jQuery与Ajax" class="headerlink" title="第八节 jQuery与Ajax"></a>第八节 jQuery与Ajax</h4><hr>
<ul>
<li><strong>Ajax</strong>简介 :<ul>
<li><code>Asynchronous Javascript And XML</code> （异步的<br><code>JavaScript</code>和<code>XML</code>）</li>
<li>它并不是一种单一的技术，而是有机利用一系列交互式网页应用相关的技术所形成的结合体</li>
</ul>
</li>
<li><strong><code>Ajax</code>优势与不足</strong><ul>
<li><strong><code>Ajax</code>优势</strong><ul>
<li>优秀的用户体验<ul>
<li>这是<code>Ajax</code>下最大的有点，能在不刷新整个页面前提下更新数据</li>
</ul>
</li>
<li>提高<code>web</code>程序的性能<ul>
<li>与传统模式相比，<code>Ajax</code>模式在性能上最大的区别在于传输数据的方式，在传统模式中，数据的提交时通过表单来实现的。<code>Ajax</code>模式只是通过<code>XMLHttpRequest</code>对象向服务器提交希望提交的数据，即按需发送</li>
</ul>
</li>
<li>减轻服务器和带宽的负担<ul>
<li><code>Ajax</code>的工作原理相当于在用户和服务器之间加了一个中间层，似用户操作与服务器响应异步化。它在客户端创建<code>Ajax</code>引擎，把传统方式下的一些服务器负担的工作转移到客户端，便于客户端资源来处理，减轻服务器和带宽的负担</li>
</ul>
</li>
</ul>
</li>
<li><strong>Ajax的不足</strong><ul>
<li>浏览器对<code>XMLHttpRequest</code>对象的支持度不足</li>
<li>破坏浏览器前进、后退按钮的正常功能</li>
<li>对搜索引擎的支持的不足</li>
<li>开发和调试工具的缺乏</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="创建一个Ajax请求"><a href="#创建一个Ajax请求" class="headerlink" title="创建一个Ajax请求"></a>创建一个Ajax请求</h5><hr>
<ul>
<li><p><code>Ajax</code>的核心是<code>XMLHttpRequest</code>对象，它是<code>Ajax</code>实现的关键，发送异步请求、接受响应以及执行回调都是通过它来完成</p>
</li>
<li><p><strong>创建<code>ajax</code>对象 <code>var xhr = new XMLHttpRequest();</code></strong></p>
</li>
<li><p><strong>准备发送请求</strong></p>
<ul>
<li><p><strong><code>get</code> / <code>post</code></strong></p>
<ul>
<li><strong><code>get</code></strong><ul>
<li>传递的数据放在<code>URL</code>后面</li>
<li>中文编码 <code>encodeURI( &#39;&#39; )</code>;</li>
<li>缓存 在数据后面加上随机数或者日期对象或者……</li>
</ul>
</li>
<li><p><strong><code>post</code></strong></p>
<ul>
<li>传递的数据放在<code>send()</code>里面，并且一定要规定数据格式</li>
<li>没有缓存问题</li>
</ul>
</li>
<li><p><code>form</code>表单中:</p>
<ul>
<li><code>action</code>:<ul>
<li><code>method</code>: (默认是<code>get</code>)</li>
<li><code>get</code>: 会在<code>url</code>里面以 <code>name=value</code> , 两个数据之间用 <code>&amp;</code> 连接</li>
</ul>
</li>
<li><code>post</code>:</li>
</ul>
</li>
<li><code>enctype</code>: <code>&quot;application/x-www-form-urlencoded&quot;</code></li>
</ul>
</li>
<li><p><code>url</code></p>
</li>
<li><p>是否异步</p>
<ul>
<li>同步(<code>false</code>)：阻塞</li>
<li>异步(<code>true</code>)：非阻塞</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>正式发送请求</strong></p>
</li>
<li><p><strong><code>ajax</code>请求处理过程</strong></p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>)</div><div class="line">	&#123;</div><div class="line">		alert( xhr.responseText );</div><div class="line">	&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>onreadystatechange</code> ：当处理过程发生变化的时候执行下面的函数</p>
</li>
<li><p><code>readyState</code> ：<code>ajax</code>处理过程</p>
<ul>
<li>0：请求未初始化（还没有调用 <code>open()</code>）。</li>
<li>1：请求已经建立，但是还没有发送（还没有调用 <code>send()</code>）。</li>
<li>2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。</li>
<li>3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。</li>
<li>4：响应已完成；您可以获取并使用服务器的响应了。</li>
</ul>
</li>
<li><p><code>responseText</code> ：请求服务器返回的数据存在该属性里面</p>
</li>
<li><code>status</code> : <code>http</code>状态码</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/jquery9.png" alt="HTTP状态码"></p>
<ul>
<li>案例：<code>ajax</code>封装案例</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//ajax请求后台数据</span></div><div class="line"><span class="keyword">var</span> btn =  <span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</div><div class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	</div><div class="line">	ajax(&#123;<span class="comment">//json格式</span></div><div class="line">		type:<span class="string">"post"</span>,</div><div class="line">		<span class="attr">url</span>:<span class="string">"post.php"</span>,</div><div class="line">		<span class="attr">data</span>:<span class="string">"username=poetries&amp;pwd=123456"</span>,</div><div class="line">		<span class="attr">asyn</span>:<span class="literal">true</span>,</div><div class="line">		<span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">			<span class="built_in">document</span>.write(data);</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"><span class="comment">//封装ajax</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">aJson</span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> ajx = <span class="literal">null</span>;</div><div class="line">	<span class="keyword">var</span> type = aJson.type || <span class="string">"get"</span>;</div><div class="line">	<span class="keyword">var</span> asyn = aJson.asyn || <span class="literal">true</span>;</div><div class="line">	<span class="keyword">var</span> url = aJson.url;		<span class="comment">// url 接收 传输位置</span></div><div class="line">	<span class="keyword">var</span> success = aJson.success;<span class="comment">// success 接收 传输完成后的回调函数</span></div><div class="line">	<span class="keyword">var</span> data = aJson.data || <span class="string">''</span>;<span class="comment">// data 接收需要附带传输的数据</span></div><div class="line">	</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;<span class="comment">//兼容处理</span></div><div class="line">		ajx = <span class="keyword">new</span> XMLHttpRequest();<span class="comment">//一般浏览器</span></div><div class="line">	&#125;<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		ajx = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);<span class="comment">//IE6+</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (type == <span class="string">"get"</span> &amp;&amp; data)</div><div class="line">	&#123;</div><div class="line">		url +=<span class="string">"/?"</span>+data+<span class="string">"&amp;"</span>+<span class="built_in">Math</span>.random();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//初始化ajax请求</span></div><div class="line">	ajx.open( type , url , asyn );</div><div class="line">	<span class="comment">//规定传输数据的格式</span></div><div class="line">	ajx.setRequestHeader(<span class="string">'content-type'</span>,<span class="string">'application/x-www-form-urlencoded'</span>);</div><div class="line">	<span class="comment">//发送ajax请求（包括post数据的传输）</span></div><div class="line">	type == <span class="string">"get"</span> ?ajx.send():ajx.send(aJson.data);</div><div class="line">	</div><div class="line">	<span class="comment">//处理请求</span></div><div class="line">	ajx.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params">aJson</span>)</span>&#123;</div><div class="line">		</div><div class="line">	<span class="keyword">if</span>(ajx.readState == <span class="number">4</span>)&#123;</div><div class="line">			</div><div class="line">		<span class="keyword">if</span> (ajx.status == <span class="number">200</span> &amp;&amp; ajx.status&lt;<span class="number">300</span>)<span class="comment">//200是HTTP 请求成功的状态码</span></div><div class="line">		&#123;</div><div class="line">			<span class="comment">//请求成功处理数据</span></div><div class="line">			success &amp;&amp; success(ajx.responseText);</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			alert(<span class="string">"请求出错"</span>+ajx.status);</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">		</div><div class="line">	&#125;;</div></pre></td></tr></table></figure>
<h5 id="jQuery中的Ajax-补充部分–来自锋利的jQuery"><a href="#jQuery中的Ajax-补充部分–来自锋利的jQuery" class="headerlink" title="jQuery中的Ajax  [补充部分–来自锋利的jQuery]"></a>jQuery中的Ajax  [补充部分–来自锋利的jQuery]</h5><hr>
<p><code>jquery</code>对<code>Ajax</code>操作进行了封装，在<code>jquery</code>中的<code>$.ajax()</code>方法属于最底层的方法，第<code>2</code>层是<code>load()</code>、<code>$.get()</code>、<code>$.post();</code>第<code>3</code>层是<code>$.getScript()</code>、<code>$.getJSON()</code>，第<code>2</code>层使用频率很高 </p>
<h6 id="load-方法"><a href="#load-方法" class="headerlink" title="load()方法"></a><code>load()</code>方法</h6><hr>
<ul>
<li><code>load()</code>方法是<code>jquery</code>中最简单和常用的<code>ajax</code>方法，能载入远程<code>HTML</code>代码并插入<code>DOM</code>中 结构为：<code>load(url,[data],[callback])</code><ul>
<li>使用<code>url</code>参数指定选择符可以加载页面内的某些元素 <code>load</code>方法中<code>url</code>语法：<code>url selector</code> 注意：<code>url</code>和选择器之间有一个空格</li>
</ul>
</li>
<li>传递方式<ul>
<li><code>load()</code>方法的传递方式根据参数<code>data</code>来自动指定，如果没有参数传递，则采用<code>GET</code>方式传递，反之，采用<code>POST</code></li>
</ul>
</li>
<li>回调参数<ul>
<li>必须在加载完成后才执行的操作，该函数有三个参数 分别代表请求返回的内容、请求状态、<code>XMLHttpRequest</code>对象</li>
<li>只要请求完成，回调函数就会被触发</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#testTest"</span>).load(<span class="string">"test.html"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">responseText,textStatus,XMLHttpRequest</span>)</span>&#123;</div><div class="line">    <span class="comment">//respnoseText 请求返回的内容</span></div><div class="line">    <span class="comment">//textStatus 请求状态 ：sucess、error、notmodified、timeout</span></div><div class="line">    <span class="comment">//XMLHttpRequest </span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><strong>load方法参数</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数名称</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>请求<code>HTML</code>页面的<code>URL</code>地址</td>
</tr>
<tr>
<td><code>data(可选)</code></td>
<td><code>Object</code></td>
<td>发送至服务器的<code>key</code> / <code>value</code>数据</td>
</tr>
<tr>
<td><code>callback(可选)</code></td>
<td><code>Function</code></td>
<td>请求完成时的回调函数，无论是请求成功还是失败</td>
</tr>
</tbody>
</table>
<h6 id="get-和-post-方法"><a href="#get-和-post-方法" class="headerlink" title="$.get()和$.post()方法"></a>$.get()和$.post()方法</h6><hr>
<p><code>load()</code>方法通常用来从web服务器上获取静态的数据文件。在项目中需要传递一些参数给服务器中的页面，那么可以使用<code>$.get()</code>和<code>$.post()</code>或<code>$.ajax()</code>方法</p>
<ul>
<li><p>注意：<code>$.get()</code>和<code>$.post()</code>方法是<code>jquery</code>中的全局函数</p>
</li>
<li><p><strong>$.get()方法</strong></p>
<ul>
<li><code>$.get()</code>方法使用<code>GET</code>方式来进行异步请求</li>
<li>结构为：<code>$.get(url,[data],callback,type)</code><ul>
<li>如果服务器返回的内容格式是<code>xml</code>文档，需要在服务器端设置<code>Content-Type</code>类型 代码如下：<code>header(&quot;Content-Type:text/xml:charset=utf-8&quot;)</code> //<code>php</code></li>
</ul>
</li>
</ul>
</li>
<li><strong><code>$.get()</code>方法参数解析</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>请求<code>HTML</code>页的地址</td>
</tr>
<tr>
<td><code>data(可选)</code></td>
<td><code>Object</code></td>
<td>发送至服务器的<code>key</code>/ <code>value</code> 数据会作为<code>QueryString</code>附加到请求URL中</td>
</tr>
<tr>
<td><code>callback(可选)</code></td>
<td><code>Function</code></td>
<td>载入成功的回调函数（只有当<code>Response</code>的返回状态是success才调用该方法）</td>
</tr>
<tr>
<td><code>type(可选)</code></td>
<td><code>String</code></td>
<td>服务器返回内容的格式，包括<code>xml</code>、<code>html</code>、<code>script</code>、<code>json</code>、<code>text</code>和<code>_default</code></td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong>$.post()方法</strong></p>
<ul>
<li>它与<code>$.get()</code>方法的结构和使用方式相同，有如下区别<ul>
<li><code>GET</code>请求会将参数跟张乃URL后进行传递，而<code>POST</code>请求则是作为<code>Http</code>消息的实体内容发送给web服务器，在<code>ajax</code>请求中，这种区别对用户不可见<ul>
<li><code>GET</code>方式对传输数据有大小限制（通常不能大于<code>2KB</code>），而使用<code>POST</code>方式传递的数据量要比<code>GET</code>方式大得多（理论不受限制）</li>
<li><code>GET</code>方式请求的数据会被浏览器缓存起来，因此其他人可以从浏览器的历史纪录中读取这些数据，如：账号、密码。在某种情况下，<code>GET</code>方式会带来严重的安全问题，而<code>POST</code>相对来说可以避免这些问题</li>
<li><code>GET</code>和<code>POST</code>方式传递的数据在服务端的获取也不相同。在<code>PHP</code>中，<code>GET</code>方式用<code>$_GET[]</code>获取；<code>POST</code>方式用<code>$_POST[]</code>获取;两种方式都可用<code>$_REQUEST[]</code>来获取 </li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>总结</strong></p>
<ul>
<li>使用<code>load()</code>、<code>$.get()</code>和<code>$.post()</code>方法完成了一些常规的<code>Ajax</code>程序，如果还需要复杂的<code>Ajax</code>程序，就需要用到<code>$.ajax()</code>方式</li>
</ul>
</li>
</ul>
<h6 id="ajax-方法"><a href="#ajax-方法" class="headerlink" title="$.ajax()方法"></a>$.ajax()方法</h6><hr>
<ul>
<li><code>$.ajax()</code>方法是<code>jquery</code>最底层的<code>Ajax</code>实现，它的结构为<code>$.ajax(options)</code></li>
<li>该方法只有一个参数，但在这个对象里包含了<code>$.ajax()</code>方式所需要的请求设置以及回调函等信息，参数以<code>key</code> / <code>value</code>存在，所有参数都是可选的</li>
<li><strong>$.ajax()方式常用参数解析</strong></li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td><code>String</code></td>
<td>(默认为当前页地址)发送请求的地址</td>
</tr>
<tr>
<td><code>type</code></td>
<td><code>String</code></td>
<td>请求方式（<code>POST</code>或<code>GET</code>）默认为<code>GET</code></td>
</tr>
<tr>
<td><code>timeout</code></td>
<td><code>Number</code></td>
<td>设置请求超时时间（毫秒）</td>
</tr>
<tr>
<td><code>dataType</code></td>
<td><code>String</code></td>
<td>预期服务器返回的类型。可用的类型如下<br><br> <strong>xml</strong>:返回<code>XML</code>文档，可用<code>jquery</code>处理<br><strong>html</strong>:返回纯文本的<code>HTML</code>信息，包含的<code>script</code>标签也会在插入<code>DOM</code>时执行<br><strong>script</strong>：返回纯文本的<code>javascript</code>代码。不会自动缓存结果，除非设置<code>cache</code>参数。注意：在远程请求时，所有的<code>POST</code>请求都将转为<code>GET</code>请求<br><strong>json</strong>:返回<code>JSON</code>数据<br><strong>jsonp</strong>:<code>JSONP</code>格式，使用<code>jsonp</code>形式调用函数时，例如：<code>myurl?call back=?,jquery</code>将自动替换后一个<code>？</code>为正确的函数名，以执行回调函数<br><strong>text</strong>:返回纯文本字符串</td>
</tr>
<tr>
<td><code>beforeSend</code></td>
<td><code>Function</code></td>
<td>发送请求前可以修改<code>XMLHttpRequest</code>对象的函数，例如添加自定义<code>HTTP</code>头。在<code>beforeSend</code>中如果返回<code>false</code>可以取消本次<code>Ajax</code>请求。<code>XMLHttpRequest</code>对象是唯一的参数<br> function(XMLHttpRequest){<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>this</code>;//调用本次<code>Ajax</code>请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>complete</code></td>
<td><code>Function</code></td>
<td>请求完成后的回调函数（请求成功或失败时都调用）<br> 参数：<code>XMLHttpRequest</code>对象和一个描述成功请求类型的字符串<br>function(XMLHttpRequest,textStatus){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>this</code>;//调用本次Ajax请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>success</code></td>
<td><code>Function</code></td>
<td>请求成功后调用的回调函数，有两个参数<br>(1)由服务器返回，并根据<code>dataTyppe</code>参数进行处理后的数据<br>(2)描述状态的字符串<br><code>function</code>(data,textStatus){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//<code>data</code>可能是<code>xmlDoc、``jsonObj</code>、<code>html</code>、<code>text</code>等<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>this</code>;//调用本次<code>Ajax</code>请求时传递的<code>options</code>参数<br>}</td>
</tr>
<tr>
<td><code>error</code></td>
<td><code>Function</code></td>
<td>请求失败时被调用的函数</td>
</tr>
<tr>
<td><code>global</code></td>
<td><code>Boolean</code></td>
<td>默认为<code>true</code>。表示是否触发全局<code>Ajax</code>事件，设置为<code>false</code>将不会触发。<code>AjaxStart</code>或<code>AjaxStop</code>可用于控制各种<code>Ajax</code>事件</td>
</tr>
</tbody>
</table>
<h4 id="第九节-插件"><a href="#第九节-插件" class="headerlink" title="第九节 插件"></a>第九节 插件</h4><hr>
<ul>
<li><p><strong>什么是插件</strong></p>
<ul>
<li>插件(<code>Plugin</code>)也称为<code>jQuery</code>的扩展。以<code>jQuery</code>核心代码为基础编写的符合一定规范的应用程序。通过<code>js</code>文件的方式引用。</li>
</ul>
</li>
<li><p><strong>插件分为哪几类</strong></p>
<ul>
<li><code>UI</code>类、表单及验证类、输入类、特效类、<code>Ajax</code>类、滑动类、图形图像类、导航类、综合工具类、动画类等等 </li>
</ul>
</li>
</ul>
<ul>
<li><strong>引入插件的步骤</strong><ul>
<li>引入<code>jquery.js</code>文件，而且在所以插件之前引入</li>
<li>引入插件</li>
<li>引入插件相关文件，比如皮肤、中文包</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>如何自定义插件</strong>：    </p>
<ul>
<li>插件形式分为3类：<ul>
<li>封装对象方法插件</li>
<li>封装全局函数插件</li>
<li>选择器插件(类似于.<code>find()</code>)</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>自定义插件的规范</strong>（解决各种插件的冲突和错误，增加成功率）</p>
<ul>
<li>命名：<code>jquery.插件名.js</code></li>
<li>所有的新方法附加在<code>jquery.fn</code>对象上面，所有新功能附加在<code>jquery</code>上</li>
<li>所有的方法或插件必须用分号结尾，避免出问题</li>
<li>插件必须返回jQuery对象，便于链式连缀</li>
<li>避免插件内部使用<code>$</code>，如果要使用，请传递<code>jQuery</code>(<code>$</code>并不是总等于<code>jQuery</code>，另外其他<code>js</code>框架也可能使用<code>$</code>)</li>
<li>插件中的<code>this</code>应该指向<code>jQuery</code>对象</li>
<li>使用<code>this.each()</code>迭代元素</li>
</ul>
</li>
<li><p><strong>自定义插件案例</strong></p>
<ul>
<li>为了方便用户创建插件，<code>jQuery</code>提供了 <code>jQuery.extend()</code> 和 <code>jQuery.fn.extend()</code></li>
<li><code>jQuery.extend()</code>：创建工具函数或者是选择器</li>
<li><code>jQuery.fn.extend()</code>：创建<code>jQuery</code>对象命令  （<code>fn</code>相当于<code>prototype</code>的别名）</li>
</ul>
</li>
<li><p><strong><code>jQuery</code>官方提供的插件开发模板</strong></p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</div><div class="line">	$.fn.plugin=<span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</div><div class="line">		<span class="keyword">var</span> defaults = &#123;</div><div class="line">			<span class="comment">//各种参数 各种属性</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">var</span> options = $.extend(defaults,options);</div><div class="line"></div><div class="line">		<span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="comment">//实现功能的代码</span></div><div class="line">		&#125;);</div><div class="line"></div><div class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">	&#125;</div><div class="line">&#125;)(jQuery);</div></pre></td></tr></table></figure>
<p><strong>自定义<code>jQuery</code>函数</strong>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</div><div class="line">	$.extend(&#123;</div><div class="line">		<span class="attr">test</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			alert(<span class="string">"hello plugin"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;)</div><div class="line">	&#125;)(jQuery);</div></pre></td></tr></table></figure>
<p><strong>自定义<code>jQuery</code>命令</strong>：</p>
<ul>
<li>形式1：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</div><div class="line">    $.fn.extend(&#123;</div><div class="line">        <span class="attr">say</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">         alert(<span class="string">"hello plugin"</span>);</div><div class="line">    &#125;</div><div class="line">    &#125;)</div><div class="line">&#125;)(jQuery);</div></pre></td></tr></table></figure>
<ul>
<li>形式2：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</div><div class="line">	$.fn.say = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		alert(<span class="string">"hello plugin"</span>);</div><div class="line">	&#125;;</div><div class="line">	</div><div class="line">&#125;)(jQuery);</div></pre></td></tr></table></figure>
<h4 id="附录一-jQuery各个版本新增的一些常用的方法"><a href="#附录一-jQuery各个版本新增的一些常用的方法" class="headerlink" title="附录一 jQuery各个版本新增的一些常用的方法"></a>附录一 jQuery各个版本新增的一些常用的方法</h4><hr>
<ul>
<li><code>jQuery1.3</code>新增常用的方法</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.closest()</code></td>
<td>从元素本身开始，逐级向上级元素匹配，并返回最先匹配的祖先元素</td>
</tr>
<tr>
<td><code>die()</code></td>
<td>从元素中删除先前用<code>live()</code>方法绑定的所有的事件</td>
</tr>
<tr>
<td><code>live()</code></td>
<td>附加一个事件处理器到符合目前选择器的所有元素匹配</td>
</tr>
</tbody>
</table>
<ul>
<li><code>jQuery1.4</code>新增常用的方法</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.first()</code></td>
<td>获取集合中第一个元素</td>
</tr>
<tr>
<td><code>last()</code></td>
<td>获取集合中最后一个元素</td>
</tr>
<tr>
<td><code>has(selector)</code></td>
<td>保留包含特定后代的元素，去掉那些不含有指定后代的元素</td>
</tr>
<tr>
<td><code>detach()</code></td>
<td>从<code>DOM</code>中去掉所有匹配的元素。<code>detach()</code>和<code>remov()</code>一样，除了<code>detach()</code>保存了所有<code>jquery</code>数据和被移走的元素相关联。当需要移走一个元素，不久又将该元素插入<code>DOM</code>时，这种方法很有用</td>
</tr>
<tr>
<td><code>delegate()</code></td>
<td>为所有选择器匹配的元素附加一个处理一个或多个事件</td>
</tr>
<tr>
<td><code>undelegate()</code></td>
<td>为所有选择器匹配的元素删除一个处理一个或多个事件</td>
</tr>
</tbody>
</table>
<ul>
<li><code>jQuery1.6</code>新增常用的方法</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>prop(proptyName)</code></td>
<td>获取在匹配元素集合中的第一个元素的属性值</td>
</tr>
<tr>
<td><code>removeProp(proptyName,value)</code></td>
<td>为匹配的元素删除设置的属性</td>
</tr>
<tr>
<td><code>:focus</code></td>
<td>选择当前获取焦点的元素</td>
</tr>
</tbody>
</table>
<h4 id="附录二-jQuery性能优化"><a href="#附录二-jQuery性能优化" class="headerlink" title="附录二 jQuery性能优化"></a>附录二 jQuery性能优化</h4><hr>
<ul>
<li><p><strong>性能优化</strong></p>
<ul>
<li>使用最新版的jQuery类库</li>
<li><strong>使用合适的选择器</strong><ul>
<li><code>$(#id)</code><ul>
<li>使用<code>id</code>来定位<code>DOM</code>元素是最佳的方式，为了提高性能，建议从最近的<code>ID</code>元素开始往下搜索</li>
</ul>
</li>
<li><code>$(&quot;p&quot;)</code> , <code>$(&quot;div&quot;)</code> , <code>$(&quot;input&quot;)</code><ul>
<li>标签选择器性能也不错，它是性能优化的第二选择。因为<code>jQuery</code>将直接调用本地方法<code>document.getElementsByTagName()</code>来定位<code>DOM</code>元素</li>
</ul>
</li>
<li><code>$(&quot;.class&quot;)</code><ul>
<li>建议有选择性的使用  </li>
</ul>
</li>
<li><code>$(&quot;[attribute=value]&quot;)</code><ul>
<li>对这个利用属性定位<code>DOM</code>元素，本地<code>JavaScript</code>并没有直接实现。这种方式性能并不是很理想。建议避免使用。</li>
</ul>
</li>
<li><code>$(&quot;:hidden&quot;)</code><ul>
<li>和上面利用属性定位<code>DOM</code>方式类似，建议尽量不要使用 </li>
</ul>
</li>
<li><strong>注意的地方</strong><ul>
<li>尽量使用<code>ID</code>选择器</li>
<li>尽量给选择器指定上下文</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><strong>缓存对象</strong><ul>
<li>如果你需要在其他函数中使用<code>jQuery</code>对象，你可以把他们缓存在全局环境中</li>
</ul>
</li>
<li><strong>数组方式使用<code>jQuery</code>对象</strong><ul>
<li>使用<code>jQuery</code>选择器获取的结果是一个<code>jQuery</code>对象。在性能方面，建议使用<code>for</code>或<code>while</code>循环来处理，而不是<code>$.each()</code></li>
</ul>
</li>
<li><strong>事件代理</strong><ul>
<li>每一个<code>JavaScript</code>事件（如：<code>click</code>、<code>mouseove</code>r）都会冒泡到父级节点。当我们需要给多个元素调用同个函数时这点很有用。比如，我们要为一个表单绑定这样的行为：点击td后，把背景颜色设置为红色<ul>
<li><code>$(&quot;#myTable td&quot;).click(function(){$(this).css(&quot;background&quot;,&quot;red&quot;);});</code></li>
<li>假设有<code>100</code>个<code>td</code>元素，在使用以上的方式时，绑定了<code>100</code>个事件，将带来性能影响</li>
<li>代替这种多元素的事件监听方法是，你只需向他们的父节点绑定一次事件，然后通过<code>event.target</code>获取到点击的当前元素<ul>
<li><code>$(&quot;#myTable td&quot;).click(function({$(e.target).css(&quot;background&quot;,&quot;red&quot;)});</code></li>
<li><code>e.target</code>捕捉到触发的目标 </li>
</ul>
</li>
<li>在<code>jQuery1.7</code>中提供了一个新的方法<code>on()</code>，来帮助你将整个事件监听封装到一个便利的方法中<ul>
<li><code>$(&quot;#myTable td&quot;).on(&quot;click&quot;,&#39;td&#39;,function(){$(this).css(&quot;background&quot;,&quot;red&quot;);});</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>将你的代码转化成jQuery插件</strong><ul>
<li>它能够使你的代码有更好的重用性，并且能够有效的帮助你组织代码</li>
</ul>
</li>
<li><p><strong>使用join()方法来拼接字符串</strong></p>
<ul>
<li>也许你之前使用<code>+</code>来拼接字符串，现在可以改了。它确实有助于性能优化，尤其是长字符串处理的时候</li>
</ul>
</li>
<li><p><strong>合理使用HTML5和Data属性</strong></p>
<ul>
<li><code>HTML5</code>的<code>data</code>属性可以帮助我们插入数据，特别是后端的数据交换。<code>jQuery</code>的<code>Data()</code>方法有效利用<code>HTML5</code>的属性<ul>
<li>例如：<code>&lt;div id=&quot;dl&quot; data-role=&quot;page&quot; data-list-value=&quot;43&quot; data-options=&#39;{&quot;name:&quot;&quot;John&quot;}&#39;&gt;</code></li>
<li>为了读取数据，你需要使用如下代码<ul>
<li><code>$(&quot;#dl&#39;).data(&quot;role&#39;;//page)</code></li>
<li><code>$(&quot;#dl&#39;).data(&quot;lastValue&#39;;//43)</code></li>
<li><code>$(&quot;#dl&#39;).data(&quot;options&#39;;//john)</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>尽量使用原生的JavaScript方法</strong></p>
</li>
<li><strong>压缩JavaScript代码</strong><ul>
<li>一方面使用<code>Gzip</code>；另一方面去除<code>JavaScript</code>文件里面的注释、空白 </li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="附录三-常用的jQuery代码片段"><a href="#附录三-常用的jQuery代码片段" class="headerlink" title="附录三 常用的jQuery代码片段"></a>附录三 常用的jQuery代码片段</h4><hr>
<ul>
<li>禁用页面的右键菜单</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(functuion()&#123;</div><div class="line">    $(<span class="built_in">document</span>).bind(<span class="string">"contextmenu"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">  &#125;);  </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>新窗口打开页面</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//例子1：href="http://"的链接将会在新窗口打开链接</span></div><div class="line">    $(<span class="string">'a[href=^="http://"]'</span>).attr(<span class="string">"target"</span>,<span class="string">"_blank"</span>);</div><div class="line">    </div><div class="line">  <span class="comment">//例子2：rel="external"的超链接将会在新窗口打开链接</span></div><div class="line">    $(<span class="string">"a[rel$='external']"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="keyword">this</span>.target = <span class="string">"_blank"</span>;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"><span class="comment">//use</span></div><div class="line">&lt;a href=<span class="string">"http://baidu.com"</span> rel=<span class="string">"external"</span>&gt;open&lt;<span class="regexp">/a&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>判断浏览器类型</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$(<span class="built_in">document</span>).reday(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//Firefox2 and above</span></div><div class="line">    <span class="keyword">if</span>( $.browser.mozilla &amp;&amp; $.browser.version&gt;=<span class="string">"1.8"</span>)&#123;</div><div class="line">      <span class="comment">//do something</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// Safari</span></div><div class="line">  <span class="keyword">if</span>($.browser.safari)&#123;</div><div class="line">     <span class="comment">//do something</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// Chrome</span></div><div class="line">  <span class="keyword">if</span>($.browser.chrome)&#123;</div><div class="line">     <span class="comment">//do something</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// Opera</span></div><div class="line">  <span class="keyword">if</span>($.browser.opera)&#123;</div><div class="line">     <span class="comment">//do something</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;)</div><div class="line"></div><div class="line">  <span class="comment">// IE6 and blow</span></div><div class="line">  <span class="keyword">if</span>($.browser.msie &amp;&amp; $.browser.version&lt;=<span class="number">6</span>)&#123;</div><div class="line">     <span class="comment">//do something</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// anything above IE6</span></div><div class="line">  <span class="keyword">if</span>($.browser.msie &amp;&amp; $.browser.version &gt; <span class="number">6</span>)&#123;</div><div class="line">     <span class="comment">//do something</span></div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<ul>
<li>输入框文字获取和失去焦点</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">"input.text1"</span>).val(<span class="string">"Enter you search text here"</span>);</div><div class="line">    textFill($(<span class="string">'input.text1'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">textFill</span>(<span class="params">input</span>)</span>&#123;<span class="comment">//input focus text function</span></div><div class="line">    <span class="keyword">var</span> originvalue = input.val();</div><div class="line">    input.focus(funtion()&#123;</div><div class="line">        <span class="keyword">if</span>($.trim(input.val())== originvalue)&#123;</div><div class="line">            input.val(<span class="string">' '</span>);</div><div class="line">        &#125;</div><div class="line">  &#125;).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="keyword">if</span>($.trim(input.val()) == <span class="string">' '</span>)&#123;</div><div class="line">          input.val(originalvalue);</div><div class="line">      &#125;</div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>获取鼠标位置</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  $(<span class="built_in">document</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">      $(<span class="string">"#XY"</span>).html(<span class="string">"X:"</span> + e.pageX+ <span class="string">"| Y"</span> + e.pageY);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>判断元素是否存在</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>($(<span class="string">"#id"</span>).length)&#123;</div><div class="line">      <span class="comment">// do some thing  </span></div><div class="line">  &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li>点击div也可以跳转</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"div"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">window</span>.location  = $(<span class="keyword">this</span>).find(<span class="string">"a"</span>).attr(<span class="string">"href"</span>);</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//use</span></div><div class="line"></div><div class="line">&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html"</span>&gt;</span>home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure>
<ul>
<li>设置div在屏幕中央</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    jQuery.fn.center = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.css(<span class="string">"position"</span>,<span class="string">"absolute"</span>);</div><div class="line">        <span class="keyword">this</span>.css(<span class="string">"top"</span>,($(<span class="built_in">window</span>).height() - <span class="keyword">this</span>.lenght()) / <span class="number">2</span> +$(<span class="built_in">window</span>).scrollTop() + <span class="string">"px"</span>); </div><div class="line">        <span class="keyword">this</span>.css(<span class="string">"left"</span>,($(<span class="built_in">window</span>).height() - <span class="keyword">this</span>.lenght()) / <span class="number">2</span> +$(<span class="built_in">window</span>).scrollLeft() + <span class="string">"px"</span>); </div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">  &#125;</div><div class="line"><span class="comment">//use </span></div><div class="line"></div><div class="line"> $(<span class="string">"#XY"</span>).center();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>关闭所有动画效果</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    jQuery.fx.off = <span class="literal">true</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>检测鼠标的右键和左键</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">"#xy"</span>).mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        alert(e.which);<span class="comment">//1 = 鼠标左键  2= 鼠标中间 3 = 鼠标右键</span></div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>回车提交表单</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">"input"</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(e.which == <span class="string">"13"</span>)&#123;</div><div class="line">            alert(<span class="string">"回车提交"</span>);</div><div class="line">      &#125;</div><div class="line">  &#125;)</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>设置全局的Ajax参数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#load"</span>).ajaxStart(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    showLoading();<span class="comment">//显示loading</span></div><div class="line">    disableButtons() <span class="comment">//禁用按钮</span></div><div class="line">&#125;)</div><div class="line"> $(<span class="string">"#load"</span>).ajaxComplete(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    hideLoading();<span class="comment">//隐藏loading</span></div><div class="line">    enableButtons();<span class="comment">//启用按钮</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li>获取选中的下拉框</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#someElement"</span>).find(<span class="string">'option:selected'</span>);</div><div class="line">$(<span class="string">"#someElement option:selected"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>切换复选框</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var tog = false;</div><div class="line">$("button").click(function()&#123;</div><div class="line">    $("input[type=checkbox]').attr("checked",!tog);</div><div class="line">    tog = !tog;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>个性化链接</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">     $(<span class="string">"a[href$='pdf']"</span>).addClass(<span class="string">"pdf"</span>);</div><div class="line">     $(<span class="string">"a[href$='zip']"</span>).addClass(<span class="string">"zip"</span>);</div><div class="line">     $(<span class="string">"a[href$='psd']"</span>).addClass(<span class="string">"psd"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>在一段时间后自动隐藏或关闭元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">setTimeOut(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        $(<span class="string">"div"</span>).fadeIn(<span class="number">400</span>);</div><div class="line">  &#125;,<span class="number">3000</span>);</div><div class="line"></div><div class="line"><span class="comment">//而在1.4之后的版本可以用delay()来实现</span></div><div class="line">$(<span class="string">"div"</span>).slideUp(<span class="number">300</span>).delay(<span class="number">3000</span>).fadeIn(<span class="number">400</span>);</div></pre></td></tr></table></figure>
<ul>
<li>使用事件代理绑定元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">//为table里面的td元素绑定click事件，不管td是一直存在还是动态创建的</span></div><div class="line"> <span class="comment">//jQuery 1.4.2之前使用这种方式</span></div><div class="line"> $(<span class="string">"table"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">"td"</span>,<span class="keyword">this</span>).live(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">       $(<span class="keyword">this</span>).toggleClass(<span class="string">"hover"</span>); </div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//jquery 1.4.2使用的方式</span></div><div class="line"></div><div class="line">$(<span class="string">"table"</span>).delegate(<span class="string">"td"</span>,<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="keyword">this</span>).toggleClass(<span class="string">"hover"</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//jQuery1.7.1使用的方式</span></div><div class="line">$(<span class="string">"table"</span>).on(<span class="string">"click"</span>,<span class="string">"td"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="keyword">this</span>).toggleClass(<span class="string">"hover"</span>);</div><div class="line"> &#125;)</div></pre></td></tr></table></figure>
<ul>
<li>预加载图片</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> cache = [];</div><div class="line">  <span class="comment">// Arguments are image paths relative to the current page.</span></div><div class="line">  $.preLoadImages = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> args_len = <span class="built_in">arguments</span>.length;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = args_len; i--;) &#123;</div><div class="line">      <span class="keyword">var</span> cacheImage = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>);</div><div class="line">      cacheImage.src = <span class="built_in">arguments</span>[i];</div><div class="line">      cache.push(cacheImage);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">jQuery.preLoadImages(<span class="string">"image1.gif"</span>, <span class="string">"/path/to/image2.png"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>让页面中的每个元素都适合在移动设备上展示</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scr = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</div><div class="line">scr.setAttribute(<span class="string">'src'</span>, <span class="string">'https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js'</span>);</div><div class="line"><span class="built_in">document</span>.body.appendChild(scr);</div><div class="line">scr.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	$(<span class="string">'div'</span>).attr(<span class="string">'class'</span>, <span class="string">''</span>).attr(<span class="string">'id'</span>, <span class="string">''</span>).css(&#123;</div><div class="line">		<span class="string">'margin'</span> : <span class="number">0</span>,</div><div class="line">		<span class="string">'padding'</span> : <span class="number">0</span>,</div><div class="line">		<span class="string">'width'</span>: <span class="string">'100%'</span>,</div><div class="line">		<span class="string">'clear'</span>:<span class="string">'both'</span></div><div class="line">	&#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>图像等比例缩放</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">window</span>).bind(<span class="string">"load"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="comment">// IMAGE RESIZE</span></div><div class="line">	$(<span class="string">'#product_cat_list img'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> maxWidth = <span class="number">120</span>;</div><div class="line">		<span class="keyword">var</span> maxHeight = <span class="number">120</span>;</div><div class="line">		<span class="keyword">var</span> ratio = <span class="number">0</span>;</div><div class="line">		<span class="keyword">var</span> width = $(<span class="keyword">this</span>).width();</div><div class="line">		<span class="keyword">var</span> height = $(<span class="keyword">this</span>).height();</div><div class="line">		<span class="keyword">if</span>(width &gt; maxWidth)&#123;</div><div class="line">			ratio = maxWidth / width;</div><div class="line">			$(<span class="keyword">this</span>).css(<span class="string">"width"</span>, maxWidth);</div><div class="line">			$(<span class="keyword">this</span>).css(<span class="string">"height"</span>, height * ratio);</div><div class="line">			height = height * ratio;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">var</span> width = $(<span class="keyword">this</span>).width();</div><div class="line">		<span class="keyword">var</span> height = $(<span class="keyword">this</span>).height();</div><div class="line">		<span class="keyword">if</span>(height &gt; maxHeight)&#123;</div><div class="line">			ratio = maxHeight / height;</div><div class="line">			$(<span class="keyword">this</span>).css(<span class="string">"height"</span>, maxHeight);</div><div class="line">			$(<span class="keyword">this</span>).css(<span class="string">"width"</span>, width * ratio);</div><div class="line">			width = width * ratio;</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">	<span class="comment">//$("#contentpage img").show();</span></div><div class="line">	<span class="comment">// IMAGE RESIZE</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>返回页面顶部</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Back To Top</span></div><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </div><div class="line">  $(<span class="string">'.top'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  </div><div class="line">     $(<span class="built_in">document</span>).scrollTo(<span class="number">0</span>,<span class="number">500</span>);  </div><div class="line">  &#125;);</div><div class="line">&#125;); </div><div class="line"><span class="comment">//Create a link defined with the class .top</span></div><div class="line">&lt;a href=<span class="string">"#"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"top"</span>&gt;Back To Top&lt;<span class="regexp">/a&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>使用jQuery打造手风琴式的折叠效果</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> accordion = &#123;</div><div class="line">     <span class="attr">init</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">           <span class="keyword">var</span> $container = $(<span class="string">'#accordion'</span>);</div><div class="line">           $container.find(<span class="string">'li:not(:first) .details'</span>).hide();</div><div class="line">           $container.find(<span class="string">'li:first'</span>).addClass(<span class="string">'active'</span>);</div><div class="line">           $container.on(<span class="string">'click'</span>,<span class="string">'li a'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">                  e.preventDefault();</div><div class="line">                  <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>).parents(<span class="string">'li'</span>);</div><div class="line">                  <span class="keyword">if</span>($<span class="keyword">this</span>.hasClass(<span class="string">'active'</span>))&#123;</div><div class="line">                         <span class="keyword">if</span>($(<span class="string">'.details'</span>).is(<span class="string">':visible'</span>)) &#123;</div><div class="line">                                $<span class="keyword">this</span>.find(<span class="string">'.details'</span>).slideUp();</div><div class="line">                         &#125; <span class="keyword">else</span> &#123;</div><div class="line">                                $<span class="keyword">this</span>.find(<span class="string">'.details'</span>).slideDown();</div><div class="line">                         &#125;</div><div class="line">                  &#125; <span class="keyword">else</span> &#123;</div><div class="line">                         $container.find(<span class="string">'li.active .details'</span>).slideUp();</div><div class="line">                         $container.find(<span class="string">'li'</span>).removeClass(<span class="string">'active'</span>);</div><div class="line">                         $<span class="keyword">this</span>.addClass(<span class="string">'active'</span>);</div><div class="line">                         $<span class="keyword">this</span>.find(<span class="string">'.details'</span>).slideDown();</div><div class="line">                  &#125;</div><div class="line">           &#125;);</div><div class="line">     &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>使用jQuery和Ajax自动填充选择框</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(function()&#123;</div><div class="line">$("select#ctlJob").change(function()&#123;</div><div class="line">$.getJSON("/select.php",&#123;id: $(this).val(), ajax: 'true'&#125;, function(j)&#123;</div><div class="line">var options = '';</div><div class="line">for (var i = 0; i &lt; j.length; i++) &#123;</div><div class="line">options += '</div><div class="line">' + j[i].optionDisplay + '</div><div class="line">';</div><div class="line">&#125;</div><div class="line">$("select#ctlPerson").html(options);</div><div class="line">&#125;)</div><div class="line">&#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li>自动替换丢失的图片</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Safe Snippet</span></div><div class="line">$(<span class="string">"img"</span>).error(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	$(<span class="keyword">this</span>).unbind(<span class="string">"error"</span>).attr(<span class="string">"src"</span>, <span class="string">"missing_image.gif"</span>);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// Persistent Snipper</span></div><div class="line">$(<span class="string">"img"</span>).error(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	$(<span class="keyword">this</span>).attr(<span class="string">"src"</span>, <span class="string">"missing_image.gif"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>预防对表单进行多次提交</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  $(<span class="string">'form'</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> jQuery.data(<span class="keyword">this</span>, <span class="string">"disabledOnSubmit"</span>) == <span class="string">'undefined'</span>) &#123;</div><div class="line">      jQuery.data(<span class="keyword">this</span>, <span class="string">"disabledOnSubmit"</span>, &#123; <span class="attr">submited</span>: <span class="literal">true</span> &#125;);</div><div class="line">      $(<span class="string">'input[type=submit], input[type=button]'</span>, <span class="keyword">this</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"disabled"</span>);</div><div class="line">      &#125;);</div><div class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>动态添加表单元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//change event on password1 field to prompt new input</span></div><div class="line">$(<span class="string">'#password1'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">//dynamically create new input and insert after password1</span></div><div class="line">        $(<span class="string">"#password1"</span>).append(<span class="string">""</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>在窗口滚动时自动加载内容</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> loading = <span class="literal">false</span>;</div><div class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>((($(<span class="built_in">window</span>).scrollTop()+$(<span class="built_in">window</span>).height())+<span class="number">250</span>)&gt;=$(<span class="built_in">document</span>).height())&#123;</div><div class="line">		<span class="keyword">if</span>(loading == <span class="literal">false</span>)&#123;</div><div class="line">			loading = <span class="literal">true</span>;</div><div class="line">			$(<span class="string">'#loadingbar'</span>).css(<span class="string">"display"</span>,<span class="string">"block"</span>);</div><div class="line">			$.get(<span class="string">"load.php?start="</span>+$(<span class="string">'#loaded_max'</span>).val(), <span class="function"><span class="keyword">function</span>(<span class="params">loaded</span>)</span>&#123;</div><div class="line">				$(<span class="string">'body'</span>).append(loaded);</div><div class="line">				$(<span class="string">'#loaded_max'</span>).val(<span class="built_in">parseInt</span>($(<span class="string">'#loaded_max'</span>).val())+<span class="number">50</span>);</div><div class="line">				$(<span class="string">'#loadingbar'</span>).css(<span class="string">"display"</span>,<span class="string">"none"</span>);</div><div class="line">				loading = <span class="literal">false</span>;</div><div class="line">			&#125;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	$(<span class="string">'#loaded_max'</span>).val(<span class="number">50</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>导航菜单背景切换效果</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;ul id='nav'&gt; </div><div class="line">    &lt;li&gt;导航一&lt;/li&gt; </div><div class="line">    &lt;li&gt;导航二&lt;/li&gt; </div><div class="line">    &lt;li&gt;导航三&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div><div class="line"></div><div class="line">//注意：代码需要修饰完善</div><div class="line"></div><div class="line">$('#nav').click(function(e) &#123;</div><div class="line"> // 要知道siblings的使用          </div><div class="line"></div><div class="line">$(e.target).addClass('tclass').siblings('.tclass').removeClass('tclass');;</div><div class="line"></div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<ul>
<li>解决<code>jQuery</code>, <code>prototype</code>共存，<code>$</code>全局变量冲突问题</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"prototype.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script src=<span class="string">"http://blogbeta.blueidea.com/jquery.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt; jQuery.noConflict();<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </div><div class="line"></div><div class="line">注意：一定要先引入prototype.js 再引入jquery.js，先后顺序不可错</div></pre></td></tr></table></figure>
<ul>
<li>jQuery 判断元素上是否绑定了事件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//jQuery event封装支持判断元素上是否绑定了事件，此方法只适用于jQuery绑定的事件</span></div><div class="line"><span class="keyword">var</span> $events = $(<span class="string">"#foo"</span>).data(<span class="string">"events"</span>);</div><div class="line"><span class="keyword">if</span>( $events &amp;&amp; $events[<span class="string">"click"</span>] )&#123;　　</div><div class="line">    <span class="comment">//your code</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>如何正确地使用<code>toggleClass</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//切换（toggle）类允许你根据某个类的//是否存在来添加或是删除该类。</span></div><div class="line"><span class="comment">//这种情况下有些开发者使用：</span></div><div class="line">a.hasClass(<span class="string">'blueButton'</span>) ? a.removeClass(<span class="string">'blueButton'</span>) : a.addClass(<span class="string">'blueButton'</span>);</div><div class="line"><span class="comment">//toggleClass允许你使用下面的语句来很容易地做到这一点</span></div><div class="line">a.toggleClass(<span class="string">'blueButton'</span>);</div></pre></td></tr></table></figure>
<ul>
<li>如何设置IE特有的功能</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($.browser.msie) &#123;</div><div class="line">    <span class="comment">// Internet Explorer就是个虐待狂</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>如何验证某个元素是否为空</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 方法一</span></div><div class="line"><span class="keyword">if</span> (! $(<span class="string">'#keks'</span>).html()) &#123;</div><div class="line">    <span class="comment">//什么都没有找到;</span></div><div class="line">&#125;</div><div class="line"><span class="comment">// 方法二</span></div><div class="line"><span class="keyword">if</span> ($(<span class="string">'#keks'</span>).is(<span class="string">":empty"</span>)) &#123;</div><div class="line">    <span class="comment">//什么都没有找到;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>访问IFrame里的元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> iFrameDOM = $(<span class="string">"iframe#someID"</span>).contents();</div><div class="line"><span class="comment">//然后，就可以通过find方法来遍历获取iFrame中的元素了</span></div><div class="line">iFrameDOM.find(<span class="string">".message"</span>).slideUp();</div></pre></td></tr></table></figure>
<ul>
<li>管理搜索框的值<ul>
<li>现在各大网站都有搜索框，而搜索框通常都有默认值，当输入框获取焦点时，默认值消失。而一旦输入框失去焦点，而输入框里又没有输入新的值，输入框里的值又会恢复成默认值，如果往输入框里输入了新值，则输入框的值为新输入的值。这种特效用<code>JQuery</code><br>很容易实现</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#searchbox"</span>) .focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      $(<span class="keyword">this</span>).val(<span class="string">''</span>)</div><div class="line">&#125;) .blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">     <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>); </div><div class="line">    <span class="comment">// '请搜索...'为搜索框默认值 </span></div><div class="line">    ($<span class="keyword">this</span>.val() === <span class="string">''</span>)? $<span class="keyword">this</span>.val(<span class="string">'请搜索...'</span>) : <span class="literal">null</span>; </div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li>部分页面加载更新<ul>
<li>为了提高<code>web</code>性能，有更新时我们通常不会加载整个页面，而只是仅仅更新部分页面内容，如图片的延迟加载等。页面部分刷新的特效在<code>JQuery</code>中也很容易实现</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </div><div class="line"><span class="comment">//每隔5秒钟刷新页面内容 //获取的内容将增加到 id为content的元素后 </span></div><div class="line"></div><div class="line">$(<span class="string">"#content"</span>).load(url); &#125;, <span class="number">5000</span>);</div></pre></td></tr></table></figure>
<ul>
<li>采配置JQuery与其它库的兼容性<ul>
<li>如果在项目中使用<code>JQuery</code>，<code>$</code> 是最常用的变量名，但<code>JQuery</code>并不是唯一一个使用<code>$</code>作为变量名的库，为了避免命名冲突，你可以按照下面方式来组织你的代码</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//方法一： 为JQuery重新命名为</span></div><div class="line"> $jvar $j = jQuery.noConflict();$j(<span class="string">'#id'</span>).... <span class="comment">//</span></div><div class="line"></div><div class="line">方法二： 推荐使用的方式</div><div class="line"></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123; $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">     <span class="comment">//这儿，你可以正常的使用JQuery语法 &#125;);</span></div><div class="line">&#125;)(jQuery);</div></pre></td></tr></table></figure>
<ul>
<li>测试密码的强度<ul>
<li>在某些网站注册时常常会要求设置密码，网站也会根据输入密码的字符特点给出相应的提示，如密码过短、强度差、强度中等、强度强等。这又是怎么实现的呢？看下面代码：</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pass"</span> <span class="attr">id</span>=<span class="string">"pass"</span> /&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"passstrength"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//下面的正则表达式建议各位收藏哦，项目上有可能会用得着</span></div><div class="line">$(<span class="string">'#pass'</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123; </div><div class="line"></div><div class="line"><span class="comment">//密码为八位及以上并且字母数字特殊字符三项都包括 </span></div><div class="line"><span class="keyword">var</span> strongRegex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^(?=.&#123;8,&#125;)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\W).*$"</span>, <span class="string">"g"</span>); </div><div class="line"></div><div class="line"><span class="comment">//密码为七位及以上并且字母、数字、特殊字符三项中有两项，强度是中等 </span></div><div class="line"> <span class="keyword">var</span> mediumRegex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"^(?=.&#123;7,&#125;)(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))).*$"</span>, <span class="string">"g"</span>); </div><div class="line"><span class="keyword">var</span> enoughRegex = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(?=.&#123;6,&#125;).*"</span>, <span class="string">"g"</span>); </div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="literal">false</span> == enoughRegex.test($(<span class="keyword">this</span>).val())) &#123; </div><div class="line"></div><div class="line">$(<span class="string">'#passstrength'</span>).html(<span class="string">'More Characters'</span>); &#125;</div><div class="line"> <span class="keyword">else</span> <span class="keyword">if</span> (strongRegex.test($(<span class="keyword">this</span>).val())) &#123;</div><div class="line">     $(<span class="string">'#passstrength'</span>).className = <span class="string">'ok'</span>; </div><div class="line">     $(<span class="string">'#passstrength'</span>).html(<span class="string">'Strong!'</span>); &#125; </div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mediumRegex.test($(<span class="keyword">this</span>).val())) &#123;</div><div class="line">    $(<span class="string">'#passstrength'</span>).className = <span class="string">'alert'</span>; </div><div class="line">    $(<span class="string">'#passstrength'</span>).html(<span class="string">'Medium!'</span>); &#125;</div><div class="line"> <span class="keyword">else</span> &#123; </div><div class="line">    $(<span class="string">'#passstrength'</span>).className = <span class="string">'error'</span>;      </div><div class="line">    $(<span class="string">'#passstrength'</span>).html(<span class="string">'Weak!'</span>); </div><div class="line">&#125; </div><div class="line"><span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line"></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="附录四-常见CND加速服务"><a href="#附录四-常见CND加速服务" class="headerlink" title="附录四 常见CND加速服务"></a>附录四 常见CND加速服务</h4><hr>
<ul>
<li><a href="http://www.bootcdn.cn/" target="_blank" rel="external">Bootstrap中文网开源项目免费 CDN 服务</a></li>
<li><a href="http://cdn.code.baidu.com/" target="_blank" rel="external">百度静态资源公共库</a></li>
<li><a href="http://libs.useso.com/" target="_blank" rel="external">360网站卫士常用前端公共库CDN服务–已停止服务</a></li>
<li><a href="http://staticfile.org/" target="_blank" rel="external">开放静态文件 CDN </a></li>
<li><a href="http://www.asp.net/ajax/cdn" target="_blank" rel="external">微软CDN服务</a></li>
<li><a href="https://bbs.aliyun.com/read/139395.html" target="_blank" rel="external">阿里云</a></li>
<li><a href="http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs" target="_blank" rel="external">百度开放云平台</a></li>
<li><a href="http://code.jquery.com/" target="_blank" rel="external">jQuery CDN</a></li>
<li><a href="http://www.jq22.com/cdn/" target="_blank" rel="external">jQuery cdn加速</a></li>
<li><a href="http://lib.sinaapp.com/" target="_blank" rel="external">新浪CDN</a></li>
</ul>
<h4 id="附录五-jQuery的一些资源"><a href="#附录五-jQuery的一些资源" class="headerlink" title="附录五 jQuery的一些资源"></a>附录五 jQuery的一些资源</h4><hr>
<ul>
<li>速查手册<ul>
<li><a href="http://www.css88.com/jqapi-1.9/" target="_blank" rel="external">jQuery API 中文文档–css88</a></li>
<li><a href="http://overapi.com/jquery" target="_blank" rel="external">jQuery-overapi</a></li>
<li><a href="http://www.sxt.cn/searchsxt/sxtapipro/index.html" target="_blank" rel="external">在线桌面版API</a></li>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/%E5%AE%9E%E7%94%A8%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8CAPI.md" target="_blank" rel="external">更多详情—一份实用的API参考手册集合</a></li>
</ul>
</li>
<li><code>jQuery</code>插件<ul>
<li>基础常用<ul>
<li><a href="http://caibaojian.com/scrollfix" target="_blank" rel="external">滚动固定在某个位置</a></li>
<li><a href="http://caibaojian.com/power-slider" target="_blank" rel="external">jQuery图片滚动插件全能版</a></li>
<li><a href="http://code.ciaoca.com/jquery/wookmark/?utm_source=caibaojian.com" target="_blank" rel="external">jQuery Wookmark Load 瀑布流布局</a></li>
<li><a href="http://code.ciaoca.com/jquery/jcrop/?utm_source=caibaojian.com" target="_blank" rel="external">jQuery Jcrop 图像裁剪</a></li>
<li><a href="http://code.ciaoca.com/jquery/kxbdmarquee/?utm_source=caibaojian.com" target="_blank" rel="external">jQuery kxbdMarquee 无缝滚动</a></li>
<li><a href="http://code.ciaoca.com/jquery/lightbox/?utm_source=caibaojian.com" target="_blank" rel="external">jQuery lightBox 灯箱效果</a></li>
<li><a href="http://www.appelsiini.net/projects/lazyload?utm_source=caibaojian.com" target="_blank" rel="external">Lazy Load Plugin for jQuery</a></li>
</ul>
</li>
<li>更多插件-动效库整理<ul>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/%E6%8F%92%E4%BB%B6%E5%BA%93.md" target="_blank" rel="external">插件动效库</a></li>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6.md" target="_blank" rel="external">常用组件</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h4><hr>
<ul>
<li><a href="http://www.cnblogs.com/aaronjs/p/3279314.html" target="_blank" rel="external">jQuery源码分析系列</a></li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><hr>
<ul>
<li>锋利的<code>jQuery</code></li>
</ul>
<hr>
<ul>
<li><a href="https://github.com/poetries/poetries.github.io/blob/dev/source/_posts/review-jQuery.md" target="_blank" rel="external">本文md源文件</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文链接 &lt;a href=&quot;http://blog.poetries.top/2016/10/20/review-jQuery&quot;&gt;http://blog.poetries.top/2016/10/20/review-jQuery&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，来了解一下&lt;code&gt;jQuery&lt;/code&gt;学习的整体思路&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xq6al.com1.z0.glb.clouddn.com/jquery1.png&quot; alt=&quot;jQuery系统学习篇&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://www.poetries.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>HTML5+CSS3整体回顾</title>
    <link href="http://www.poetries.top/2016/10/19/HTML5+CSS3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE%20/"/>
    <id>http://www.poetries.top/2016/10/19/HTML5+CSS3基础回顾 /</id>
    <published>2016-10-19T01:35:08.000Z</published>
    <updated>2016-11-26T10:58:54.810Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>转载请声明 <a href="http://blog.poetries.top/2016/10/19/HTML5+CSS3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE%20/" target="_blank" rel="external">原文链接</a></p>
</blockquote>
<p>这篇文章主要总结H5的一些新增的功能以及一些基础归纳，这里只是一个提纲，并不是很详细，后面会一直完善补充新的内容，本文是一些笔记记录，放在这里供自己参考也供他人学习！</p>
<h4 id="第一课-HTML5结构"><a href="#第一课-HTML5结构" class="headerlink" title="第一课 HTML5结构"></a>第一课 HTML5结构</h4><hr>
<ul>
<li><code>HTML5</code> 是新一代的 <code>HTML</code></li>
<li><code>DTD</code>声明改变    <code>&lt;!DOCTYPE html&gt;</code><ul>
<li>新的结构标签            </li>
<li>注意的地方            <ul>
<li><code>ie8</code> 不兼容</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-ce00790dcabf9c47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一些总结--from-dunitian"><br><a id="more"></a></p>
<h5 id="常用的一些新的结构标签"><a href="#常用的一些新的结构标签" class="headerlink" title="常用的一些新的结构标签"></a>常用的一些新的结构标签</h5><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-4585c0d9a5309443.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结构标签"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-a13888da66c8fc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="多媒体交互标签"></p>
<ul>
<li>补充说明<ul>
<li><code>hground</code>如果有多级标题，这个元素可以将<code>H</code>元素进行分组</li>
<li><code>mark</code>这个元素可以显示特殊情况下的重要文字</li>
<li><code>small</code> 这个元素表示边栏评论，如附属细则</li>
<li><code>cite</code>这个元素可用于显示作品标题（图书、电影、诗歌等）</li>
<li><code>adress</code>这个元素显示<code>article</code>或整个文档的合同信息，且位于<code>footer</code>这个元素之中</li>
<li><code>time</code>显示人和机器可读的日期和时间，而且机器可读的时间戳是属性<code>datetime</code>的值第二个可选的是<code>pubtime</code>用于表示出版日期值</li>
</ul>
</li>
</ul>
<h5 id="删除的HTML标签"><a href="#删除的HTML标签" class="headerlink" title="删除的HTML标签"></a>删除的<code>HTML</code>标签</h5><hr>
<ul>
<li>纯表现的元素：<ul>
<li><code>basefont</code></li>
<li><code>big</code></li>
<li><code>center</code></li>
<li><code>font</code></li>
<li><code>s</code></li>
<li><code>strike</code></li>
<li><code>tt</code></li>
<li><code>u</code></li>
</ul>
</li>
<li>对可用性产生负面影响的元素：<ul>
<li><code>frame</code></li>
<li><code>frameset</code></li>
<li><code>noframes</code><ul>
<li>产生混淆的元素：</li>
</ul>
</li>
<li><code>acronym</code></li>
<li><code>applet</code></li>
<li><code>isindex</code></li>
<li><code>dir</code></li>
</ul>
</li>
<li><p><strong>重新定义的<code>HTML</code>标签</strong></p>
<ul>
<li><code>&lt;b&gt;</code>  代表内联文本，通常是粗体，没有传递表示重要的意思</li>
<li><code>&lt;i&gt;</code> 代表内联文本，通常是斜体，没有传递表示重要的意思</li>
<li><code>&lt;dd&gt;</code> 可以同<code>details</code>与<code>figure</code>一同使用，定义包含文本，<code>ialog</code>也可用</li>
<li><code>&lt;dt&gt;</code> 可以同<code>details</code>与<code>figure</code>一同使用，汇总细节，<code>dialog</code>也可用</li>
<li><code>&lt;hr&gt;</code>表示主题结束，而不是水平线，虽然显示相同</li>
<li><code>&lt;menu&gt;</code> 重新定义用户界面的菜单，配合<code>commond</code>或者<code>menuitem</code>使用</li>
<li><code>&lt;small&gt;</code> 表示小字体，例如打印注释或者法律条款</li>
<li><code>&lt;strong&gt;</code> 表示重要性而不是强调符号</li>
</ul>
</li>
<li><p>崭新新的页面布局</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-b8990303b1d10379.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="传统的布局"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-a7b3e5dca9341862.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HTML5标签布局"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-6f30a458860e606f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实例-from-dunitian"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-dd4078736467f182.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="草图--from-dunitian"></p>
<h4 id="第二课-HTML5智能表单"><a href="#第二课-HTML5智能表单" class="headerlink" title="第二课 HTML5智能表单"></a>第二课 HTML5智能表单</h4><hr>
<h5 id="HTML4-01-form表单复习"><a href="#HTML4-01-form表单复习" class="headerlink" title="HTML4.01 form表单复习"></a>HTML4.01 form表单复习</h5><hr>
<ul>
<li><code>input</code>表单<code>type</code>属性值<ul>
<li><code>type=&quot;text&quot;</code>          单行文本输入框</li>
<li><code>type=&quot;password&quot;</code>  密码（<code>maxlength=&quot;&quot;</code>）</li>
<li><code>type=&quot;radio&quot;</code>       单项选择（<code>checked=&quot;checked&quot;</code>）</li>
<li><code>type=&quot;checkbox&quot;</code>  多项选择</li>
<li><code>type=&quot;button&quot;</code>     按钮</li>
<li><code>type=&quot;submit&quot;</code>         提交</li>
<li><code>type=&quot;file&quot;</code>           上传文件</li>
<li><code>type=&quot;reset&quot;</code>    重置</li>
</ul>
</li>
</ul>
<h5 id="HTML5智能表单"><a href="#HTML5智能表单" class="headerlink" title="HTML5智能表单"></a>HTML5智能表单</h5><hr>
<ul>
<li><code>input</code>表单<code>type</code>属性值：<ul>
<li><code>type = &quot;email&quot;</code> 限制用户输入必须为<code>Email</code>类型</li>
<li><code>type=&quot;url&quot;</code>          限制用户输入必须为<code>URL</code>类型</li>
<li><code>type=&quot;date&quot;</code>     限制用户输入必须为日期类型</li>
<li><code>type=&quot;datetime&quot;</code> 显示完整日期 含时区</li>
<li><code>type=&quot;datetime-local&quot;</code> 显示完整日期 不含时区</li>
<li><code>type=&quot;time&quot;</code>    限制用户输入必须为时间类型</li>
<li><code>type=&quot;month&quot;</code>  限制用户输入必须为月类型</li>
<li><code>type=&quot;week&quot;</code>    限制用户输入必须为周类型</li>
<li><code>type=&quot;number&quot;</code> 限制用户输入必须为数字类型</li>
<li><code>type=&quot;range&quot;</code>    生成一个滑动条</li>
<li><code>type=&quot;search&quot;</code>  具有搜索意义的表单<code>results=&quot;n&quot;</code>属性</li>
<li><code>type=&quot;color&quot;</code>    生成一个颜色选择表单</li>
<li><code>type=&quot;tel&quot;</code>    显示电话号码</li>
</ul>
</li>
</ul>
<h5 id="Input-类型-Date-Pickers（日期选择器）"><a href="#Input-类型-Date-Pickers（日期选择器）" class="headerlink" title="Input 类型 - Date Pickers（日期选择器）"></a>Input 类型 - Date Pickers（日期选择器）</h5><hr>
<ul>
<li>**<code>HTML5</code> 拥有多个可供选取日期和时间的新输入类型：</li>
<li><code>date</code> 选取日、月、年</li>
<li><code>month</code> 选取月、年</li>
<li><code>week</code>  选取周和年</li>
<li><p><code>time</code>  选取时间（小时和分钟）</p>
</li>
<li><p>以下两个没有作用</p>
<ul>
<li><code>datetime</code>  选取时间、日、月、年（UTC 时间）</li>
<li><code>datetime-local</code>  选取时间、日、月、年（本地时间）</li>
</ul>
</li>
</ul>
<h5 id="HTML5新增表单属性"><a href="#HTML5新增表单属性" class="headerlink" title="HTML5新增表单属性"></a>HTML5新增表单属性</h5><hr>
<ul>
<li><code>required:</code> <code>required</code>内容不能为空</li>
<li><code>placeholder:</code> 表单提示信息</li>
<li><code>autofocus:</code>自动聚焦</li>
<li><code>pattern:</code> 正则表达式  输入的内容必须匹配到指定正则范围</li>
<li><code>autocomplete:</code>是否保存用户输入值<ul>
<li>默认为<code>on</code>，关闭提示选择<code>off</code></li>
</ul>
</li>
<li><code>formaction:</code> 在<code>submit</code>里定义提交地址</li>
<li><code>datalist:</code> 输入框选择列表配合<code>list</code>使用 <code>list</code>值为<code>datalist</code>的<code>id</code>值</li>
<li><code>output:</code> 计算或脚本输出</li>
</ul>
<h5 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h5><hr>
<ul>
<li><p><code>validity</code>对象，通过下面的<code>valid</code>可以查看验证是否通过，如果八种验证都返回<code>true</code>,一种验证失败返回<code>false</code></p>
<ul>
<li><code>oText.addEventListener(&quot;invalid&quot;,fn1,false)</code></li>
<li><code>ev.preventDefault()</code>: 阻止默认事件</li>
<li><code>valueMissing</code>: 当输入值为空的时候，返回<code>true</code></li>
<li><code>typeMismatch</code>: 控件值与预期不吻合，返回<code>true</code></li>
<li><code>patternMismatch</code>: 输入值不满足<code>pattern</code>正则，返回<code>true</code></li>
<li><code>cusomError</code><ul>
<li><code>setCustomValidity()</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第三课-css3选择器"><a href="#第三课-css3选择器" class="headerlink" title="第三课 css3选择器"></a>第三课 css3选择器</h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-556426384ddcc4ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="css3属性快速一览"></p>
<ul>
<li><p><code>CSS3</code>发展史简介</p>
<ul>
<li><code>HTML</code>的诞生 20世纪90年代初</li>
<li><code>1996</code>年底，    <code>CSS</code>第一版诞生</li>
<li><code>1998</code>年<code>5</code>月     <code>CSS2</code>正式发布</li>
<li><code>2004</code>年     <code>CSS2.1</code>发布</li>
<li><code>CSS3</code>的发布    <code>2002</code> <code>2003</code>  <code>2004</code> <code>2005</code>  <code>2007</code> <code>2009</code> <code>2010</code></li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>模块化开发</strong></p>
<ul>
<li><code>CSS1</code> 中定义了网页的基本属性：<ul>
<li>字体、颜色、基本选择器等</li>
</ul>
</li>
<li><code>CSS2</code>中在<code>CSS1</code>的基础上添加了高级功能<ul>
<li>浮动和定位、高级选择器等(子选择器、相邻选择器、通用选择器)</li>
</ul>
</li>
<li><code>CSS3</code>遵循的是模块化开发。发布时间并不是一个时间点，而是一个时间段</li>
</ul>
</li>
<li><p><strong><code>CSS</code>选择器复习</strong></p>
<ul>
<li>通用选择器：<code>*</code> 选择到所有的元素</li>
<li>选择子元素：<code>&gt;</code> 选择到元素的直接后代</li>
<li>相邻兄弟选择器：<code>+</code>选择到紧随目标元素后的第一个元素</li>
<li>普通兄弟选择器：<code>~</code>选择到紧随其后的所有兄弟元素</li>
<li>伪元素选择器：<ul>
<li><code>::first-line</code> 匹配文本块的首行</li>
<li><code>::first-letter</code> 选择文本块的首字母</li>
</ul>
</li>
<li>伪类选择器：<ul>
<li><code>:before</code>,<code>:after</code>在元素内容前面、后面添加内容(相当于行内元素)</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><strong>CSS3结构选择器</strong></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-33def0f200fe738a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="CSS3结构选择器"></p>
<ul>
<li><strong><code>Css3</code> 属性选择器</strong></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f9339ed4dcc201aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Css3属性选择器"></p>
<ul>
<li><p><strong><code>CSS3</code>伪类选择器</strong></p>
<ul>
<li><p><strong>UI伪类选择器：</strong></p>
<ul>
<li><code>:enabled</code>选择启用状态元素</li>
<li><code>:disabled</code> 选择禁用状态元素</li>
<li><code>:checked</code>选择被选中的<code>input</code>元素（单选按钮或复选框）</li>
<li><code>:default</code> 选择默认元素</li>
<li><code>:valid</code>、<code>invalid</code> 根据输入验证选择有效或无效的<code>input</code>元素</li>
<li><code>:in-range</code>、<code>out-of-range</code>选择指定范围之内或者之外受限的元素</li>
<li><code>:required</code>、<code>optional</code>根据是否允许:<code>required</code>属性选择<code>input</code>元素</li>
</ul>
</li>
<li><p><strong>动态伪类选择器：</strong></p>
<ul>
<li><code>:link</code>选择链接元素</li>
<li><code>:visited</code> 选择用户以访问的元素</li>
<li><code>:hover</code> 鼠标悬停其上的元素</li>
<li><code>:active</code>鼠标点击时触发的事件</li>
<li><code>:focus</code> 当前获取焦点的元素</li>
</ul>
</li>
<li><p><strong>其他伪类选择器</strong>：</p>
<ul>
<li><code>:not(&lt;选择器&gt;)</code>对括号内选择器的选择取反</li>
<li><code>:lang(&lt;目标语言&gt;)</code> 基于<code>lang</code>全局属性的元素</li>
<li><code>:target</code> <code>url</code>片段标识符指向的元素<ul>
<li><code>:empty</code>选择内容为空的元素</li>
</ul>
</li>
<li><code>:selection</code>鼠标光标选择元素内容</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第四课-CSS3新增文本属性"><a href="#第四课-CSS3新增文本属性" class="headerlink" title="第四课 CSS3新增文本属性"></a>第四课 CSS3新增文本属性</h4><hr>
<ul>
<li><p><strong>CSS文本属性复习</strong></p>
<ul>
<li><p><code>white-space</code>：对象内空格的处理方式</p>
<ul>
<li><p><code>nowrap</code> 控制文本不换行</p>
</li>
<li><p><code>pre</code> 空白会被浏览器保留</p>
</li>
<li><p><code>pre-line</code> 合并空白  保留换行符</p>
</li>
<li><p><code>pre-wrap</code> 保留空白  正常换行</p>
</li>
</ul>
</li>
<li><p><code>direction</code>：文本流的方向</p>
<ul>
<li><code>ltr</code> 文本从左向右</li>
<li><code>rtl</code>  文本从右往左</li>
</ul>
</li>
<li><p><code>unicode-bidi</code>：用于同一个页面里存在从不同方向读进的文本显示。与<code>direction</code>属性一起使用</p>
</li>
</ul>
</li>
<li><p><strong>CSS3新增文本属性</strong></p>
<ul>
<li><code>color:rgba()</code>;</li>
<li><code>text-overflow</code>:是否使用一个省略标记（…）标示对象内文本的溢出</li>
<li><code>text-align</code>:文本的对齐方式</li>
<li><code>text-transform</code>:文字的大小写</li>
<li><code>text-decoration</code>:文本的装饰线，复合属性</li>
<li><code>text-shadow</code>:文本阴影</li>
<li><code>text-fill-color</code>:文字填充颜色</li>
<li><code>text-stroke</code>:复合属性。设置文字的描边</li>
<li><code>tab-size</code>:制表符的长度</li>
<li><code>word-wrap</code>:当前行超过指定容器的边界时是否断开转行</li>
<li><code>word-break</code>:规定自动换行的处理方法</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong><code>text-overflow:</code>是否使用一个省略标记（<code>...</code>）标示对象内文本的溢出</strong></p>
<ul>
<li><code>clip</code>： 默认值 无省略号</li>
<li><code>ellipsis</code>：当对象内文本溢出时显示省略标记（<code>...</code>）。</li>
<li><strong>注意</strong>：该属性需配合<code>over-flow:hidden</code>属性(超出处理)还有 <code>white-space:nowrap</code>(禁止换行)配合使用，否则无法看到效果</li>
</ul>
</li>
<li><p><strong><code>text-align</code>:文本的对齐方式</strong></p>
<ul>
<li><code>css1</code></li>
<li><code>left</code>:默认值 左对齐</li>
<li><code>right</code>:右对齐</li>
<li><code>center</code>:居中</li>
<li><code>justify</code>： 内容两端对齐。</li>
<li><code>css3</code></li>
<li><code>start</code>:开始边界对齐</li>
<li><code>end</code>:结束边界对齐</li>
</ul>
</li>
<li><p><strong><code>text-transform</code></strong>:文字的大小写</p>
<ul>
<li><strong><code>css1</code></strong><ul>
<li><code>none</code>：    默认值 无转换 </li>
<li><code>capitalize</code>：     将每个单词的第一个字母转换成大写 </li>
<li><code>uppercase</code>：    转换成大写 </li>
<li><code>lowercase</code>：    转换成小写</li>
</ul>
</li>
<li><strong><code>css3</code></strong><ul>
<li><code>full-width</code>：    将左右字符设为全角形式。不支持</li>
<li><code>full-size-kana</code>：将所有小假名字符转换为普通假名。不支持<ul>
<li>例如：土耳其语</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>text-decoration</code>:文本的装饰线，复合属性(只火狐支持)</strong></p>
<ul>
<li><code>text-decoration-line</code>：<ul>
<li>指定文本装饰的种类。相当于<code>CSS1</code>时的<code>text-decoration</code>属性</li>
</ul>
</li>
<li><code>text-decoration-style</code> ：<ul>
<li>`指定文本装饰的样式。</li>
</ul>
</li>
<li><code>text-decoration-color</code>：<ul>
<li>`指定文本装饰的颜色。</li>
</ul>
</li>
<li><code>blink</code>： 指定文字的装饰是闪烁。  <code>opera</code>和<code>firefox</code></li>
<li><code>text-decoration</code> : <code>#F00 double overline</code>   <code>CSS3</code>实例</li>
</ul>
</li>
<li><p><strong><code>text-shadow</code>:文本阴影</strong></p>
<ul>
<li>取值：<code>x</code> <code>y</code>   <code>blur</code> <code>color</code>,……<ul>
<li><code>x</code>      横向偏移</li>
<li><code>y</code>       纵向偏移</li>
<li><code>blur</code>     模糊距离(灰度)</li>
<li><code>color</code>    阴影颜色</li>
</ul>
</li>
</ul>
</li>
<li><p><code>text-fill-color</code>:文字填充颜色</p>
</li>
<li><code>text-stroke</code>:复合属性。设置文字的描边<ul>
<li><code>text-stroke-width</code>:文字的描边厚度 </li>
<li><code>text-stroke-color</code>:文字的描边颜色 </li>
</ul>
</li>
<li><code>tab-size</code>:制表符的长度   <ul>
<li>默认值为<code>8</code>(一个<code>tab</code>键的空格字节长度)，在    <code>pre</code>标签之内才会有显示</li>
</ul>
</li>
<li><code>word-wrap</code>:当前行超过指定容器的边界时是否断开转行<ul>
<li><code>normal</code>： 默认值</li>
<li>允许内容顶开或溢出指定的容器边界。 </li>
</ul>
</li>
<li><code>break-word</code>：<ul>
<li>内容将在边界内换行。如果需要，单词内部允许断行</li>
</ul>
</li>
</ul>
<h4 id="第五课-CSS3盒模型"><a href="#第五课-CSS3盒模型" class="headerlink" title="第五课 CSS3盒模型"></a>第五课 CSS3盒模型</h4><hr>
<ul>
<li>CSS盒模型复习</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-320bad065d62c499.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="标准盒子模型"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-693242e2f03506f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="IE盒子模型"></p>
<ul>
<li><p><strong>CSS3弹性盒模型</strong></p>
<ul>
<li><code>display:box</code>或者<code>display:inline-box</code>;  设置给父元素</li>
<li><code>box-orient</code>定义盒模型的布局方向   设置给父元素<ul>
<li><code>horizontal</code> 水平显示</li>
<li><code>vertical</code> 垂直方向</li>
</ul>
</li>
<li><code>box-direction</code> 元素排列顺序     设置给父元素<ul>
<li><code>normal</code>  正序</li>
<li><code>reverse</code>  反序</li>
</ul>
</li>
<li><code>box-ordinal-group</code>  设置元素的具体位置   设置子元素</li>
</ul>
</li>
</ul>
<ul>
<li><code>flex</code>布局语法篇</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-885b1d526653b87d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="flex布局语法篇小结"></p>
<ul>
<li>拓展阅读<ul>
<li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">flex布局语法篇</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="external">flex布局实例篇</a></li>
</ul>
</li>
</ul>
<h4 id="第六课-css3新增背景属性"><a href="#第六课-css3新增背景属性" class="headerlink" title="第六课 css3新增背景属性"></a>第六课 css3新增背景属性</h4><hr>
<ul>
<li><p><strong>CSS背景属性复习</strong></p>
<ul>
<li><code>background</code>:<ul>
<li><code>background-color</code>:背景颜色</li>
<li><code>background-image</code>:背景图片</li>
<li><code>background-repeat</code>:背景重复</li>
<li><code>background-position</code>:背景定位</li>
<li><code>background-attachment</code>:背景固定(<code>scroll/fixed)</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>CSS3新增背景属性</strong></p>
</li>
<li><p><code>background-size</code>  背景尺寸</p>
<ul>
<li><code>background-size:x y</code></li>
<li><code>background-size:100% 100%</code></li>
<li><code>background-size:cover</code> 比例放大</li>
<li><code>background-size:contain</code> 包含（图片不溢出）</li>
</ul>
</li>
<li><p><strong>多背景</strong></p>
<ul>
<li><code>background:url() 0 0,url() 0 100%</code>;</li>
<li><code>background-origin</code> 背景区域定位</li>
<li><code>border-box</code>： 从<code>borde</code>r区域开始显示背景。 </li>
<li><code>padding-box</code>： 从<code>padding</code>区域开始显示背景。 </li>
<li><code>content-box</code>： 从<code>content</code>内容区域开始显示背</li>
<li><code>background-clip</code>   背景绘制区域</li>
<li><code>border-box</code>： 从<code>border</code>区域向外裁剪背景。 </li>
<li><code>padding-box</code>： 从<code>padding</code>区域向外裁剪背景。 </li>
<li><code>content-box</code>： 从<code>content</code>区域向外裁剪背景。 </li>
<li><code>text</code>:背景填充文本</li>
<li><code>no-clip</code>： 从<code>border</code>区域向外裁剪背景</li>
</ul>
</li>
<li><p><strong>颜色渐变</strong></p>
<ul>
<li><p><strong>线性渐变</strong>：<code>linear-gradient</code>(起点/角度，颜色 位置，…,)</p>
<ul>
<li>起点：<code>left/top/right/bottom/left top......</code>默认<code>top</code></li>
<li>角度：逆时针方向 <code>0-360</code>度</li>
<li>颜色 位置：<code>red 50%</code>, <code>blue 100%</code>(红色从50%渐变到100%为蓝色)</li>
</ul>
<ul>
<li><code>repeating-linear-gradient</code>  线性渐变重复平铺<ul>
<li><code>IE</code>低版本渐变(滤镜)：</li>
<li><code>filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=&#39;#ffffff&#39;,endColorstr=&#39;#ff0000&#39;,GradientType=&#39;1&#39;);</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>径向渐变</strong>：<code>radial-gradient</code>(起点(圆心位置), 形状/半径/大小，颜色1，颜色2)</p>
<ul>
<li>起点：<code>left/top/right/bottom</code>或具体值/百分比</li>
<li>形状：<code>ellipse</code>(椭圆)、<code>circle</code>(正圆)</li>
<li>大小：具体数值或百分比，也可以是关键字（<code>closest-side</code>(最近端), <code>closest-corner</code>最近角), <code>farthest-side</code>(最远端), f<code>arthest-corner</code>(最远角), <code>contain</code>(包含) ,<code>cover</code>(覆盖)）;</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第七课-css3新增颜色属性"><a href="#第七课-css3新增颜色属性" class="headerlink" title="第七课 css3新增颜色属性"></a>第七课 css3新增颜色属性</h4><hr>
<ul>
<li><p><strong>CSS颜色属性复习</strong></p>
<ul>
<li><code>color name</code>    颜色英文名称命名</li>
<li><code>HEX</code>方式         十六进制方式</li>
<li><code>rgb</code>方式           三原色配色方式</li>
</ul>
</li>
<li><p><strong>CSS3新增颜色属性</strong></p>
<ul>
<li><strong><code>rgba()</code></strong></li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>名称</th>
<th>颜色</th>
<th>颜色</th>
<th>取值</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>red</td>
<td>红色</td>
<td>0-255</td>
</tr>
<tr>
<td>g</td>
<td>green</td>
<td>绿色</td>
<td>0-255</td>
</tr>
<tr>
<td>b</td>
<td>blue</td>
<td>蓝色</td>
<td>0-255</td>
</tr>
<tr>
<td>a</td>
<td>alpha</td>
<td>透明</td>
<td>0-1</td>
</tr>
</tbody>
</table>
<ul>
<li><p><strong><code>HSL</code>模式  <code>HSLA</code>模式</strong></p>
<ul>
<li><code>H</code>： <code>Hue</code>(色调)。<ul>
<li>0(或360)表示红色，120表示绿色，240表示蓝色，也可取其他数值来指定颜色。取值为：<code>0 - 360</code> </li>
</ul>
</li>
<li><code>S</code>：<code>Saturation</code>(饱和度)。取值为：0.0% - 100.0% </li>
<li><code>L</code>： <code>Lightness</code>(亮度)。取值为：0.0% - 100.0%</li>
<li><p><code>A</code>:    <code>alpha</code>   透明度   0~1之间</p>
</li>
<li><p>语法:<code>HSLA(H,S,L,A)</code></p>
</li>
</ul>
</li>
<li><p>HSL色轮</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-e966854f01e64406.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="HSL色轮"></p>
<ul>
<li><p>透明颜色：<code>transparent</code></p>
<ul>
<li>实例：<code>border</code>实现三角箭头、风车等</li>
</ul>
</li>
<li><p>透明度：</p>
<ul>
<li><code>opacity</code></li>
<li>取值：<code>0-1</code>之间</li>
<li>注：低版本的<code>IE</code>浏览器不兼容,需用IE浏览器的滤镜实现相同效果，<code>filter:alpha(opacity=50)</code></li>
<li>对于低版本的火狐浏览器需添加内核前缀，<code>-moz-opacity</code></li>
</ul>
</li>
</ul>
<h4 id="第八课-CSS3边框系列"><a href="#第八课-CSS3边框系列" class="headerlink" title="第八课 CSS3边框系列"></a>第八课 CSS3边框系列</h4><hr>
<h5 id="圆角-阴影"><a href="#圆角-阴影" class="headerlink" title="圆角-阴影"></a>圆角-阴影</h5><hr>
<ul>
<li><p>边框圆角</p>
<ul>
<li>在<code>CSS2</code>中添加圆角矩形需要技巧。我们必须为每个圆角使用不同的图片</li>
<li>在 <code>CSS3</code>中，创建圆角是非常容易的</li>
<li>在<code>CSS3</code>中，<code>border-radius</code>属性用于创建圆角</li>
</ul>
</li>
<li><p><strong><code>border-radius</code>边框圆角写法</strong></p>
<ul>
<li><code>border-radius: 2em 1em 4em / 0.5em 3em;</code></li>
<li>等价于<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">border-top-left-radius</span>: 2<span class="selector-tag">em</span> 0<span class="selector-class">.5em</span>;</div><div class="line"><span class="selector-tag">border-top-right-radius</span>: 1<span class="selector-tag">em</span> 3<span class="selector-tag">em</span>;</div><div class="line"><span class="selector-tag">border-bottom-right-radius</span>: 4<span class="selector-tag">em</span> 0<span class="selector-class">.5em</span>;</div><div class="line"><span class="selector-tag">border-bottom-left-radius</span>: 1<span class="selector-tag">em</span> 3<span class="selector-tag">em</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><strong><code>box-shadow</code>方框添加阴影</strong></p>
<ul>
<li><p>语法：<code>box-shadow:x-shadow y-shadow blur spread color inset;</code></p>
</li>
<li><p><strong>box-shadow的API</strong></p>
<ul>
<li><code>x-shadow</code> 必需。水平阴影的位置。允许负值。    </li>
<li><code>y-shadow</code>     必需。垂直阴影的位置。允许负值。    </li>
<li><code>blur</code>     可选。模糊距离。    </li>
<li><code>spread</code>     可选。阴影的尺寸。    </li>
<li><code>color</code>     可选。阴影的颜色。请参阅 <code>CSS</code>颜色值    </li>
<li><code>inset</code>     可选。将外部阴影 (<code>outset</code>) 改为内部阴影</li>
</ul>
</li>
<li>实例：<code>box-shadow:10px 10px 5px 5px #888888;</code></li>
</ul>
</li>
</ul>
<h5 id="边框系列-图片"><a href="#边框系列-图片" class="headerlink" title="边框系列-图片"></a>边框系列-图片</h5><hr>
<ul>
<li><strong><code>border-image</code>语法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th>版本</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>border-image</td>
<td>CSS3</td>
<td>设置或检索对象的边框使用图像来填充</td>
</tr>
<tr>
<td>border-image-source</td>
<td>CSS3</td>
<td>设置或检索对象的边框是否用图像定义样式或图像来源路径</td>
</tr>
<tr>
<td>border-image-slice</td>
<td>CSS3</td>
<td>设置或检索对象的边框背景图的分割方式</td>
</tr>
<tr>
<td>border-image-width</td>
<td>CSS3</td>
<td>设置或检索对象的边框厚度</td>
</tr>
<tr>
<td>border-image-outset</td>
<td>CSS3</td>
<td>设置或检索对象的边框背景图的扩展</td>
</tr>
<tr>
<td>border-image-repeat</td>
<td>CSS3</td>
<td>设置或检索对象的边框图像的平铺方式</td>
</tr>
</tbody>
</table>
<ul>
<li><strong><code>border-image-slice</code></strong><ul>
<li>设置或检索对象的边框背景图的分割方式</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-b6daa34d69905a1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<ul>
<li><strong><code>border-image-repeat</code></strong><ul>
<li>用于指定边框背景图的重复方式</li>
<li>取值：<ul>
<li><code>stretch</code>： 指定用拉伸方式来填充边框背景图。 *默认的</li>
<li><code>repeat</code>： 指定用平铺方式来填充边框背景图。当图片碰到边界时，如果超过则被截断。 </li>
<li><code>round</code>： 指定用平铺方式来填充边框背景图。图片会根据边框的尺寸动态调整图片的大小    直至正好可以铺满整个边框。写本文档时仅Firefox能看到该效果 </li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第九课-CSS3运动体系"><a href="#第九课-CSS3运动体系" class="headerlink" title="第九课 CSS3运动体系"></a>第九课 CSS3运动体系</h4><hr>
<h5 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h5><hr>
<ul>
<li><p>过渡：给改变添加过程</p>
<ul>
<li>什么是过渡</li>
<li>过渡效果由哪几部分组成</li>
<li>过渡可以干些什么</li>
</ul>
</li>
<li><p><code>transition</code> 过渡属性</p>
</li>
<li><p><code>transition: property duration timing-function delay</code>;</p>
<ul>
<li><code>transition-property:</code>过渡属性的名称<ul>
<li><code>none</code>  没有过渡属性</li>
<li><code>all</code>      所有属性都过渡(默认值)</li>
<li><code>property</code>   具体属性名称(<code>property1</code>,<code>property2</code>…)</li>
</ul>
</li>
<li><code>transition-duration:</code>过渡属性花费的时间<ul>
<li><code>time</code>  秒或毫秒</li>
</ul>
</li>
<li><code>transition-timing-function:</code>过渡效果速度曲线<ul>
<li><code>time</code>  秒或毫秒</li>
</ul>
</li>
<li><code>transition-delay:</code>过渡效果延迟时间</li>
</ul>
</li>
<li><p><strong><code>transition-timing-function</code>:过渡效果速度曲线</strong></p>
<ul>
<li><code>linear</code>:规定以相同速度开始至结束的过渡效果（等于 <code>cubic-bezier(0,0,1,1)</code>）。</li>
<li><code>ease</code>:规定慢速开始，然后变快，然后慢速结束的过渡效果（<code>cubic-bezier(0.25,0.1,0.25,1)</code>）。</li>
<li><code>ease-in</code>:规定以慢速开始的过渡效果（等于 <code>cubic-bezier(0.42,0,1,1)</code>）。</li>
<li><code>ease-out</code>    :规定以慢速结束的过渡效果（等于 <code>cubic-bezier(0,0,0.58,1)</code>）。</li>
<li><code>ease-in-out</code> :规定以慢速开始和结束的过渡效果（等于 <code>cubic-bezier(0.42,0,0.58,1)</code>）。</li>
<li><code>cubic-bezier(n,n,n,n)</code>:在 <code>cubic-bezier</code> 函数中定义自己的值。可能的值是 <code>0</code>至 <code>1</code> 之间的数值。</li>
</ul>
</li>
<li><p>过渡完成事件<br><img src="http://upload-images.jianshu.io/upload_images/1480597-f8a2291a249961ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="过渡完成事件"></p>
</li>
<li><p><code>Webkit</code>内核： </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">obj.addEventListener(<span class="string">'webkitTransitionEnd'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>标准: </p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">obj.addEventListener(<span class="string">'transitionend'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)</div></pre></td></tr></table></figure>
<h5 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h5><hr>
<ul>
<li><p>什么是<code>CSS3</code> 动画？</p>
<ul>
<li>通过 <code>CSS3</code>，我们能够创建动画，这可以在许多网页中取代动画图片、<code>Flash</code> 动画以及 <code>JavaScript</code></li>
</ul>
</li>
<li><p><strong>动画接口</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>@keyframes</td>
<td>规定动画。</td>
</tr>
<tr>
<td>animation</td>
<td>所有动画属性的简写属性，除了 animation-play-state 属性。</td>
</tr>
<tr>
<td>animation-name</td>
<td>规定 @keyframes 动画的名称。</td>
</tr>
<tr>
<td>animation-duration</td>
<td>规定动画完成一个周期所花费的秒或毫秒。</td>
</tr>
<tr>
<td>animation-timing-function</td>
<td>规定动画的速度曲线。</td>
</tr>
<tr>
<td>animation-delay</td>
<td>规定动画何时开始。</td>
</tr>
<tr>
<td>animation-iteration-count</td>
<td>规定动画被播放的次数。</td>
</tr>
<tr>
<td>animation-direction</td>
<td>规定动画是否在下一周期逆向地播放。</td>
</tr>
<tr>
<td>animation-play-state</td>
<td>规定动画是否正在运行或暂停。</td>
</tr>
<tr>
<td>animation-fill-mode</td>
<td>规定对象动画时间之外的状态。</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>animation-timing-function速度曲线</strong></li>
</ul>
<table>
<thead>
<tr>
<th>值</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>linear</td>
<td>动画从头到尾的速度是相同的。</td>
</tr>
<tr>
<td>ease</td>
<td>默认。动画以低速开始，然后加快，在结束前变慢。</td>
</tr>
<tr>
<td>ease-in</td>
<td>动画以低速开始。</td>
</tr>
<tr>
<td>ease-out</td>
<td>动画以低速结束。</td>
</tr>
<tr>
<td>ease-in-out</td>
<td>动画以低速开始和结束。</td>
</tr>
<tr>
<td>cubic-bezier(n,n,n,n)</td>
<td>在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</td>
</tr>
</tbody>
</table>
<ul>
<li><p>在谷歌浏览器里面需要加上<code>-webkit-</code><br><code>IE6,7,8,9</code>不支持<code>css3</code>运动</p>
</li>
<li><p>拓展阅读</p>
<ul>
<li><a href="http://note.youdao.com/noteshare?id=c4f5a977a7b3aa256a3c28aa64d6f989" target="_blank" rel="external">CSS3动画简介</a></li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>CSS3盒模型阴影</strong></p>
<ul>
<li><code>box-shadow:inset x y blur spread color</code></li>
<li><code>inset</code>：投影方式</li>
<li><code>inset</code>：内投影</li>
<li><code>outset</code>：外投影 默认(不能设置)</li>
<li><code>x</code>、<code>y</code>：阴影偏移</li>
<li><code>blur</code>：模糊半径（灰度）</li>
<li><code>spread</code>：扩展阴影半径</li>
<li>先扩展原有形状，再开始画阴影</li>
<li><code>color</code></li>
</ul>
</li>
<li><p><strong><code>CSS3</code>盒模型倒影</strong></p>
</li>
<li><p><code>box-reflect</code> 倒影</p>
<ul>
<li>方向 <code>above|below|left|right;</code></li>
<li>距离</li>
<li>渐变（可选）</li>
</ul>
</li>
<li><p><strong>CSS3其他盒模型</strong></p>
<ul>
<li><code>box-sizing</code> 盒模型解析模式</li>
<li><code>content-box</code>  标准盒模型(和<code>css2</code>一样的计算)</li>
<li><code>width/height=border+padding+content</code></li>
<li><code>border-box</code> 怪异盒模型<code>width/height</code>与设置的值一样 ，<code>content</code>减小</li>
</ul>
</li>
<li><p>扩展阅读</p>
<ul>
<li><a href="http://www.jianshu.com/p/e2eb0d8c9de6" target="_blank" rel="external">学会使用css3的box-sizing布局</a></li>
</ul>
</li>
</ul>
<h4 id="第十课-transform-2D转换"><a href="#第十课-transform-2D转换" class="headerlink" title="第十课 transform 2D转换"></a>第十课 transform 2D转换</h4><hr>
<ul>
<li><strong><code>Css3</code>平面转换方法</strong><ul>
<li><code>translate()</code>        移动</li>
<li><code>rotate()</code>        旋转</li>
<li><code>scale()</code>        缩放</li>
<li><code>skew()</code>        翻转</li>
<li><code>matrix()</code>    矩阵</li>
</ul>
</li>
</ul>
<ul>
<li><strong>transform</strong>:<ul>
<li><code>rotate()</code>  旋转函数 (deg)<ul>
<li><code>deg</code>  度数</li>
</ul>
</li>
<li><code>skew(X,Y)</code> 倾斜函数 (deg) <ul>
<li><code>skewX()</code></li>
<li><code>skewY()</code></li>
</ul>
</li>
<li><code>scale(X,Y)</code> 缩放函数 (正数、负数和小数)<ul>
<li><code>scaleX()</code></li>
<li><code>scaleY()</code></li>
</ul>
</li>
<li><code>translate(X,Y)</code> 位移函数(px)<ul>
<li><code>translateX()</code></li>
<li><code>translateY()</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong><code>rotate()</code> 旋转方法</strong></p>
<ul>
<li>用于旋转元素角度</li>
<li>例：<code>rotate(30deg)</code><ul>
<li>把元素顺时针旋转 30 度</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>translate()</code>位置方法</strong></p>
<ul>
<li>用于移动元素位置<ul>
<li>例：<code>translate(50px,100px)</code><ul>
<li>把元素从左侧移动 50 像素，从顶端移动 100 像素。</li>
</ul>
</li>
</ul>
</li>
<li>其实有些类似于我们的相对定位</li>
</ul>
</li>
<li><p><strong><code>scale()</code>尺寸方法</strong></p>
<ul>
<li>方法用于改变元素尺寸<ul>
<li>例：<code>scale(2,4)</code> <ul>
<li>把宽度转换为原始尺寸的 2 倍，把高度转换为原始高度的 4 倍</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>skew()</code> 翻转方法</strong></p>
<ul>
<li>通过 <code>skew()</code>方法，元素翻转给定的角度<ul>
<li>例：<code>transform: skew(30deg,20deg);</code><ul>
<li>把元素围绕 <code>X</code>轴把元素翻转<code>30</code> 度，围绕 <code>Y</code> 轴翻转 <code>20</code>度</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第十一课-transform-3D转换"><a href="#第十一课-transform-3D转换" class="headerlink" title="第十一课 transform 3D转换"></a>第十一课 transform 3D转换</h4><hr>
<ul>
<li><p><strong><code>Css3</code>立体转换</strong></p>
<ul>
<li><code>transform-style（preserve-3d）</code> 建立<code>3D</code>空间</li>
<li><code>Perspective</code> 视角</li>
<li><code>Perspective- origin</code> 视角基点</li>
<li><code>transform-origin</code>：坐标轴基点</li>
</ul>
</li>
<li><p><strong>transform 新增函数</strong></p>
<ul>
<li><code>rotateX()</code></li>
<li><code>rotateY()</code></li>
<li><code>rotateZ()</code></li>
<li><code>translateZ()</code></li>
<li><code>scaleZ()</code></li>
</ul>
</li>
</ul>
<h4 id="第十二课-视频音频"><a href="#第十二课-视频音频" class="headerlink" title="第十二课 视频音频"></a>第十二课 视频音频</h4><hr>
<ul>
<li><p>视频音频格式的简单介绍</p>
<ul>
<li>常见的视频格式<ul>
<li>视频的组成部分：画面、音频、编码格式</li>
<li>视频编码：H.264、Theora、VP8(google开源)</li>
</ul>
</li>
<li>常见的音频格式<ul>
<li>视频编码：ACC、MP3、Vorbis</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>HTML5</code>支持的格式</strong></p>
</li>
</ul>
<hr>
<ul>
<li><code>HTML5</code>能在完全脱离插件的情况下播放音视频,但是不是所有格式都支持。</li>
<li><strong>支持的视频格式：</strong><ul>
<li><code>Ogg=</code>带有<code>Theora</code>视频编码<code>+Vorbis</code>音频编码的<code>Ogg</code>文件</li>
<li><code>MEPG4=</code>带有H.264视频编码<code>+AAC</code>音频编码的<code>MPEG4</code>文件</li>
<li><code>WebM=</code>带有<code>VP8</code>视频编码<code>+Vorbis</code>音频编码的<code>WebM</code>格式</li>
</ul>
</li>
</ul>
<h5 id="Video的使用"><a href="#Video的使用" class="headerlink" title="Video的使用"></a><code>Video</code>的使用</h5><hr>
<ul>
<li><strong>单独用法</strong><ul>
<li><code>&lt;video src=&quot;文件地址&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;</code></li>
</ul>
</li>
<li><strong>带提示用法</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt; <span class="attr">video</span> <span class="attr">src</span>=<span class="string">"文件地址"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></div><div class="line">	您的浏览器暂不支持video标签。播放视频</div><div class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>兼容用法</strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt; <span class="attr">video</span>  <span class="attr">controls</span>=<span class="string">"controls"</span>  <span class="attr">width</span>=<span class="string">"300"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"move.ogg"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span> &gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"move.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span> &gt;</span></div><div class="line">	您的浏览器暂不支持video标签。播放视频</div><div class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>Video</code>的常见属性</strong></li>
</ul>
<table>
<thead>
<tr>
<th>属性</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Autoplay</td>
<td>Autoplay</td>
<td>视频就绪自动播放</td>
</tr>
<tr>
<td>controls</td>
<td>controls</td>
<td>向用户显示播放控件</td>
</tr>
<tr>
<td>Width</td>
<td>Pixels(像素)</td>
<td>设置播放器宽度</td>
</tr>
<tr>
<td>Height</td>
<td>Pixels(像素)</td>
<td>设置播放器高度</td>
</tr>
<tr>
<td>Loop</td>
<td>Loop</td>
<td>播放完是否继续播放该视频，循环播放</td>
</tr>
<tr>
<td>Preload</td>
<td>load{auto,meta,none}</td>
<td>规定是否预加载视频。</td>
</tr>
<tr>
<td>Src</td>
<td>url</td>
<td>视频url地址</td>
</tr>
<tr>
<td>Poster</td>
<td>Imgurl</td>
<td>加载等待的画面图片</td>
</tr>
<tr>
<td>Autobuffer</td>
<td>Autobuffer</td>
<td>设置为浏览器缓冲方式，不设置autoply才有效</td>
</tr>
</tbody>
</table>
<ul>
<li><strong><code>Video</code>的<code>API</code>方法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>属性</th>
<th>事件</th>
</tr>
</thead>
<tbody>
<tr>
<td>play()</td>
<td>currentSrc</td>
<td>play</td>
</tr>
<tr>
<td>pause()</td>
<td>currentTime</td>
<td>pause</td>
</tr>
<tr>
<td>load()</td>
<td>videoWidth</td>
<td>progress</td>
</tr>
<tr>
<td>canPlayType()</td>
<td>videoHeight</td>
<td>error</td>
</tr>
</tbody>
</table>
<h4 id="第十三课-canvas"><a href="#第十三课-canvas" class="headerlink" title="第十三课 canvas"></a>第十三课 canvas</h4><hr>
<ul>
<li>标签 <code>&lt;canvas&gt;</code><ul>
<li>不支持<code>canvas</code> 的浏览器可以看到的内容</li>
</ul>
</li>
<li><code>&lt;canvas&gt;</code> 绘制环境<ul>
<li><code>getContext(&quot;2d&quot;)</code>;目前支持<code>2d</code>的场景</li>
</ul>
</li>
</ul>
<ul>
<li><strong>绘制矩形</strong><ul>
<li><code>rect(L,T,W,H)</code>:创建一个矩形</li>
<li><code>fillRect(L,T,W,H)</code>:绘制填充的矩形</li>
<li><code>strokeRect(L,T,W,H)</code>绘制矩形(无填充)<ul>
<li>默认一像素黑色边框</li>
</ul>
</li>
</ul>
</li>
<li><strong>设置绘图</strong><ul>
<li><code>fillStyle</code>:填充颜色(绘制<code>canvas</code>是有顺序的)</li>
<li><code>lineWidth</code>:线宽度，笔迹粗细</li>
<li><code>strokeStyle</code>:边线颜色</li>
</ul>
</li>
<li><p><strong>绘制路径</strong></p>
<ul>
<li><code>stroke</code> ：绘制，划线(黑色默认)</li>
<li><code>fill</code> :填充(黑色默认)</li>
<li><code>rect(矩形区域)</code> </li>
<li><code>clearRect</code> 擦除一个矩形区域</li>
<li><code>save</code> 进入到XXX（高逼格）状态</li>
<li><code>restore</code> 退出xxx（高逼格）状态</li>
</ul>
</li>
<li><p><strong>绘制圆形</strong></p>
<ul>
<li><code>arc(x,y,半径,起始弧度,结束弧度,旋转方向)</code></li>
<li><code>x</code>，<code>y</code>起始位置</li>
<li>弧度与角度：<code>弧度=角度 x π / 180</code></li>
<li>旋转方向：顺时针（默认：<code>false</code>），逆时针（<code>true</code>）</li>
</ul>
</li>
<li><strong>绘制字体</strong><ul>
<li><code>font</code>：设置字体大小</li>
<li><code>fillText</code>：填充字体</li>
<li><code>strokeText</code>：绘制字体</li>
</ul>
</li>
<li>扩展阅读<ul>
<li><a href="http://luckykun.com/work/2016-09-01/canvas-study01.html" target="_blank" rel="external">canvas学习之API整理笔记（一）</a></li>
<li><a href="http://jartto.wang/2016/07/25/make-an-inventory-of-html5-api/" target="_blank" rel="external">HTML5 API大盘点</a></li>
</ul>
</li>
</ul>
<h4 id="第十四课-SVG绘图"><a href="#第十四课-SVG绘图" class="headerlink" title="第十四课 SVG绘图"></a>第十四课 SVG绘图</h4><hr>
<ul>
<li><p><strong>svg是什么</strong></p>
<ul>
<li>矢量图</li>
<li>与<code>canvas</code>的区别</li>
</ul>
</li>
<li><p><strong>svg的引入方式</strong></p>
</li>
<li><p>方式一：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.1" encoding="utf-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"      	"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>方式二：</p>
<ul>
<li>图片、背景、框架</li>
</ul>
</li>
<li><p>方式三: </p>
<ul>
<li><code>html</code>页面中添加<code>svg</code></li>
</ul>
</li>
<li><p><strong><code>circle</code>:圆形</strong></p>
<ul>
<li>圆心坐标  <code>cx</code>,<code>cy</code></li>
<li>半径  <code>r</code></li>
<li><code>fill</code>   <code>stroke</code>  <code>stroke-width</code>     <code>stlye</code>样式 </li>
<li><code>fill = &quot;none/transparent&quot;</code></li>
</ul>
</li>
<li><strong>ellipse:椭圆</strong><ul>
<li><code>cx</code>属性定义的椭圆中心的x坐标</li>
<li><code>cy</code>属性定义的椭圆中心的y坐标</li>
<li><code>rx</code>属性定义的水平半径</li>
<li><code>ry</code>属性定义的垂直半径</li>
</ul>
</li>
<li><strong>rect : 矩形</strong><ul>
<li><code>width</code>  <code>height</code> 宽高   </li>
<li>坐标 <code>x</code>,<code>y</code> </li>
<li>圆角  <code>rx</code>,<code>ry</code></li>
</ul>
</li>
<li><p><strong><code>line</code>:线条</strong></p>
<ul>
<li><code>x1</code>,<code>y1</code>,<code>x2</code>,<code>y2</code></li>
<li><code>stroke-opacity</code>  透明  <code>fill-opacity</code></li>
</ul>
</li>
<li><p><strong>polyline:折线</strong></p>
<ul>
<li><code>points</code>:点坐标（<code>x1 y1 x2 y2...</code>）或(<code>x1,y1,x2,y2....</code>)    </li>
</ul>
</li>
<li><strong>polygon:多边形</strong><ul>
<li>折线闭合  <code>fill-rule:evenodd/nonzero</code>;</li>
</ul>
</li>
<li><p><strong>path: 路劲</strong></p>
<ul>
<li><code>d</code>属性</li>
<li><code>M(起始坐标)</code>,<code>L(结束坐标)</code>,<code>H(水平线)</code>,<code>V(垂直线)</code>,<code>A(圆弧)</code>,<code>Z(闭合路劲)</code><ul>
<li><code>C</code>,<code>S</code>,<code>Q</code>,<code>T</code> 贝塞尔曲线</li>
<li>大写为绝对坐标(具体的坐标位置)</li>
<li>小写为相对坐标(相对起始坐标点的具体长度)</li>
</ul>
</li>
<li>A命令<ul>
<li><code>x</code>半径 <code>y</code>半径 角度  弧长(0 小弧 1大弧)  方向(0逆时针 1顺时针)</li>
<li>终点<code>(x y)</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>C命令：三次贝塞尔曲线</strong></p>
<ul>
<li><code>(x1,y1,x2,y2,x,y)</code>    <code>x1</code>,<code>y1</code>控制点一    <code>x2</code>,<code>y2</code>控制点二   <code>x</code>,<code>y</code>结束点</li>
</ul>
</li>
<li><strong>S命令：平滑贝塞尔曲线(自动对称一个控制点)</strong><ul>
<li><code>(x2,y2,x,y)</code>  <code>x2</code>,<code>y2</code>控制点    x,y结束点</li>
</ul>
</li>
<li><strong>Q命令：二次贝塞尔曲线</strong><ul>
<li><code>(x1,y1,x,y)</code>   x1,y1控制点  x,y结束点</li>
</ul>
</li>
<li><p><strong>T命令：一次贝塞尔曲线</strong></p>
<ul>
<li><code>(x,y)</code>结束点</li>
</ul>
</li>
<li><p><strong><code>g</code>标签:组合元素  设置元素公共属性</strong></p>
<ul>
<li>共用属性</li>
<li><code>transform = &quot;translate(0,0)&quot;</code></li>
</ul>
</li>
<li><p><strong><code>text</code>标签</strong></p>
<ul>
<li><code>x</code>, <code>y</code>, <code>text-anchor</code>(对齐start end middle)    <code>font-size</code></li>
</ul>
</li>
<li><p><strong><code>image</code> 标签</strong></p>
<ul>
<li><code>x</code>, <code>y</code>, <code>width</code>  <code>height</code></li>
<li><code>xlink:href</code>(图片地址)</li>
</ul>
</li>
</ul>
<h4 id="第十五课-地理信息与本地存储"><a href="#第十五课-地理信息与本地存储" class="headerlink" title="第十五课 地理信息与本地存储"></a>第十五课 地理信息与本地存储</h4><hr>
<h5 id="地理位置"><a href="#地理位置" class="headerlink" title="地理位置"></a>地理位置</h5><hr>
<ul>
<li>经度  :   南北极的连接线</li>
<li><p>纬度  :   东西连接的线</p>
</li>
<li><p>位置信息从何而来</p>
<ul>
<li><code>IP</code>地址</li>
<li><code>GPS</code>全球定位系统</li>
<li><code>Wi-Fi</code>无线网络</li>
<li>基站</li>
</ul>
</li>
<li><p><code>avigator.geolocation</code></p>
<ul>
<li>单次定位请求  ：<code>getCurrentPosition</code>(请求成功,请求失败,数据收集方式)</li>
<li><p><strong>请求成功函数</strong></p>
<ul>
<li>经度 :  <code>coords.longitude</code></li>
<li>纬度 :  <code>coords.latitude</code></li>
<li>准确度 :  <code>coords.accuracy</code></li>
<li>海拔 : <code>coords.altitude</code></li>
<li>海拔准确度 :  <code>coords.altitudeAcuracy</code></li>
<li>行进方向 :  <code>coords.heading</code></li>
<li>地面速度 :  <code>coords.speed</code></li>
<li>请求的时间: <code>new Date(position.timestamp)</code></li>
</ul>
</li>
<li><p><strong>请求失败函数</strong></p>
<ul>
<li>失败编号  ：<code>code</code><ul>
<li>0  :  不包括其他错误编号中的错误</li>
<li>1  :  用户拒绝浏览器获取位置信息</li>
<li>2  :  尝试获取用户信息，但失败了</li>
<li>3  :   设置了<code>timeout</code>值，获取位置超时了</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>数据收集 :  json的形式</strong></p>
<ul>
<li><code>enableHighAcuracy</code>  :  更精确的查找，默认<code>false</code></li>
<li><code>timeout</code> :  获取位置允许最长时间，默认<code>infinity</code></li>
<li><code>maximumAge</code> :  位置可以缓存的最大时间，默认<code>0</code></li>
</ul>
</li>
<li><p><strong>多次定位请求*</strong>  : <code>watchPosition</code></p>
<ul>
<li>移动设备有用，位置改变才会触发</li>
<li>配置参数：<code>frequency</code> 更新的频率</li>
<li>关闭更新请求  :  <code>clearWatch</code></li>
</ul>
</li>
<li><p><strong>百度地图<code>API</code></strong></p>
</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=qZfInp9MaT9Qa0PoNy4Rmx3Y9W9ZXMfw"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h5 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h5><hr>
<ul>
<li><p><strong><code>Storage</code></strong></p>
<ul>
<li><code>sessionStorage</code><ul>
<li><code>session</code>临时回话，从页面打开到页面关闭的时间段</li>
<li>窗口的临时存储，页面关闭，本地存储消失</li>
</ul>
</li>
<li><code>localStorage</code><ul>
<li>永久存储（可以手动删除数据）</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>Storage</code>的特点</strong></p>
<ul>
<li>存储量限制 ( 5M )</li>
<li>客户端完成，不会请求服务器处理</li>
<li><code>sessionStorage</code>数据是不共享、 <code>localStorage</code>共享</li>
</ul>
</li>
<li><p><strong><code>Storage API</code></strong></p>
<ul>
<li><code>setItem()</code>:<ul>
<li>设置数据，(<code>key</code>,<code>value</code>)类型，类型都是字符串</li>
<li>可以用获取属性的形式操作</li>
</ul>
</li>
<li><code>getItem():</code><ul>
<li>获取数据，通过<code>key</code>来获取到相应的<code>value</code></li>
</ul>
</li>
<li><code>removeItem()</code>:<ul>
<li>删除数据，通过key来删除相应的<code>value</code></li>
</ul>
</li>
<li><code>clear()</code>:<ul>
<li>删除全部存储的值</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>存储事件:</strong></p>
<ul>
<li>当数据有修改或删除的情况下，就会触发<code>storage</code>事件</li>
<li>在对数据进行改变的窗口对象上是不会触发的`</li>
<li><code>Key</code> : 修改或删除的<code>key</code>值，如果调用<code>clear()</code>,<code>key</code>为<code>null</code></li>
<li><code>newValue</code>  :  新设置的值，如果调用<code>removeStorage()</code>,<code>key</code>为<code>null</code></li>
<li><code>oldValue</code> :  调用改变前的<code>value</code>值</li>
<li><code>storageArea</code> : 当前的<code>storage</code>对象</li>
<li><code>url</code> :  触发该脚本变化的文档的url</li>
<li>注：<code>session</code>同窗口才可以,例子：<code>iframe</code>操作</li>
</ul>
</li>
</ul>
<h4 id="第十六课-HTML5新增JS方法"><a href="#第十六课-HTML5新增JS方法" class="headerlink" title="第十六课 HTML5新增JS方法"></a>第十六课 HTML5新增JS方法</h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-aec985a8f543f52e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="H5在JavaScript中新增的方法一览"></p>
<ul>
<li><p><strong>新增选择器</strong></p>
<ul>
<li><code>document.querySelector()</code> 选择单个元素</li>
<li><code>document.querySelectorAll()</code> 选择所有的</li>
<li><code>document.getElementsByClassName()</code> 通过类名选择</li>
</ul>
</li>
<li><p><strong>延迟加载JS</strong></p>
<ul>
<li><code>JS</code>的加载会影响后面的内容加载<ul>
<li>很多浏览器都采用了并行加载JS，但还是会影响其他内容</li>
</ul>
</li>
<li><code>Html5</code>的<code>defer</code>和<code>async</code><ul>
<li><code>defer=“defer ”</code>: 延迟加载，会按顺序执行，在<code>onload</code>执行前被触发</li>
<li><code>async =“async”</code>: 异步加载，加载完就触发，有顺序问题</li>
</ul>
</li>
<li>浏览器兼容性：<code>Labjs</code>库</li>
</ul>
</li>
<li><p><strong>获取<code>class</code>列表属性</strong></p>
<ul>
<li><code>classList</code><ul>
<li><code>length</code> :  <code>class</code>的长度</li>
<li><code>add()</code> :  添加<code>class</code>方法</li>
<li><code>remove()</code>  :  删除<code>class</code>方法</li>
<li><code>toggle()</code> :  切换<code>class</code>方法 </li>
<li><code>contains()</code> : 判断类名是否存在返回<code>bool</code>值</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>JSON</code>的新方法</strong></p>
<ul>
<li><code>parse()</code> : 把字符串转成<code>json</code><ul>
<li>字符串中的属性要严格的加上引号</li>
</ul>
</li>
<li><p><code>stringify()</code> : 把<code>json</code>转化成字符串</p>
<ul>
<li>会自动的把双引号加上</li>
</ul>
</li>
<li><p>与<code>eval</code>的区别</p>
<ul>
<li><code>eval()</code>：对任何的字符串进行解析变成js</li>
<li><code>parse()</code>：字符串中的属性要严格的加上引号</li>
</ul>
</li>
<li>其他浏览器兼容<ul>
<li><a href="http://www.json.org/" target="_blank" rel="external">去下载json2.js</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>历史管理</strong></p>
<ul>
<li><code>onhashchange</code> ：改变hash值来管理</li>
<li><code>history</code>  ：<ul>
<li>服务器下运行<ul>
<li><code>pushState</code> :  三个参数 ：数据  标题(都没实现)  地址(可选)</li>
<li><code>onpopstate</code>事件 :  读取数据   <code>event.state</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第十七课-HTML5拖拽事件"><a href="#第十七课-HTML5拖拽事件" class="headerlink" title="第十七课 HTML5拖拽事件"></a>第十七课 HTML5拖拽事件</h4><hr>
<ul>
<li>图片自带拖拽功能</li>
<li>其他元素可设置<code>draggable</code>属性</li>
<li><p><strong><code>draggable ：true</code></strong></p>
<ul>
<li>拖拽元素(被拖拽元素对象)事件 :  <ul>
<li><code>ondragstart</code> : 拖拽前触发 </li>
<li><code>ondrag</code> :拖拽前、拖拽结束之间，连续触发</li>
<li><code>ondragend</code> :拖拽结束触发</li>
</ul>
</li>
<li>目标元素(拖拽元素被拖到的对象)事件 :  <ul>
<li><code>ondragenter</code> :进入目标元素触发</li>
<li><code>ondragover</code>:进入目标、离开目标之间，连续触发</li>
<li><code>ondragleave</code> :离开目标元素触发</li>
<li><code>ondrop</code> :在目标元素上释放鼠标触发<ul>
<li>需要在<code>ondragover</code>事件里面阻止默认事件</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>拖拽兼容问题</strong></p>
<ul>
<li><p>火狐浏览器下需设置<code>dataTransfer</code>对象才可以拖拽除图片外的其他标签</p>
<ul>
<li><code>dataTransfer</code>对象</li>
<li><code>setData()</code> : 设置数据 <code>key</code>和<code>value</code>(必须是字符串)</li>
<li><code>getData()</code> : 获取数据，根据<code>key</code>值，获取对应的<code>value</code></li>
<li><p><code>effectAllowed</code> : 设置光标样式(<code>none</code>, <code>copy</code>, <code>copyLink</code>, <code>copyMove</code>, <code>link</code>, <code>linkMove</code>,<code>move</code>, <code>all</code> 和<code>uninitialized</code>)</p>
</li>
<li><p><code>setDragImage</code> ：三个参数（指定的元素，坐标<code>X</code>，坐标<code>Y</code>）</p>
</li>
<li><code>files</code>： 获取外部拖拽的文件，返回一个<code>filesList</code>列表<ul>
<li><code>filesList</code>下有个<code>type</code>属性，返回文件的类型</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>读取文件信息</strong><ul>
<li><code>FileReader</code>(读取文件信息)<ul>
<li><code>readAsDataURL</code></li>
</ul>
</li>
<li>参数为要读取的文件对象<ul>
<li><code>onload</code>当读取文件成功完成的时候触发此事件</li>
<li><code>this. result</code> 获取读取的文件数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="第十八课-跨文档操作"><a href="#第十八课-跨文档操作" class="headerlink" title="第十八课 跨文档操作"></a>第十八课 跨文档操作</h4><hr>
<ul>
<li><p><strong>跨文档请求</strong></p>
</li>
<li><p>同域跨文档</p>
<ul>
<li><code>iframe</code>内页：<ul>
<li>父页面操作子页面：<code>contentWindow</code></li>
<li>子页面操作父页面：<code>window.top</code>(找到最顶级的父页面)/<code>parent</code>(第一父页面)</li>
<li>新窗口页：<ul>
<li>父页面操作子页面：<code>window.open</code></li>
<li>子页面操作父页面：<code>window.opener</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>不同域跨文档</strong></p>
<ul>
<li><code>postMessage（“发送的数据”,”接收的域”）</code><ul>
<li><code>message</code>事件监听</li>
<li><code>ev.origin</code>发送数据来源的域</li>
<li><code>ev.data</code> 发送的数据</li>
</ul>
</li>
<li>通过判断发送的数据来执行相应的需求</li>
</ul>
</li>
<li><p><strong>ajax跨域</strong></p>
<ul>
<li><p><code>XMLHttpRequest</code> 新增功能</p>
<ul>
<li>跨域请求：修改服务端头信息<ul>
<li>I<code>E</code>兼容：<code>XDomaiRequest</code></li>
</ul>
</li>
</ul>
</li>
<li><p>进度事件：</p>
<ul>
<li><code>upload.onprogress(ev)</code> 上传进度(实现文件上传进度条)<ul>
<li><code>ev.total</code>  发送文件的总量</li>
<li><code>ev.loaded</code> 已发送的量</li>
</ul>
</li>
<li><code>FormData</code>  构建提交二进制数据</li>
</ul>
</li>
</ul>
</li>
</ul>
<h6 id="附录一-HTML5速查表"><a href="#附录一-HTML5速查表" class="headerlink" title="附录一　HTML5速查表"></a>附录一　HTML5速查表</h6><hr>
<ul>
<li><a href="http://caniuse.com/#search=canvas" target="_blank" rel="external">可以查阅支持H5+CSS3的属性</a></li>
<li><a href="http://www.html5star.com/manual/html5label-meaning/" target="_blank" rel="external">HTML5 标签含义之元素周期表</a></li>
<li><a href="http://www.inmotionhosting.com/img/infographics/html5_cheat_sheet_tags.png" target="_blank" rel="external">HTML5标签速查表</a></li>
<li><a href="chrome-extension://ikhdkkncnoglghljlkmcimlnlhkeamad/pdf-viewer/web/viewer.html?file=http%3A%2F%2Fjonibologna.com%2Fcontent%2Fimages%2Fflexboxsheet.pdf" target="_blank" rel="external">展示 flexbox 属性的作用–推荐</a></li>
<li><a href="https://demos.scotch.io/visual-guide-to-css3-flexbox-flexbox-playground/demos/" target="_blank" rel="external">Flexbox 视觉指南–更好更容易地理解 Flexbox 某个属性的作用</a></li>
</ul>
<hr>
<ul>
<li><a href="https://github.com/poetries/poetries.github.io/blob/dev/source/_posts/HTML5+CSS3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE%20.md" target="_blank" rel="external">本文md文件-仅供参考</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载请声明 &lt;a href=&quot;http://blog.poetries.top/2016/10/19/HTML5+CSS3%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE%20/&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这篇文章主要总结H5的一些新增的功能以及一些基础归纳，这里只是一个提纲，并不是很详细，后面会一直完善补充新的内容，本文是一些笔记记录，放在这里供自己参考也供他人学习！&lt;/p&gt;
&lt;h4 id=&quot;第一课-HTML5结构&quot;&gt;&lt;a href=&quot;#第一课-HTML5结构&quot; class=&quot;headerlink&quot; title=&quot;第一课 HTML5结构&quot;&gt;&lt;/a&gt;第一课 HTML5结构&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTML5&lt;/code&gt; 是新一代的 &lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DTD&lt;/code&gt;声明改变    &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;新的结构标签            &lt;/li&gt;
&lt;li&gt;注意的地方            &lt;ul&gt;
&lt;li&gt;&lt;code&gt;ie8&lt;/code&gt; 不兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1480597-ce00790dcabf9c47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;一些总结--from-dunitian&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="HTMl5" scheme="http://www.poetries.top/tags/HTMl5/"/>
    
      <category term="CSS3" scheme="http://www.poetries.top/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>javascript笔记总结篇</title>
    <link href="http://www.poetries.top/2016/09/24/javascript%E7%AC%94%E8%AE%B0%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    <id>http://www.poetries.top/2016/09/24/javascript笔记基础总结篇/</id>
    <published>2016-09-24T02:33:00.000Z</published>
    <updated>2016-11-26T10:58:54.818Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>转载请声明出处 <a href="http://blog.poetries.top/2016/09/24/javascript%E7%AC%94%E8%AE%B0%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E7%AF%87/#more" target="_blank" rel="external">博客原文</a></p>
</blockquote>
<p>随手翻阅以前的学习笔记，顺便整理一下放在这里，方便自己复习，也希望你有也有帮助吧</p>
<h3 id="第一课时-入门基础"><a href="#第一课时-入门基础" class="headerlink" title="第一课时 入门基础"></a>第一课时 入门基础</h3><hr>
<h4 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a><strong>知识点</strong>：</h4><hr>
<ul>
<li>操作系统就是个应用程序</li>
<li>只要是应用程序都要占用物理内存</li>
<li>浏览器本身也是一个应用程序</li>
<li>浏览器本身只懂得解析<code>HTML</code></li>
<li>调用浏览器这个应用程序的一个功能绘制<a id="more"></a>
<h4 id="1、javascript介绍"><a href="#1、javascript介绍" class="headerlink" title="1、javascript介绍"></a>1、javascript介绍</h4></li>
</ul>
<hr>
<ul>
<li><p><code>JavaScript</code>操作<code>DOM</code>的本质是=获取+触发+改变</p>
</li>
<li><p>目的：就是用来操作内存中的<code>DOM</code>节点</p>
<ul>
<li>修改<code>DOM</code>节点的属性</li>
<li>过<code>javascript</code>语法组织逻辑代码操作DOM</li>
<li><code>BOM(window)</code>它包含了<code>DOM</code></li>
<li><code>DOM(document)</code></li>
<li><code>script</code>脚本推荐放在最下边好处：防止因网络问题，页面加载时间长，出现空白；即便网络问题，浏览器也把<code>DOM</code>加载渲染完成，等待从服务端下载完<code>js</code>脚本，出现效果</li>
<li><code>css</code>不放在最下面原因通俗地讲：好比先穿好衣服在出去，浏览器先把<code>css</code>样式准备好，在加载结构层，使得页面有样子；如果放在下面，因为页面是从上往下加载，没有<code>css</code>，就剩下裸露的标签，很难看，使得用户体验不好</li>
</ul>
</li>
</ul>
<h4 id="2、基于对象的内存管理"><a href="#2、基于对象的内存管理" class="headerlink" title="2、基于对象的内存管理"></a>2、基于对象的内存管理</h4><hr>
<ul>
<li><code>javascript</code>就是来操作这些对象<ul>
<li>通过逻辑组织对象之间的关系和行为</li>
<li>如何操作这些对象？通过变量引用</li>
</ul>
</li>
</ul>
<h4 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h4><hr>
<ul>
<li>变量本质是一个空盒子，里面记录了一个内存地址，使能找到内存中的对象，保存了指向具体的实在的东西的地址</li>
<li>变量存在栈中，对象存在堆中</li>
<li>变量的意义：方便我们去操作对象</li>
<li>变量的几种引用方式<ul>
<li>指针（<code>C</code>语言中叫法）</li>
<li>引用（<code>Java</code>）</li>
<li>变量</li>
</ul>
</li>
<li>例如：<ul>
<li><code>var b = document.body</code> 含义：把<code>body</code>这个对象在内存中的地址放到b变量里面，变量<code>b</code>（<code>b</code>是内存地址的别名）本身也存在内存中，以后的操作是针对<code>body</code>这个地址</li>
</ul>
</li>
</ul>
<ul>
<li>变量命名规范<ul>
<li>由字母(<code>a-zA-Z</code>)数字(<code>0-9</code>)下划线(<code>_</code>)以及美元符号(<code>$</code>)</li>
<li>不能由数字开头</li>
<li>命名尽量用英文并且具有一定的含义</li>
<li>如果有多个英文单词,后面单词的首字母大写</li>
<li>不能使用关键字</li>
<li>首字母不要大写，大写是有特殊含义的</li>
</ul>
</li>
</ul>
<h4 id="DOM在内存中的一些图示"><a href="#DOM在内存中的一些图示" class="headerlink" title="DOM在内存中的一些图示"></a>DOM在内存中的一些图示</h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-1a17ccd9b4577254.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DOM Tree"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-3a4d0eba77f1a163.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DOM内存图"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-80fe8bcddfbca269.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DOM内存图"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-ce659f11e978cd3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DOM内存图"></p>
<h3 id="第二课时"><a href="#第二课时" class="headerlink" title="第二课时"></a>第二课时</h3><hr>
<h4 id="回顾上节："><a href="#回顾上节：" class="headerlink" title="回顾上节："></a>回顾上节：</h4><ul>
<li><p>1、<code>javascript</code>介绍</p>
</li>
<li><p>2、基于对象的内存管理</p>
</li>
<li><p><code>javascript</code>就是来操作这些对象</p>
<ul>
<li>通过逻辑组织对象之间的关系和行为</li>
<li>如何操作这些对象？通过变量引用</li>
</ul>
</li>
<li>3、变量</li>
</ul>
<h4 id="知识点：-1"><a href="#知识点：-1" class="headerlink" title="知识点："></a><strong>知识点</strong>：</h4><hr>
<h4 id="1、window作用域"><a href="#1、window作用域" class="headerlink" title="1、window作用域"></a>1、<code>window</code>作用域</h4><hr>
<ul>
<li>只要在<code>script</code>标签中定义的变量，默认就在<code>window</code>的作用域之下</li>
<li>默认就是<code>window</code>这个对象里面写代码</li>
</ul>
<h4 id="2、数据类型"><a href="#2、数据类型" class="headerlink" title="2、数据类型"></a>2、数据类型</h4><hr>
<h5 id="如何判断js中的数据类型："><a href="#如何判断js中的数据类型：" class="headerlink" title="如何判断js中的数据类型："></a>如何判断js中的数据类型：</h5><hr>
<ul>
<li><p><code>typeof</code>、<code>instanceof</code>、 <code>constructor</code>、 <code>prototype</code>方法比较</p>
</li>
<li><p>如何判断<code>js</code>中的类型呢，先举几个例子：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="string">"iamstring."</span>;</div><div class="line"><span class="keyword">var</span> b = <span class="number">222</span>;</div><div class="line"><span class="keyword">var</span> c= [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"><span class="keyword">var</span> e = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">111</span>);&#125;;</div><div class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.name=<span class="string">"22"</span>;&#125;;</div></pre></td></tr></table></figure>
<h6 id="最常见的判断方法：typeof"><a href="#最常见的判断方法：typeof" class="headerlink" title="最常见的判断方法：typeof"></a><strong>最常见的判断方法</strong>：<code>typeof</code></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">alert(<span class="keyword">typeof</span> a)   ------------&gt; string</div><div class="line">alert(<span class="keyword">typeof</span> b)   ------------&gt; number</div><div class="line">alert(<span class="keyword">typeof</span> c)   ------------&gt; object</div><div class="line">alert(<span class="keyword">typeof</span> d)   ------------&gt; object</div><div class="line">alert(<span class="keyword">typeof</span> e)   ------------&gt; <span class="function"><span class="keyword">function</span></span></div><div class="line"><span class="title">alert</span>(<span class="params">typeof f</span>)   ------------&gt; <span class="title">function</span></div></pre></td></tr></table></figure>
<ul>
<li>其中<code>typeof</code>返回的类型都是字符串形式，需注意，例如：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alert(<span class="keyword">typeof</span> a == <span class="string">"string"</span>) -------------&gt; <span class="literal">true</span></div><div class="line">alert(<span class="keyword">typeof</span> a == <span class="built_in">String</span>) ---------------&gt; <span class="literal">false</span></div></pre></td></tr></table></figure>
<ul>
<li>另外<code>typeof</code>可以判断<code>function</code>的类型；在判断除<code>Object</code>类型的对象时比较方便。</li>
</ul>
<h6 id="判断已知对象类型的方法：instanceof"><a href="#判断已知对象类型的方法：instanceof" class="headerlink" title="判断已知对象类型的方法：instanceof"></a><strong>判断已知对象类型的方法</strong>：<code>instanceof</code></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">alert(c <span class="keyword">instanceof</span> <span class="built_in">Array</span>) ---------------&gt; <span class="literal">true</span></div><div class="line">alert(d <span class="keyword">instanceof</span> <span class="built_in">Date</span>) </div><div class="line">alert(f <span class="keyword">instanceof</span> <span class="built_in">Function</span>) ------------&gt; <span class="literal">true</span></div><div class="line">alert(f <span class="keyword">instanceof</span> <span class="function"><span class="keyword">function</span>) ------------&gt; <span class="title">false</span></span></div></pre></td></tr></table></figure>
<ul>
<li><strong>注意</strong>：<code>instanceof</code>后面一定要是对象类型，并且大小写不能错，该方法适合一些条件选择或分支。</li>
</ul>
<h6 id="根据对象的constructor判断：constructor"><a href="#根据对象的constructor判断：constructor" class="headerlink" title="根据对象的constructor判断：constructor"></a><strong>根据对象的<code>constructor</code>判断</strong>：<code>constructor</code></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">alert(c.constructor === <span class="built_in">Array</span>) ----------&gt; <span class="literal">true</span></div><div class="line">alert(d.constructor === <span class="built_in">Date</span>) -----------&gt; <span class="literal">true</span></div><div class="line">alert(e.constructor === <span class="built_in">Function</span>) -------&gt; <span class="literal">true</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>注意</strong>： <code>constructor</code> 在类继承时会出错</p>
</li>
<li><p>例子：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">A.prototype = <span class="keyword">new</span> B(); <span class="comment">//A继承自B</span></div><div class="line"><span class="keyword">var</span> aObj = <span class="keyword">new</span> A();</div><div class="line">alert(aobj.constructor === B) -----------&gt; <span class="literal">true</span>;</div><div class="line">alert(aobj.constructor === A) -----------&gt; <span class="literal">false</span>;</div></pre></td></tr></table></figure>
<ul>
<li>而<code>instanceof</code>方法不会出现该问题，对象直接继承和间接继承的都会报<code>true</code>：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alert(aobj <span class="keyword">instanceof</span> B) ----------------&gt; <span class="literal">true</span>;</div><div class="line">alert(aobj <span class="keyword">instanceof</span> B) ----------------&gt; <span class="literal">true</span>;</div></pre></td></tr></table></figure>
<ul>
<li>言归正传，解决<code>construtor</code>的问题通常是让对象的<code>constructor</code>手动指向自己：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">aobj.constructor = A; <span class="comment">//将自己的类赋值给对象的constructor属性</span></div><div class="line">alert(aobj.constructor === A) -----------&gt; <span class="literal">true</span>;</div><div class="line">alert(aobj.constructor === B) -----------&gt; <span class="literal">false</span>; <span class="comment">//基类不会报true了;</span></div></pre></td></tr></table></figure>
<h6 id="通用但很繁琐的方法：-prototype"><a href="#通用但很繁琐的方法：-prototype" class="headerlink" title="通用但很繁琐的方法： prototype"></a><strong>通用但很繁琐的方法</strong>： <code>prototype</code></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">alert(<span class="built_in">Object</span>.prototype.toString.call(a) === ‘[object <span class="built_in">String</span>]’) -------&gt; <span class="literal">true</span>;</div><div class="line">alert(<span class="built_in">Object</span>.prototype.toString.call(b) === ‘[object <span class="built_in">Number</span>]’) -------&gt; <span class="literal">true</span>;</div><div class="line">alert(<span class="built_in">Object</span>.prototype.toString.call(c) === ‘[object <span class="built_in">Array</span>]’) -------&gt; <span class="literal">true</span>;</div><div class="line">alert(<span class="built_in">Object</span>.prototype.toString.call(d) === ‘[object <span class="built_in">Date</span>]’) -------&gt; <span class="literal">true</span>;</div><div class="line">alert(<span class="built_in">Object</span>.prototype.toString.call(e) === ‘[object <span class="built_in">Function</span>]’) -------&gt; <span class="literal">true</span>;</div><div class="line">alert(<span class="built_in">Object</span>.prototype.toString.call(f) === ‘[object <span class="built_in">Function</span>]’) -------&gt; <span class="literal">true</span>;</div></pre></td></tr></table></figure>
<ul>
<li>大小写不能写错，比较麻烦，但胜在通用。</li>
<li>通常情况下用<code>typeof</code>判断就可以了，遇到预知<code>Object</code>类型的情况可以选用<code>instanceof</code>或<code>constructor</code>方法</li>
</ul>
<h4 id="Javascript的数据类型有六种（ES6新增了第七种Symbol）"><a href="#Javascript的数据类型有六种（ES6新增了第七种Symbol）" class="headerlink" title="Javascript的数据类型有六种（ES6新增了第七种Symbol）"></a>Javascript的数据类型有六种（ES6新增了第七种<code>Symbol</code>）</h4><hr>
<ul>
<li>数值（<code>number</code>）：整数和小数（比如1和3.14）</li>
<li>字符串（<code>string</code>）：字符组成的文本（比如”Hello World”）</li>
<li>布尔值（<code>boolean</code>）：true（真）和false（假）两个特定值</li>
<li><code>undefined</code>：表示 未定义 或不存在，即此处目前没有任何值</li>
<li><code>null</code>：表示空缺，即此处应该有一个值，但目前为空</li>
<li>对象（<code>object</code>）：各种值组成的集合</li>
<li>通常，我们将数值、字符串、布尔值称为原始类型（<code>primitive type</code>）的值，即它们是最基本的数据类型，不能再细分了。而将对象称为合成类型（<code>complex type</code>）的值，因为一个对象往往是多个原始类型的值的合成，可以看作是一个存放各种值的容器。至于<code>undefined</code>和<code>null</code>，一般将它们看成两个特殊值</li>
</ul>
<h4 id="内存中一共分为几种对象："><a href="#内存中一共分为几种对象：" class="headerlink" title="内存中一共分为几种对象："></a>内存中一共分为几种对象：</h4><hr>
<ul>
<li>变量</li>
<li><code>DOM</code>对象</li>
<li>常量</li>
<li>自定义对象</li>
</ul>
<h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><hr>
<h5 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a><strong>转换函数</strong></h5><hr>
<ul>
<li><code>toString()</code> 转换为字符串，在JavaScript中所有数据类型都可以转换为<code>string</code>类型</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n1 = <span class="number">12</span>;</div><div class="line"><span class="keyword">var</span> n2 = <span class="literal">true</span>;</div><div class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line"><span class="keyword">var</span> o = &#123;&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">n1.toString(); <span class="comment">//"12"</span></div><div class="line">n2.toString(); <span class="comment">//"true"</span></div><div class="line">a.toString(); <span class="comment">//"1,2,3"</span></div><div class="line">o.toString(); <span class="comment">//"[object Object]"</span></div><div class="line">f.toString(); <span class="comment">//"function f()&#123;&#125;"</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>parseInt()</code>解析出一个<code>string</code>或者<code>number</code>类型的整数部分，如果没有可以转换的部分，则返回<code>NaN</code>（<code>not a number</code>）</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n1 = <span class="string">"12"</span>;</div><div class="line"><span class="keyword">var</span> n2 = <span class="string">"23hello"</span>;</div><div class="line"><span class="keyword">var</span> n3 = <span class="string">"hello"</span>;</div><div class="line"><span class="built_in">parseInt</span>(n1); <span class="comment">//12</span></div><div class="line"><span class="built_in">parseInt</span>(n2); <span class="comment">//23</span></div><div class="line"><span class="built_in">parseInt</span>(n3); <span class="comment">//NaN</span></div></pre></td></tr></table></figure>
<ul>
<li><code>parseFloat()</code>解析出一个<code>string</code>的浮点数部分，如果没有可以转换的部分，则返回<code>NaN</code>（<code>not a number</code>）</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n1 = <span class="string">"1.2.3"</span>;</div><div class="line"><span class="keyword">var</span> n2 = <span class="string">"1.2hello"</span></div><div class="line"><span class="keyword">var</span> n3 = <span class="string">"hello"</span></div><div class="line"><span class="built_in">parseFloat</span>(n1); <span class="comment">//1.2</span></div><div class="line"><span class="built_in">parseFloat</span>(n2); <span class="comment">//1.2</span></div><div class="line"><span class="built_in">parseFloat</span>(n3); <span class="comment">//NaN</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a><strong>强制类型转换</strong></h5><hr>
<ul>
<li><code>Boolean(value)</code>- 把给定的值转换成<code>Boolean</code>型</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Boolean</span>(<span class="number">123</span>); <span class="comment">//true</span></div><div class="line"><span class="built_in">Boolean</span>(<span class="string">""</span>); <span class="comment">//false</span></div><div class="line"><span class="built_in">Boolean</span>([]); <span class="comment">//true</span></div><div class="line"><span class="built_in">Boolean</span>(&#123;&#125;); <span class="comment">//true</span></div><div class="line"><span class="built_in">Boolean</span>(<span class="literal">null</span>); <span class="comment">//false</span></div><div class="line"><span class="built_in">Boolean</span>(<span class="literal">undefined</span>); <span class="comment">//false</span></div></pre></td></tr></table></figure>
<ul>
<li><code>Number(value)</code>-把给定的值转换成数字（可以是整数或浮点数）</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Number</span>(<span class="string">"123"</span>); <span class="comment">//123</span></div><div class="line"><span class="built_in">Number</span>(<span class="string">"123h"</span>); <span class="comment">//NaN</span></div><div class="line"><span class="built_in">Number</span>(<span class="literal">true</span>); <span class="comment">//1</span></div><div class="line"><span class="built_in">Number</span>(<span class="literal">false</span>); <span class="comment">//0</span></div><div class="line"><span class="built_in">Number</span>(<span class="literal">undefined</span>); <span class="comment">//NaN</span></div><div class="line"><span class="built_in">Number</span>(<span class="literal">null</span>); <span class="comment">//0</span></div><div class="line"><span class="built_in">Number</span>([]); <span class="comment">//0</span></div><div class="line"><span class="built_in">Number</span>(&#123;&#125;); <span class="comment">//NaN</span></div></pre></td></tr></table></figure>
<ul>
<li><p><code>String(value)</code>- 把给定的值转换成字符串</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>(<span class="number">123</span>); <span class="comment">//"123"</span></div><div class="line"><span class="built_in">String</span>([<span class="number">1</span>,<span class="number">2</span>]); <span class="comment">//"1,2"</span></div><div class="line"><span class="built_in">String</span>(<span class="literal">undefined</span>) <span class="comment">//"undefined"</span></div><div class="line"><span class="built_in">String</span>(<span class="literal">null</span>) <span class="comment">//"null"</span></div><div class="line"><span class="built_in">String</span>(&#123;&#125;) <span class="comment">//"[object Object]"</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a><strong>隐式转换</strong></h5><hr>
<ul>
<li>数字＋字符串：数字转换为字符串 <code>console.log(12+&quot;12&quot;)</code>; //1212</li>
<li>数字＋布尔值：<code>true</code>转换为<code>1</code>，<code>false</code>转换为<code>0</code>  <code>console.log(12+true)</code>; //13</li>
<li>字符串＋布尔值：布尔值转换为true或false <code>console.log(&quot;hello&quot;+true)</code>; //<code>hellotrue</code></li>
<li>布尔值＋布尔值 <code>console.log(true+true)</code>; //2</li>
</ul>
<h5 id="null和undefined"><a href="#null和undefined" class="headerlink" title="null和undefined"></a><strong>null和undefined</strong></h5><hr>
<ul>
<li><code>undefined</code> 表示一种未知状态，声明了但没有初始化的变量，变量的值时一个未知状态。访问不存在的属性或对象<code>window.xxx</code>）方法没有明确返回值时，返回值是一个<code>undefined.</code>当对未声明的变量应用<code>typeof</code>运算符时，显示为<code>undefined</code>。</li>
<li><code>null</code>表示尚未存在的对象,<code>null</code>是一个有特殊意义的值。可以为变量赋值为<code>null</code>，此时变量的值为“已知状态”(不是<code>undefined</code>)，即<code>null</code>。（用来初始化变量，清除变量内容，释放内存）</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="literal">undefined</span>==<span class="literal">null</span>   <span class="comment">//结果为true,但含义不同。</span></div><div class="line"><span class="literal">undefined</span>===<span class="literal">null</span> <span class="comment">//false,两者类型不一致，前者为“undefined”，后者为“object”</span></div></pre></td></tr></table></figure>
<h4 id="3、javascript脚本执行顺序"><a href="#3、javascript脚本执行顺序" class="headerlink" title="3、javascript脚本执行顺序"></a>3、javascript脚本执行顺序</h4><hr>
<ul>
<li>第一步定义： 分为<code>var</code>定义 和函数定义<code>function</code></li>
<li>第二步执行： 其他所有</li>
<li>先从上往下定义完所有的后，再从上往下执行 除了<code>var</code>  <code>function</code>定义外的 其他都是执行 如：赋值 函数调用</li>
<li>在栈里面找到的，就不去堆里面找，因为栈空间小，就近原则【总之：先在栈里面找，找不到再去堆里面找】在栈里面开辟，就能找到堆里面的地址 如：<code>var b = function(){}</code></li>
</ul>
<h4 id="总结一下-运算的规则：-隐式转换"><a href="#总结一下-运算的规则：-隐式转换" class="headerlink" title="总结一下==运算的规则：(隐式转换)"></a>总结一下<code>==</code>运算的规则：(隐式转换)</h4><hr>
<ul>
<li><p><code>JS</code>中的值有两种类型：原始类型(<code>Primitive</code>)、对象类型(<code>Object</code>)。</p>
</li>
<li><p>原始类型包括：<code>Undefined</code>、<code>Null</code>、<code>Boolean</code>、<code>Number</code>和<code>String</code>等五种。</p>
</li>
<li><p><code>Undefined</code>类型和<code>Null</code>类型的都只有一个值，即<code>undefined</code>和<code>null</code>；<code>Boolean</code>类型有两个值：<code>true</code>和<code>false</code>；<code>Number</code>类型的值有很多很多；<code>String</code>类型的值理论上有无数个。</p>
</li>
<li><p>所有对象都有<code>valueOf()</code>和<code>toString()</code>方法，它们继承自<code>Object</code>，当然也可能被子类重写</p>
</li>
<li><p><code>undefined == null</code>，结果是<code>true</code>。且它俩与所有其他值比较的结果都是<code>false</code>。</p>
</li>
<li><p><code>String == Boolean</code>，需要两个操作数同时转为<code>Number</code>。</p>
</li>
<li><p><code>String/Boolean == Number</code>，需要<code>String/Boolean</code>转为<code>Number</code>。</p>
</li>
<li><p><code>Object == Primitive</code>，需要<code>Object</code>转为<code>Primitive</code>(具体通过<code>valueOf</code>和<code>toString</code>方法)</p>
</li>
</ul>
<h3 id="第三课时"><a href="#第三课时" class="headerlink" title="第三课时"></a>第三课时</h3><hr>
<h4 id="上节回顾："><a href="#上节回顾：" class="headerlink" title="上节回顾："></a>上节回顾：</h4><ul>
<li><p>1、<code>window</code>作用域</p>
<ul>
<li>只要在<code>script</code>标签中定义的变量，默认就在<code>window</code>的作用域之下</li>
<li>默认就是<code>window</code>这个对象里面写代码</li>
</ul>
</li>
<li><p>2、数据类型</p>
<ul>
<li><code>number</code>:数字</li>
<li><code>string</code>:字符类型，必须用引号引起来</li>
<li><code>boolean</code>:布尔类型  <code>true</code> <code>false</code></li>
<li><code>null</code>:变量引用了一块堆中一个空的空间</li>
<li><code>object</code>:引用对象类型（存在于堆里面）</li>
<li><code>array</code>:数组类型</li>
<li><code>function</code>:函数数据类型</li>
</ul>
</li>
<li><p><strong>对象数据类型：</strong> <code>object</code>,<code>array</code>,<code>function</code></p>
</li>
<li><p>3、<code>javascript</code>脚本执行顺序</p>
<ul>
<li>定义 <code>var</code> <code>function</code></li>
<li>执行 其他所有</li>
</ul>
</li>
</ul>
<h4 id="知识点：-2"><a href="#知识点：-2" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h4 id="1、运算符"><a href="#1、运算符" class="headerlink" title="1、运算符"></a><strong>1、运算符</strong></h4><hr>
<ul>
<li><p>算术运算符(<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code>,<code>++</code>,<code>--</code>)</p>
<ul>
<li>如果引用所指的地方是<code>null</code>的话，那么在运算中就会自动变成<code>0</code></li>
<li><code>%</code>运算符 如：<code>4%5</code>取模 模是<code>4</code>  <code>7%5</code>取模 模是<code>7-5=2</code></li>
</ul>
</li>
<li><p>字符串和数字相加的情况：</p>
<ul>
<li>左右都是数字：数字相加</li>
<li>左右有一个字符串：字符串拼接</li>
<li>左右边有一个<code>null</code>:<code>null</code>看做<code>0</code></li>
<li>左右边有一个<code>undefined</code>：结果是<code>NAN</code>（<code>not is number</code>）</li>
</ul>
</li>
<li><p>赋值运算符(<code>=</code>,<code>-=</code>,<code>+=</code>,<code>*=</code>,<code>/=</code>,<code>%=</code>)</p>
</li>
<li><p>比较运算符(<code>==</code>,<code>===</code>,<code>!=</code>,<code>&gt;</code>,<code>&lt;</code>,<code>&gt;=</code>,<code>&lt;=</code>)</p>
<ul>
<li>先执行表达式计算再赋值</li>
<li><code>==</code>和<code>!=</code>在比较之前首先让双方的值做隐士类型转换，<code>===</code>不转换</li>
</ul>
</li>
<li><p>逻辑运算符(<code>||</code>,<code>&amp;&amp;</code>,<code>!</code>)</p>
<ul>
<li><code>||</code> 在js中和PHP中是不一样的 js中返回逻辑或的左边或右边的一个结果 PHP返回<code>||</code>或出来以后的结果即：<code>true</code> <code>false</code></li>
<li>特殊性（注意）—一定要记住（这个特性和其他编程语言不一样）：在<code>js</code>里返回不是布尔值</li>
<li><code>||</code> 短路运算 第一个条件为真 后面不执行</li>
<li><code>&amp;&amp;</code>把表达式最后一个值返回（注意这里）</li>
</ul>
</li>
</ul>
<h5 id="条件运符-表达式1-表达式2-表达式3-三元运算符"><a href="#条件运符-表达式1-表达式2-表达式3-三元运算符" class="headerlink" title="条件运符(表达式1?表达式2:表达式3)三元运算符"></a><strong>条件运符(<code>表达式1?表达式2:表达式3</code>)三元运算符</strong></h5><hr>
<ul>
<li><code>表达式1?表达式2:表达式3</code> 表达式1为真 返回表达式2 否则返回表达式3</li>
<li>三元运算符 可以多层次嵌套使用</li>
</ul>
<h4 id="2、在js中-有四种被认为是非："><a href="#2、在js中-有四种被认为是非：" class="headerlink" title="2、在js中 有四种被认为是非："></a><strong>2、在js中 有四种被认为是<code>非</code></strong>：</h4><hr>
<ul>
<li><code>undefined</code></li>
<li><code>null</code></li>
<li><code>false</code></li>
<li><code>0</code></li>
</ul>
<ul>
<li>例子：<code>var age = prompt(&quot;温馨提示：&quot;,&quot;请输入您的年龄&quot;)||0</code></li>
<li>当点击取消的时候，如果出现<code>undefined</code> <code>null</code>  <code>fasle</code>  <code>0</code> 表示非的逻辑 那么<code>||</code>就会过滤，取右边的值<code>0</code></li>
</ul>
<h3 id="第四课时"><a href="#第四课时" class="headerlink" title="第四课时"></a>第四课时</h3><hr>
<h4 id="上节回顾：-1"><a href="#上节回顾：-1" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li><p>1、运算符</p>
<ul>
<li>算术运算符(<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code>,<code>++</code>,<code>--</code>)</li>
<li>如果<code>+</code>号左边和右边有一边是字符串类型的数据的话，这个时候就变成字符串拼接</li>
<li><code>var str = &quot;你好&quot;+123;</code>//你好123</li>
<li><code>var count = 2;</code></li>
<li><code>var str1 = &quot;你叫了我第&quot;-count+&quot;次&quot;;</code>//你叫了我第2次</li>
<li>如果引用所指的地方是<code>null</code>的话，那么在运算中就会自动变成0</li>
</ul>
</li>
<li><p>2、赋值运算符<em>*(<code>=</code>,<code>-=</code>,<code>+=</code>,`</em>=<code>,</code>/=<code>,</code>%=`)</p>
</li>
<li><p>3、 比较运算符(<code>==,===,!=,&gt;,&lt;,&gt;=,&lt;=</code>)</p>
<ul>
<li>先执行表达式计算再赋值</li>
<li><code>==</code>和<code>!=</code>在比较之前首先让双方的值做隐士类型转换，<code>===</code>不转换</li>
</ul>
</li>
<li>4、逻辑运算符(<code>||,&amp;&amp;,!</code>)</li>
<li>5、条件运算符(<code>1&gt;2?3:4</code>)</li>
</ul>
<h4 id="知识点：-3"><a href="#知识点：-3" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h5 id="1、console-log调试程序"><a href="#1、console-log调试程序" class="headerlink" title="1、console.log调试程序"></a><strong>1、<code>console.log</code>调试程序</strong></h5><hr>
<ul>
<li>开发中大量使用这个 而不用<code>alert</code></li>
</ul>
<h5 id="2、条件结构"><a href="#2、条件结构" class="headerlink" title="2、条件结构"></a><strong>2、条件结构</strong></h5><hr>
<ul>
<li><code>if</code></li>
</ul>
<h6 id="javascript中if语句优化写法"><a href="#javascript中if语句优化写法" class="headerlink" title="javascript中if语句优化写法"></a><code>javascript</code>中<code>if</code>语句优化写法</h6><ul>
<li>使用常见的三元操作符</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (foo) bar(); <span class="keyword">else</span> baz(); ==&gt; foo?bar():baz();</div><div class="line"><span class="keyword">if</span> (!foo) bar(); <span class="keyword">else</span> baz(); ==&gt; foo?baz():bar();</div><div class="line"><span class="keyword">if</span> (foo) <span class="keyword">return</span> bar(); <span class="keyword">else</span> <span class="keyword">return</span> baz(); ==&gt; <span class="keyword">return</span> foo?bar():baz();</div></pre></td></tr></table></figure>
<ul>
<li>使用<code>and(&amp;&amp;)</code>和<code>or(||)</code>运算符</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (foo) bar(); ==&gt; foo&amp;&amp;bar();</div><div class="line"><span class="keyword">if</span> (!foo) bar(); ==&gt; foo||bar();</div></pre></td></tr></table></figure>
<ul>
<li><code>if...else</code></li>
<li><code>if...else if...else</code></li>
<li>当通过判断返回某个值的时候，优先使用三元表达式</li>
<li>当通过判断执行<code>N</code>段逻辑代码的时候，只能用条件结构</li>
</ul>
<h3 id="第五课时"><a href="#第五课时" class="headerlink" title="第五课时"></a>第五课时</h3><hr>
<h4 id="上节回顾：-2"><a href="#上节回顾：-2" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li>1、<code>console.log</code>调试程序</li>
<li>2、条件结构<br>  <code>if</code><br>  <code>if...else</code><br>  <code>if...else if...else</code><ul>
<li>当通过判断返回某个值的时候，优先使用三元表达式</li>
<li>当通过判断执行<code>N</code>段逻辑代码的时候，只能用条件结构</li>
</ul>
</li>
</ul>
<h4 id="知识点：-4"><a href="#知识点：-4" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h5 id="1、switch"><a href="#1、switch" class="headerlink" title="1、switch"></a><strong>1、<code>switch</code></strong></h5><hr>
<ul>
<li><p><code>switch case break default</code> 条件   判断 退出  默认</p>
<ul>
<li>a.只要匹配上一个<code>case</code>，那么它下面的所有的<code>case</code>都会执行包括<code>default</code></li>
<li>b.<code>break</code>的意思跳出当前结构</li>
</ul>
</li>
</ul>
<h5 id="2、for"><a href="#2、for" class="headerlink" title="2、for"></a><strong>2、<code>for</code></strong></h5><hr>
<ul>
<li>循环有三个要素<ul>
<li>a.循环变量</li>
<li>b.判断（循环体）</li>
<li>c.改变循环变量</li>
<li>d.<code>continue</code>的意思结束本次循环进入下次循环</li>
</ul>
</li>
<li><code>continue</code> 结束本次循环，继续下一次循环  当前这次循环不做 直接做下面的</li>
<li><code>break</code> 结束后面的循环不做了</li>
</ul>
<h3 id="第六课时"><a href="#第六课时" class="headerlink" title="第六课时"></a>第六课时</h3><hr>
<h4 id="上节回顾：-3"><a href="#上节回顾：-3" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<p>1、<code>switch</code></p>
<ul>
<li><code>switch case break default</code> 条件   判断 退出  默认<ul>
<li>a.只要匹配上一个<code>case</code>，那么它下面的所有的<code>case</code>都会执行包括<code>default</code></li>
<li>b.<code>break</code>的意思跳出当前结构</li>
</ul>
</li>
</ul>
<p>2、<code>for</code></p>
<ul>
<li>循环有三个要素<ul>
<li>a.循环变量</li>
<li>b.判断条件（循环体）</li>
<li>c.改变循环变量</li>
<li>d.<code>continue</code>的意思结束本次循环进入下次循环</li>
</ul>
</li>
</ul>
<hr>
<h4 id="知识点：-5"><a href="#知识点：-5" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h4 id="1、while-do-while-没有谁好谁坏-只有适应场景不同"><a href="#1、while-do-while-没有谁好谁坏-只有适应场景不同" class="headerlink" title="1、while/do...while 没有谁好谁坏 只有适应场景不同"></a>1、<code>while/do...while</code> 没有谁好谁坏 只有适应场景不同</h4><hr>
<ul>
<li>比如：先吃饭 在买单 <code>do..while</code> 用户体验高 有风险  扫雷游戏也是先体验 在问是否退出 提高体验</li>
<li>比如：先买单 在吃饭 <code>while</code> 用户体验不高</li>
<li>一般情况下面，如果条件判断是<code>数字的</code>比较<code>==&lt;&gt;</code>，<code>for</code>循环优先.</li>
<li>如果是<code>非数值相关的</code>比较循环，<code>while</code>优先</li>
</ul>
<h4 id="2、代码内存解析"><a href="#2、代码内存解析" class="headerlink" title="2、代码内存解析"></a>2、代码内存解析</h4><hr>
<h5 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a><strong>闭包</strong></h5><hr>
<ul>
<li>a.程序永远是先定义后执行</li>
<li>b.执行永远从上到下</li>
<li>c.函数定义的话在堆（只是一个地址而已）</li>
<li>d.函数调用的时候，就会有自己的堆和栈（<code>闭包</code>）</li>
</ul>
<h5 id="闭包-作用域"><a href="#闭包-作用域" class="headerlink" title="闭包 作用域"></a><strong>闭包 作用域</strong></h5><hr>
<ul>
<li>记住：先定义<code>var</code>  <code>function</code>  在从上往下执行</li>
<li>定义定义在自己的栈里面 执行在自己的堆里面</li>
<li>运行在运行的环境中</li>
<li>函数每调用前  只是一个地址</li>
<li>只要调用一次函数就会动态开辟一块内存 创建一个封闭的空间 在自己的封闭的空间的栈中定义<code>var</code>在执行</li>
<li>函数执行完 里面的东西全部销毁</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//alert(x);//9:执行弹出x,结果x没定义,错误.</span></div><div class="line">alert(i);<span class="comment">//9:执行弹出i,然而i之前已经定义,只不过没地址,因此是undefiend</span></div><div class="line"><span class="keyword">var</span> i = <span class="number">10</span>;<span class="comment">//1:var i;    10:把常量池中10的地址赋给栈中的i</span></div><div class="line"><span class="keyword">var</span> j = <span class="string">"你好"</span>;<span class="comment">//2:var j;   11:把常量池中 你好 的地址复给栈中的j</span></div><div class="line"><span class="keyword">var</span> k = z = <span class="literal">null</span>;<span class="comment">//3:var k,z;  12:把堆中null的地址赋值给z和k</span></div><div class="line"><span class="keyword">var</span> m = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//4:var m;   5:function匿名函数  13:把匿名函数在堆中的地址赋给栈中的m</span></div><div class="line">    alert(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> b = <span class="built_in">document</span>.body;<span class="comment">//6:var b;    14:把堆中document.body对象的地址赋给栈中的b</span></div><div class="line"><span class="keyword">var</span> f = <span class="literal">true</span>;<span class="comment">//7:var f; 15:把常量池中true的地址赋给栈中的变量f</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>)</span>&#123;<span class="comment">//8:function m;</span></div><div class="line">    alert(<span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    c = <span class="number">50</span>;<span class="comment">//在局部变量中找不到定义的c 沿着作用域链找到了全局变量的c</span></div><div class="line">    alert(<span class="string">'哈哈哈'</span>);</div><div class="line">    <span class="comment">//var c;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> c = <span class="number">150</span>; <span class="comment">// 函数m()还未执行到 还没被销毁 此时全局c的值c=50</span></div><div class="line">m();</div><div class="line"><span class="keyword">var</span> c = <span class="number">20</span>;<span class="comment">//到这里一步 m()已经执行完了 函数已经销毁了  这里的c还是20</span></div><div class="line">alert(c);<span class="comment">//20</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    c = <span class="number">50</span>;<span class="comment">//在局部变量中找不到定义的c 沿着作用域链找到了全局变量的c</span></div><div class="line">    alert(<span class="string">'哈哈哈'</span>);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">inner</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        c = <span class="number">30</span>;</div><div class="line">        alert(<span class="string">'嘻嘻'</span>);</div><div class="line">    &#125;</div><div class="line">    inner();<span class="comment">//c在函数内部找不到定义 所以沿着作用域链找到了全局的c</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> c = <span class="number">20</span>;<span class="comment">//到这里一步 m()还没执行 函数没被销毁  这里的c是30</span></div><div class="line">m();</div><div class="line"></div><div class="line">alert(c);<span class="comment">//30</span></div></pre></td></tr></table></figure>
<h4 id="4、object对象"><a href="#4、object对象" class="headerlink" title="4、object对象"></a>4、object对象</h4><hr>
<h4 id="5、面向对象的程序设计"><a href="#5、面向对象的程序设计" class="headerlink" title="5、面向对象的程序设计"></a>5、面向对象的程序设计</h4><hr>
<ul>
<li>a.<code>function</code>构造器</li>
<li>b.<code>prototype</code>原型</li>
<li>c.<code>foreach</code></li>
<li>c.作用域</li>
<li>d.继承</li>
</ul>
<h4 id="一些内存图示"><a href="#一些内存图示" class="headerlink" title="一些内存图示"></a>一些内存图示</h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-d7b1dc1194558ac0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="闭包示例1"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-32121bca4ab77dba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="闭包示例2"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f8c6735fdc8d7ee0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="闭包1"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-54d5b8e92e0266af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="闭包2"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-0d7c71a08e5c3dd5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="闭包3"></p>
<hr>
<h4 id="原型链的几张图解"><a href="#原型链的几张图解" class="headerlink" title="原型链的几张图解"></a>原型链的几张图解</h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f6fab5bf39d4927a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="原型链图解"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-960b48ae2a258f3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示00-new Object"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-46a363299f4cb52d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示01-函数Foo声明"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-5c2c02e45b6a34bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示-对象继承模式-01-浅拷贝"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-21688edeab3bb10d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示02-new Foo()"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-fc562b41d866cae5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示02-1-new 原理"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f53b3e2d9833f545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示03-Foo.prototype"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-ccbf4ddf8ea86e17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示-对象继承模式-03-基于对象的原型继承"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-724c8ddd463e8497.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示05-继承函数示例"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-b006171464fb7c9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示06-继承prototype模式"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-57f3858765368446.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示07-继承prototype模式改进"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-fc1f9e36ede219f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示08-继承prototype直接继承"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-55110b7283224dde.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示08-继承prototype空对象中介"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-a45122592360a214.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示09-继承prototype空对象中介封装expend"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-b832f7372de9dc35.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js原型链演示10-构造器拷贝继承"></p>
<ul>
<li>扩展阅读<ul>
<li><a href="https://zhuanlan.zhihu.com/p/22189387" target="_blank" rel="external">Javascript的原型链图详解</a></li>
</ul>
</li>
</ul>
<h3 id="第七课时"><a href="#第七课时" class="headerlink" title="第七课时"></a>第七课时</h3><hr>
<h4 id="上节回顾：-4"><a href="#上节回顾：-4" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li>1.<code>switch</code></li>
<li><p>2.<code>while/do...while</code></p>
<ul>
<li>一般情况下面，如果条件判断是数字的比较<code>==&lt;&gt;</code>，<code>for</code>循环优先.</li>
<li>如果是非数值相关的比较循环，<code>while</code>优先</li>
</ul>
</li>
<li><p>3.<code>function</code>函数</p>
</li>
<li>4.代码内存解析<ul>
<li><strong>闭包</strong><ul>
<li>a.程序永远是先定义后执行</li>
<li>b.执行永远从上之下</li>
<li>c.函数定义的话在堆（只是一个地址而已）</li>
<li>d.函数调用的时候，就会有自己的堆和栈（闭包）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="知识点：-6"><a href="#知识点：-6" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h4 id="1、object对象"><a href="#1、object对象" class="headerlink" title="1、object对象"></a><strong>1、object对象</strong></h4><hr>
<ul>
<li><code>new</code>关键字代表的是新开辟一块内存空间</li>
<li><p>没有被引用的内存空间，会在适当的时候被销毁</p>
<ul>
<li><p>两句代码含义等同</p>
<ul>
<li><code>var person = new Object()</code>;</li>
<li><code>var person = {};</code></li>
</ul>
</li>
</ul>
</li>
<li><p>访问对象的属性除了用 对象引用<code>.属性</code> <code>key</code>以外，还可以使用对象引用<code>[属性key]</code></p>
</li>
</ul>
<h5 id="new-原理详细解析"><a href="#new-原理详细解析" class="headerlink" title="new 原理详细解析"></a>new 原理详细解析</h5><hr>
<ul>
<li>无论什么时候，只要创建一个新函数，就会根据一组特定的规则为该函数创建一个<code>prototype</code>属性，这个属性指向函数的原型对象。</li>
<li>在默认情况下，所有原型对象都会自动获得一个<code>constructor</code>（构造函数）属性，这个属性包含一个指向<code>prototype</code>属性所在函数的指针（就是指向新创建的函数）。</li>
<li>通过这个构造函数（原型对象的构造函数），可以继续为原型对象添加其他属性和方法。</li>
<li>当调用构造函数创建一个新实例后，该实例的内部将包含一个指针（内部属性），指向构造函数的原型对象。<code>ECMA-262</code>第5版管这个指针叫 <code>[[Prototype]]</code>。脚本中没有标准的方式访问<code>[[Prototype]]</code>，但<code>Firefox</code>、<code>Safari</code>和<code>Chrome</code>在每个对象上都支持一个属性<code>__proto__</code>；而在其他实现中，这个属性对脚本是完全不可见的。不过，要明确的真正重要的一点就是，这个连接存在于实例和构造函数的原型对象之间，而不是存在于实例和构造函数之间</li>
</ul>
<h5 id="new创建对象的步骤"><a href="#new创建对象的步骤" class="headerlink" title="new创建对象的步骤"></a>new创建对象的步骤</h5><hr>
<ul>
<li>创建一个新的对象</li>
<li>将构造函数的作用域赋给新对象</li>
<li>执行构造函数的代码，为这个新对象添加属性</li>
<li>返回新对象</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">    <span class="keyword">this</span>.say = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">P</span>) </span>&#123;</div><div class="line">    <span class="comment">// 创建一个新对象</span></div><div class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line">    <span class="comment">// 获取传递给Person函数的参数</span></div><div class="line">    <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>);</div><div class="line">    <span class="comment">// 新对象的__proto__属性指向Person的原型对象</span></div><div class="line">    o.__proto__ = P.prototype;</div><div class="line">    <span class="comment">// Person的原型对象的constructor指向Person</span></div><div class="line">    P.prototype.constructor = P;</div><div class="line">    <span class="comment">// 把Person构造函数的作用域赋给新对象</span></div><div class="line">    <span class="comment">// 给这个新对象添加属性（name,age,say）</span></div><div class="line">    P.apply(o, args);</div><div class="line">    <span class="comment">// 返回这个新对象</span></div><div class="line">    <span class="keyword">return</span> o;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> p = createPerson(Person, <span class="string">'wang'</span>, <span class="number">35</span>);</div></pre></td></tr></table></figure>
<h4 id="2、面向对象的程序设计"><a href="#2、面向对象的程序设计" class="headerlink" title="2、面向对象的程序设计"></a><strong>2、面向对象的程序设计</strong></h4><hr>
<ul>
<li><p><strong><code>function</code>构造器</strong></p>
<ul>
<li><strong>共同点:</strong><ul>
<li>动态创建一块内存空间，闭包</li>
</ul>
</li>
<li><strong>不同点:</strong><ul>
<li>函数调用是没有办法拿到空间的地址的，而且这块地址是一块临时地址，执行完函数之后，就会销毁</li>
<li><code>new</code>开辟内存空间，把这块空间的地址返回，这块空间就有可能长期的被引用</li>
</ul>
</li>
</ul>
</li>
<li><strong><code>prototype</code>原型</strong><ul>
<li>通过原型使通过同样一个构造器所<code>new（创建）</code>出来的对象具有相同的属性和行为</li>
<li><code>prototype</code>本质就是一个对象</li>
</ul>
</li>
<li><code>foreach</code></li>
<li><code>this</code> 指代当前创建的这块内存 <code>this.name=name</code> 指代当前内存中的这个<code>name</code>属性 接收外界传过来的值</li>
<li><code>继承</code></li>
</ul>
<h5 id="多种构造函数"><a href="#多种构造函数" class="headerlink" title="多种构造函数"></a>多种构造函数</h5><hr>
<h6 id="传统的创建对象"><a href="#传统的创建对象" class="headerlink" title="传统的创建对象"></a><strong>传统的创建对象</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line"></div><div class="line">person.name = “lancer”;</div><div class="line"></div><div class="line">person.age = <span class="number">24</span>;</div><div class="line"></div><div class="line">person.job = “UI”;</div><div class="line"></div><div class="line">person.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(<span class="keyword">this</span>.name);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">person.sayName();</div></pre></td></tr></table></figure>
<h6 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a><strong>工厂模式</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">name,age,job</span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line"></div><div class="line">o.name = name;</div><div class="line"></div><div class="line">o.age = age;</div><div class="line"></div><div class="line">o.job = job;</div><div class="line"></div><div class="line">o.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(o.name);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> o;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = createPerson(“lancer”,<span class="number">24</span>,”UI”);</div><div class="line"></div><div class="line">person1.sayName();</div></pre></td></tr></table></figure>
<h6 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a><strong>构造函数</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.age = age;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.job =job;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(<span class="keyword">this</span>.name)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = createPerson(“lancer”,<span class="number">24</span>,”UI”);</div><div class="line"></div><div class="line">person1.sayName();</div></pre></td></tr></table></figure>
<h6 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a><strong>原型模式</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Person.prototype.name =”lancer”;</div><div class="line"></div><div class="line">Person.prototype.age =<span class="number">24</span>;</div><div class="line"></div><div class="line">Person.prototype.job = “UI”;</div><div class="line"></div><div class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(<span class="keyword">this</span>.name)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</div><div class="line"></div><div class="line">person1.sayName();</div><div class="line"></div><div class="line"><span class="keyword">var</span> person2 = <span class="keyword">new</span> Person();</div><div class="line"></div><div class="line">person2.name =”lara”</div><div class="line"></div><div class="line">person2.sayName();</div></pre></td></tr></table></figure>
<h6 id="简单原型模式"><a href="#简单原型模式" class="headerlink" title="简单原型模式"></a><strong>简单原型模式</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Person.prototype = &#123;</div><div class="line"></div><div class="line"><span class="attr">name</span> : “lancer”,</div><div class="line"></div><div class="line"><span class="attr">age</span> : <span class="number">24</span>,</div><div class="line"></div><div class="line"><span class="attr">job</span> : “UI”,</div><div class="line"></div><div class="line"><span class="attr">sayName</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(<span class="keyword">this</span>.name)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();</div><div class="line"></div><div class="line">person1.sayName();</div></pre></td></tr></table></figure>
<h6 id="构造函数和原型模式"><a href="#构造函数和原型模式" class="headerlink" title="构造函数和原型模式"></a><strong>构造函数和原型模式</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.age = age;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.job =job;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Person.prototype = &#123;</div><div class="line"></div><div class="line"><span class="attr">constructor</span> :Person,</div><div class="line"></div><div class="line"><span class="attr">sayName</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(<span class="keyword">this</span>.name)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person(“lancer”,”<span class="number">24</span>″,”UI”);</div><div class="line"></div><div class="line">person1.sayName();</div></pre></td></tr></table></figure>
<h6 id="动态原型模式"><a href="#动态原型模式" class="headerlink" title="动态原型模式"></a><strong>动态原型模式</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,job</span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.age = age;</div><div class="line"></div><div class="line"><span class="keyword">this</span>.job =job;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span>.sayName !=”<span class="function"><span class="keyword">function</span>”)</span>&#123;</div><div class="line"></div><div class="line">Person.prototype = &#123;</div><div class="line"></div><div class="line"><span class="attr">constructor</span> :Person,</div><div class="line"></div><div class="line"><span class="attr">sayName</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(<span class="keyword">this</span>.name)</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person(“lancer”,”<span class="number">24</span>″,”UI”);</div><div class="line"></div><div class="line">person1.sayName();</div></pre></td></tr></table></figure>
<h6 id="稳妥构造函数"><a href="#稳妥构造函数" class="headerlink" title="稳妥构造函数"></a><strong>稳妥构造函数</strong></h6><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> Person = <span class="function"><span class="keyword">function</span>(<span class="params">name,age,job</span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">var</span> O = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line"></div><div class="line">O.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">alert(name);</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">return</span> O</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = Person(“lancer”,<span class="number">24</span>,”UI”);</div><div class="line"></div><div class="line">person1.sayName();</div></pre></td></tr></table></figure>
<h4 id="其他："><a href="#其他：" class="headerlink" title="其他："></a><strong>其他：</strong></h4><hr>
<ul>
<li>函数调用后一定有返回值，没有返回值就是<code>undefined</code></li>
</ul>
<h4 id="一些内存图示-1"><a href="#一些内存图示-1" class="headerlink" title="一些内存图示"></a>一些内存图示</h4><hr>
<p><img src="https://github.com/poetries/TZ-Front-End-Note/raw/master/JS-Basic-star/images/DOM7.png" alt=""></p>
<h3 id="第八课时"><a href="#第八课时" class="headerlink" title="第八课时"></a>第八课时</h3><hr>
<h4 id="上节回顾：-5"><a href="#上节回顾：-5" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<h4 id="1-object对象"><a href="#1-object对象" class="headerlink" title="1.object对象"></a><strong>1.object对象</strong></h4><hr>
<ul>
<li><code>new</code>关键字代表的是新开辟一块内存空间</li>
<li>没有被引用的内存空间，会在适当的时候被销毁<ul>
<li>两句代码含义等同</li>
<li><code>var person = new Object();</code></li>
<li><code>var person = {};</code></li>
<li>访问对象的属性除了用 对象引用属性<code>key</code>以外，还可以使用对象引用<code>[属性key]</code></li>
</ul>
</li>
</ul>
<h4 id="2-面向对象的程序设计"><a href="#2-面向对象的程序设计" class="headerlink" title="2.面向对象的程序设计"></a><strong>2.面向对象的程序设计</strong></h4><hr>
<ul>
<li>a.<code>function</code>构造器<ul>
<li>共同点:<ul>
<li>动态创建一块内存空间，闭包</li>
</ul>
</li>
<li>不同点：<ul>
<li>函数调用是没有办法拿到空间的地址的，而且这块地址是一块临时地址，执行完函数之后，就会销毁</li>
<li><code>new</code>开辟内存空间，把这块空间的地址返回，这块空间就有可能长期的被引用</li>
</ul>
</li>
</ul>
</li>
<li>b.<code>prototype</code>原型<ul>
<li>通过原型使通过同样一个构造器所<code>new</code>（创建）出来的对象具有相同的属性和行为</li>
<li><code>prototype</code>本质就是一个对象</li>
</ul>
</li>
<li>c.<code>foreach</code></li>
<li>c.<code>this</code></li>
<li>d.继承</li>
</ul>
<h4 id="知识点：-7"><a href="#知识点：-7" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h4 id="1-prototype内存解析"><a href="#1-prototype内存解析" class="headerlink" title="1.prototype内存解析"></a><strong>1.prototype内存解析</strong></h4><hr>
<ul>
<li><code>prototype</code>是原型，是一块所有对应构造器创建的对象都共享的内存空间</li>
<li>在面向对象设计程序的时候，属性应该是对应的空间的，而功能应该是<code>prototype</code>公共空间的</li>
</ul>
<h4 id="2-通过prototype扩展功能"><a href="#2-通过prototype扩展功能" class="headerlink" title="2.通过prototype扩展功能"></a><strong>2.通过prototype扩展功能</strong></h4><hr>
<ul>
<li>所有的构造器都是继承于<code>Object</code>构造器的，因此只要<code>Object</code>的原型里有的功能，所有的对象都有</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//多个对象的构造 以及 多个对象之间如何建立联系</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name,age,sex</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">    <span class="keyword">this</span>.sex = sex;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Bingqilin</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Game</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Hour</span>(<span class="params">time</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.time = time;</div><div class="line">&#125;</div><div class="line">Student.prototype = &#123;</div><div class="line"></div><div class="line">    <span class="attr">eat</span>:<span class="function"><span class="keyword">function</span>(<span class="params">b</span>)</span>&#123;</div><div class="line">        alert(<span class="keyword">this</span>.name+<span class="string">"喜欢吃"</span>+b.name);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">mess</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        alert(<span class="keyword">this</span>.name+<span class="string">"的信息："</span>+<span class="keyword">this</span>.age+<span class="string">','</span>+<span class="keyword">this</span>.sex);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">sleep</span>:<span class="function"><span class="keyword">function</span>(<span class="params">h</span>)</span>&#123;</div><div class="line">        alert(<span class="keyword">this</span>.name+<span class="string">"每天睡,"</span>+h.time+<span class="string">'小时'</span>);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">work</span>:<span class="function"><span class="keyword">function</span>(<span class="params">h</span>)</span>&#123;</div><div class="line">        alert(<span class="keyword">this</span>.name+<span class="string">"每天工作,"</span>+h.time+<span class="string">'小时'</span>);</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">like</span>:<span class="function"><span class="keyword">function</span>(<span class="params">g</span>)</span>&#123;</div><div class="line">        alert(<span class="keyword">this</span>.name+<span class="string">"喜欢打,"</span>+g.name);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> Student(<span class="string">"小明"</span>,<span class="number">22</span>,<span class="string">"男"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> Bingqilin(<span class="string">"黑色的冰淇淋"</span>);</div><div class="line">s.eat(b);<span class="comment">//小明喜欢吃黑色的冰淇淋</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> g = <span class="keyword">new</span> Game(<span class="string">"英雄联盟"</span>);</div><div class="line">s.like(g);<span class="comment">//把对象的地址发送给like的参数即可访问构造函数Game的name属性</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> h = <span class="keyword">new</span> Hour(<span class="number">10</span>);</div><div class="line">s.sleep(h);</div><div class="line">s.work(h);</div></pre></td></tr></table></figure>
<h4 id="一些内存图示-2"><a href="#一些内存图示-2" class="headerlink" title="一些内存图示"></a><strong>一些内存图示</strong></h4><hr>
<p><img src="https://github.com/poetries/TZ-Front-End-Note/raw/master/JS-Basic-star/images/DOM8.png" alt=""></p>
<p><img src="https://github.com/poetries/TZ-Front-End-Note/raw/master/JS-Basic-star/images/DOM9.png" alt=""></p>
<h3 id="第九课时"><a href="#第九课时" class="headerlink" title="第九课时"></a>第九课时</h3><hr>
<h4 id="回顾："><a href="#回顾：" class="headerlink" title="回顾："></a><strong>回顾：</strong></h4><hr>
<h5 id="1、prototype内存解析"><a href="#1、prototype内存解析" class="headerlink" title="1、prototype内存解析"></a><strong>1、prototype内存解析</strong></h5><hr>
<ul>
<li><code>prototype</code>是原型，是一块所有对应构造器创建的对象都共享的内存空间</li>
<li>在面向对象设计程序的时候，属性应该是对应的空间的，而功能应该是<code>prototype</code>公共空间的</li>
</ul>
<h5 id="2、通过prototype扩展功能"><a href="#2、通过prototype扩展功能" class="headerlink" title="2、通过prototype扩展功能"></a><strong>2、通过prototype扩展功能</strong></h5><hr>
<ul>
<li>所有的构造器都是继承于<code>Object</code>构造器的，因此只要<code>Object</code>的原型里有的功能，所有的对象都有</li>
<li>构造器在定义的时候 就默认创建了一个空的原型</li>
</ul>
<h5 id="3、封装"><a href="#3、封装" class="headerlink" title="3、封装"></a><strong>3、封装</strong></h5><hr>
<ul>
<li>1：找对象  小头爸爸  大头儿子  饭</li>
<li>2：抽象（类，构造器）</li>
<li><p>3：创建对象并且建立关系（操作对象）</p>
</li>
<li><p>面向对象例子</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//小头爸爸牵着大头儿子的手去吃饭，吃完饭之后，</span></div><div class="line"></div><div class="line"><span class="comment">//小头爸爸背着大头儿子回家，回家后儿子学习，老爸工作，工作学习完后</span></div><div class="line"></div><div class="line"><span class="comment">//儿子看动画片</span></div><div class="line"></div><div class="line"><span class="comment">//围裙妈妈带儿子睡觉</span></div><div class="line"></div><div class="line"><span class="comment">//张三和张四</span></div><div class="line"></div><div class="line"><span class="comment">//分析对象 小头爸爸 大头儿子 饭 以及功能</span></div><div class="line"></div><div class="line"><span class="comment">//设计构造器（类）</span></div><div class="line"></div><div class="line"><span class="comment">//创建对象以及他们之间的关联</span></div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.age = age;</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Rice</span>(<span class="params">name</span>)</span>&#123;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Person.prototype.getHand = function()&#123;//这样子写也可以 但还是用默认生成的那块空的内存对象 往里面添加属性 方法</span></div><div class="line"></div><div class="line"> <span class="comment">//不浪费内存</span></div><div class="line"></div><div class="line"><span class="comment">//&#125;</span></div><div class="line"></div><div class="line"><span class="comment">//在prototype中定义的每个对象都有这些功能</span></div><div class="line"></div><div class="line">Person.prototype = &#123;<span class="comment">//这样子写 抛弃了默认生成的那块空的内存对象 重新创建了一块新的内存对象 记住：原型的本质是对象</span></div><div class="line"></div><div class="line"> <span class="comment">//多个功能写在一起</span></div><div class="line"></div><div class="line"> getHand:<span class="function"><span class="keyword">function</span>(<span class="params">person</span>)</span>&#123;<span class="comment">//牵手</span></div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"在牵着"</span>+person.name+<span class="string">"的手...."</span>);</div><div class="line"></div><div class="line"> &#125;,</div><div class="line"></div><div class="line"> <span class="attr">eat</span>:<span class="function"><span class="keyword">function</span>(<span class="params">rice</span>)</span>&#123;</div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"在吃"</span>+rice.name);</div><div class="line"></div><div class="line"> &#125;,</div><div class="line"></div><div class="line"> <span class="comment">//需求 18岁以上才能背人</span></div><div class="line"></div><div class="line"> <span class="comment">/* //写法一 不推荐 这个满足18岁的功能是自己强加的 不是客户需求的</span></div><div class="line"></div><div class="line"> carry:function(person)&#123;//这里设计不合理 让老爸有这个功能 儿子没有这个功能</div><div class="line"></div><div class="line"> if(this.age&gt;=18)&#123;</div><div class="line"></div><div class="line"> alert(this.name+'背着'+person.name);</div><div class="line"></div><div class="line"> &#125;else&#123;</div><div class="line"></div><div class="line"> alert(this.name+",还未满18岁，背不起");</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line"> &#125;,*/</div><div class="line"></div><div class="line"> backhome:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"回家"</span>);</div><div class="line"></div><div class="line"> &#125;,</div><div class="line"></div><div class="line"> <span class="attr">study</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"正在学习"</span>);</div><div class="line"></div><div class="line"> &#125;,</div><div class="line"></div><div class="line"> <span class="attr">watchTV</span>:<span class="function"><span class="keyword">function</span>(<span class="params">jm</span>)</span>&#123;</div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"正在看"</span>+jm+<span class="string">'...'</span>);</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="string">"老爸"</span>,<span class="number">20</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person(<span class="string">"儿子"</span>,<span class="number">15</span>);</div><div class="line"></div><div class="line"><span class="comment">//p1.getHand(p2);</span></div><div class="line"></div><div class="line"><span class="comment">//p1.eat(new Rice("蛋炒饭"));</span></div><div class="line"></div><div class="line"><span class="comment">//p2.eat(new Rice("猪脚饭"));</span></div><div class="line"></div><div class="line"><span class="comment">//p1.carry(p2);//老爸背儿子</span></div><div class="line"></div><div class="line"><span class="comment">//p2.carry(p1);//让儿子背老爸 输出结果：儿子,还未满18岁，背不起</span></div><div class="line"></div><div class="line"><span class="comment">//p1.backhome();</span></div><div class="line"></div><div class="line"><span class="comment">//写法二 不推荐 100对关系 代码写很多遍</span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"></div><div class="line">//让老爸单独有背的这个功能 儿子没有这个功能</div><div class="line"></div><div class="line">p1.carry = function(person)&#123;</div><div class="line"></div><div class="line"> alert(this.name+'背着'+person.name);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">p1.carry(p2);</div><div class="line"></div><div class="line">*/</div><div class="line"></div><div class="line"><span class="comment">//-------通过继承解决这个 让老爸单独有背的这个功能 儿子没有这个功能 可以应对多功能 多需求</span></div><div class="line"></div><div class="line"><span class="comment">//功能函数</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.prototype.extends = <span class="function"><span class="keyword">function</span>(<span class="params">func,actions</span>)</span>&#123;<span class="comment">//让所有的子孙 构造器都有这个功能</span></div><div class="line"></div><div class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> func.prototype)&#123;<span class="comment">//传进一个func构造器 迭代构造器中的功能 把构造器中的功能全都映射过来 复制一份</span></div><div class="line"></div><div class="line"> <span class="keyword">this</span>.prototype[prop] = func.prototype[prop];<span class="comment">//迭代原型中的所有的功能到 当前里面去</span></div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> actions)&#123;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.prototype[prop] = actions[prop];</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">name</span>)</span>&#123;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Father.extends(Person,&#123;</div><div class="line"></div><div class="line"> <span class="attr">carry</span>:<span class="function"><span class="keyword">function</span>(<span class="params">person</span>)</span>&#123;</div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">'背着'</span>+person.name);</div><div class="line"></div><div class="line"> &#125;,</div><div class="line"></div><div class="line"> <span class="attr">work</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"正在工作"</span>);</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//扩展</span></div><div class="line"></div><div class="line"><span class="comment">//设计程序有个原则：不修改只增加</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Children</span>(<span class="params">name</span>)</span>&#123;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Children.extends(Person);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Mother</span>(<span class="params">name</span>)</span>&#123;</div><div class="line"></div><div class="line"> <span class="keyword">this</span>.name = name;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Mother.extends(Person,&#123;</div><div class="line"></div><div class="line"> <span class="attr">scoop</span>:<span class="function"><span class="keyword">function</span>(<span class="params">person</span>)</span>&#123;</div><div class="line"></div><div class="line"> <span class="comment">//判断必须是children的对象才能执行这个功能</span></div><div class="line"></div><div class="line"> <span class="comment">//if()&#123;</span></div><div class="line"></div><div class="line"> alert(<span class="keyword">this</span>.name+<span class="string">"唱着摇篮曲哄"</span>+person.name+<span class="string">"睡觉"</span>);</div><div class="line"></div><div class="line"> <span class="comment">//&#125;</span></div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"></div><div class="line">Father.prototype.carry= function(person)&#123;//创建这个原型的想法是：原来Person有的功能 我都需要有 并在这些基础上加一个功能 carry</div><div class="line"></div><div class="line"> //如何建立Father基础Person的功能？写一个继承的小工具来操作</div><div class="line"></div><div class="line"> alert(this.name+'背着'+person.name);</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line">Father.prototype.work = function()&#123;</div><div class="line"></div><div class="line"> alert(this.name+"正在工作");</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">*/</div><div class="line"></div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Father(<span class="string">"老爸"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Children(<span class="string">"儿子"</span>);</div><div class="line"></div><div class="line">p1.carry(p2);<span class="comment">//只有老爸有carry这个功能</span></div><div class="line"></div><div class="line"><span class="comment">//p2.carry(p1);//error 儿子没有carry这个功能</span></div><div class="line"></div><div class="line">p2.study();<span class="comment">//儿子在学习</span></div><div class="line"></div><div class="line">p1.work();<span class="comment">//老爸在工作</span></div><div class="line"></div><div class="line">p1.watchTV(<span class="string">'看足球'</span>);</div><div class="line"></div><div class="line">p2.watchTV(<span class="string">'蜡笔小新'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> p3 = <span class="keyword">new</span> Mother(<span class="string">'围裙妈妈'</span>);</div><div class="line"></div><div class="line">p3.scoop(p2);</div></pre></td></tr></table></figure>
<h4 id="知识点：-8"><a href="#知识点：-8" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<ul>
<li>1.继承</li>
<li>2.面向对象程序设计案例（猜拳）</li>
</ul>
<h4 id="一些内存图示-3"><a href="#一些内存图示-3" class="headerlink" title="一些内存图示"></a><strong>一些内存图示</strong></h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-9d8603509767ea7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-44bd5c0bf459b4d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-17266c52ca52c896.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-1bf8c506d61084c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="第十课时"><a href="#第十课时" class="headerlink" title="第十课时"></a>第十课时</h3><hr>
<h4 id="上节回顾：-6"><a href="#上节回顾：-6" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<h4 id="1-继承"><a href="#1-继承" class="headerlink" title="1.继承"></a><strong>1.继承</strong></h4><hr>
<ul>
<li>本质就是从一个<code>prototype</code>对象中把它的功能都<code>copy</code>到另一个<code>prototype</code>对象</li>
<li>继承为什么要循环</li>
</ul>
<h4 id="2-call-apply方法的使用"><a href="#2-call-apply方法的使用" class="headerlink" title="2.call apply方法的使用"></a><strong>2.call apply方法的使用</strong></h4><hr>
<ul>
<li><code>func.call（obj）</code>：调用<code>func</code>的时候，以<code>obj</code>这个对象的作用域去调用</li>
<li>改变函数在调用的时候里面闭包的作用域</li>
<li><code>call(obj,arg1,arg2,arg3)</code>;<code>call</code>第一个参数传对象，可以是<code>null</code>。参数以逗号分开进行传值，参数可以是任何类型。<br><code>apply(obj,[arg1,arg2,arg3])</code>;<code>apply</code>第一个参数传对象，参数可以是数组或者<code>arguments</code>对象</li>
</ul>
<h4 id="知识点：-9"><a href="#知识点：-9" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<h4 id="API-application-program-interface"><a href="#API-application-program-interface" class="headerlink" title="API application program interface"></a>API application program interface</h4><hr>
<ul>
<li>第一：遇到问题</li>
<li>第二：查资料或者学习  -&gt; 解决问题</li>
<li>第三：记住有这个功能</li>
<li>第四：查资料（百度）</li>
</ul>
<h4 id="常用API"><a href="#常用API" class="headerlink" title="常用API"></a>常用API</h4><hr>
<ul>
<li>1.<code>String</code></li>
<li>2.<code>Array</code></li>
<li>3.<code>Math Math.random();</code></li>
<li>4.<code>Date</code></li>
</ul>
<h5 id="日期型函数Date"><a href="#日期型函数Date" class="headerlink" title="日期型函数Date"></a>日期型函数<code>Date</code></h5><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-4c5426128f64acff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Date 对象方法"></p>
<ul>
<li><strong>声明</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//系统当前时间</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(yyyy, mm, dd, hh, mm, ss);</div><div class="line"></div><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(yyyy, mm, dd);</div><div class="line"></div><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(“monthName dd, yyyy hh:mm:ss”);</div><div class="line"></div><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(“monthName dd, yyyy”);</div><div class="line"></div><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>(epochMilliseconds);</div></pre></td></tr></table></figure>
<ul>
<li><strong>获取时间的某部份</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"></div><div class="line">myDate.getYear(); <span class="comment">//获取当前年份(2位)</span></div><div class="line"></div><div class="line">myDate.getFullYear(); <span class="comment">//获取完整的年份(4位,1970-????)</span></div><div class="line"></div><div class="line">myDate.getMonth(); <span class="comment">//获取当前月份(0-11,0代表1月)</span></div><div class="line"></div><div class="line">myDate.getDate(); <span class="comment">//获取当前日(1-31)</span></div><div class="line"></div><div class="line">myDate.getDay(); <span class="comment">//获取当前星期X(0-6,0代表星期天)</span></div><div class="line"></div><div class="line">myDate.getTime(); <span class="comment">//获取当前时间(从1970.1.1开始的毫秒数) 时间戳！！</span></div><div class="line"></div><div class="line">myDate.getHours(); <span class="comment">//获取当前小时数(0-23)</span></div><div class="line"></div><div class="line">myDate.getMinutes(); <span class="comment">//获取当前分钟数(0-59)</span></div><div class="line"></div><div class="line">myDate.getSeconds(); <span class="comment">//获取当前秒数(0-59)</span></div><div class="line"></div><div class="line">myDate.getMilliseconds(); <span class="comment">//获取当前毫秒数(0-999)</span></div><div class="line"></div><div class="line">myDate.toLocaleDateString(); <span class="comment">//获取当前日期</span></div><div class="line"></div><div class="line">myDate.toLocaleTimeString(); <span class="comment">//获取当前时间</span></div><div class="line"></div><div class="line">myDate.toLocaleString( ); <span class="comment">//获取日期与时间</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>计算之前或未来的时间</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"></div><div class="line">myDate.setDate(myDate.getDate() + <span class="number">10</span>); <span class="comment">//当前时间加10天//类似的方法都基本相同,以set开头,具体参考第2点</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>计算两个日期的偏移量</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = daysBetween(beginDate,endDate); <span class="comment">//返回天数</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> i = beginDate.getTimezoneOffset(endDate); <span class="comment">//返回分钟数</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>检查有效日期</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//checkDate() 只允许”mm-dd-yyyy”或”mm/dd/yyyy”两种格式的日期</span></div><div class="line"><span class="keyword">if</span>( checkDate(“<span class="number">2006</span><span class="number">-01</span><span class="number">-01</span>”) )&#123; &#125;</div><div class="line"></div><div class="line"><span class="comment">//正则表达式(自己写的检查 yyyy-mm-dd, yy-mm-dd, yyyy/mm/dd, yy/mm/dd 四种)</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> r = <span class="regexp">/^(\d&#123;2&#125;|\d&#123;4&#125;)[\/-]\d&#123;1,2&#125;[\/-]\d&#123;1,2&#125;$/</span>;<span class="keyword">if</span>( r.test( myString ) )&#123; &#125;</div></pre></td></tr></table></figure>
<h5 id="字符串String型函数API"><a href="#字符串String型函数API" class="headerlink" title="字符串String型函数API"></a>字符串String型函数API</h5><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-588f28213506abe1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="js下常用的字符串方法"></p>
<ul>
<li><strong>声明</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = <span class="keyword">new</span> <span class="built_in">String</span>(“Every good boy does fine.”);</div><div class="line"></div><div class="line"><span class="keyword">var</span> myString = “Every good boy does fine.”;</div></pre></td></tr></table></figure>
<ul>
<li><strong>字符串连接</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = “Every ” + “good boy ” + “does fine.”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> myString = “Every “; myString += “good boy does fine.”;</div></pre></td></tr></table></figure>
<ul>
<li><strong>截取字符串</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//截取第 6 位开始的字符</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> myString = “Every good boy does fine.”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> section = myString.substring(<span class="number">6</span>); <span class="comment">//结果: “good boy does fine.”</span></div><div class="line"></div><div class="line"><span class="comment">//截取第 0 位开始至第 10 位为止的字符</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> myString = “Every good boy does fine.”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> section = myString.substring(<span class="number">0</span>,<span class="number">10</span>); <span class="comment">//结果: “Every good”</span></div><div class="line"></div><div class="line"><span class="comment">//截取从第 11 位到倒数第 6 位为止的字符</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> myString = “Every good boy does fine.”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> section = myString.slice(<span class="number">11</span>,<span class="number">-6</span>); <span class="comment">//结果: “boy does”</span></div><div class="line"></div><div class="line"><span class="comment">//从第 6 位开始截取长度为 4 的字符</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> myString = “Every good boy does fine.”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> section = myString.substr(<span class="number">6</span>,<span class="number">4</span>); <span class="comment">//结果: “good”</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>转换大小写</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = “Hello”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> lcString = myString.toLowerCase(); <span class="comment">//结果: “hello”</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> ucString = myString.toUpperCase(); <span class="comment">//结果: “HELLO”</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>字符串比较</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> aString = “Hello!”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> bString = <span class="keyword">new</span> <span class="built_in">String</span>(“Hello!”);</div><div class="line"></div><div class="line"><span class="keyword">if</span>( aString == “Hello!” )&#123; &#125; <span class="comment">//结果: true</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>( aString == bString )&#123; &#125; <span class="comment">//结果: true</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>( aString === bString )&#123; &#125; <span class="comment">//结果: false (两个对象不同,尽管它们的值相同)</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>检索字符串</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = “hello everybody.”;</div><div class="line"></div><div class="line"><span class="comment">// 如果检索不到会返回-1,检索到的话返回在该串中的起始位置</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>( myString.indexOf(“every”) &gt; <span class="number">-1</span> )&#123; &#125; <span class="comment">//结果: true</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>查找替换字符串</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = “I is your father.”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> result = myString.replace(“is”,”am”); <span class="comment">//结果: “I am your father.”</span></div></pre></td></tr></table></figure>
<ul>
<li><p><strong>特殊字符</strong></p>
<ul>
<li><code>\b</code> : 后退符 </li>
<li><code>\t</code> : 水平制表符</li>
<li><code>\n</code> : 换行符 </li>
<li><code>\v</code> : 垂直制表符</li>
<li><code>\f</code> : 分页符 </li>
<li><code>\r</code> : 回车符</li>
<li><code>\”</code> : 双引号 </li>
<li><code>\’</code> : 单引号</li>
<li><code>\\ 反斜杆</code></li>
</ul>
</li>
</ul>
<ul>
<li><strong>将字符转换成<code>Unicode</code>编码</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = “hello”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> code = myString.charCodeAt(<span class="number">3</span>); <span class="comment">//返回”l”的Unicode编码(整型)</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> char = <span class="built_in">String</span>.fromCharCode(<span class="number">66</span>); <span class="comment">//返回Unicode为66的字符</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>将字符串转换成URL编码</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myString = “hello all”;</div><div class="line"></div><div class="line"><span class="keyword">var</span> code = <span class="built_in">encodeURI</span>(myString); <span class="comment">//结果: “hello%20all”</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = <span class="built_in">decodeURI</span>(code); <span class="comment">//结果: “hello all”</span></div><div class="line"></div><div class="line"><span class="comment">//相应的还有: encodeURIComponent() decodeURIComponent()</span></div></pre></td></tr></table></figure>
<ul>
<li>扩展阅读<ul>
<li><a href="http://blog.poetries.top/2016/08/02/javascript%20%E4%B8%8B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/" target="_blank" rel="external">JavaScript下常用的字符串</a></li>
</ul>
</li>
</ul>
<h5 id="Math对象型"><a href="#Math对象型" class="headerlink" title="Math对象型"></a>Math对象型</h5><hr>
<ul>
<li><p><code>Math.abs(num)</code> : 返回<code>num</code>的绝对值</p>
</li>
<li><p><code>Math.acos(num)</code> : 返回<code>num</code>的反余弦值</p>
</li>
<li><p><code>Math.asin(num)</code> : 返回<code>num</code>的反正弦值</p>
</li>
<li><p><code>Math.atan(num)</code> : 返回<code>num</code>的反正切值</p>
</li>
<li><p><code>Math.atan2(y,x)</code> : 返回<code>y</code>除以<code>x</code>的商的反正切值</p>
</li>
<li><p><code>Math.ceil(num)</code> : 返回大于<code>num</code>的最小整数</p>
</li>
<li><p><code>Math.cos(num)</code> : 返回<code>num</code>的余弦值</p>
</li>
<li><p><code>Math.exp(x)</code> : 返回以自然数为底,x次幂的数</p>
</li>
<li><p><code>Math.floor(num)</code> : 返回小于<code>num</code>的最大整数</p>
</li>
<li><p><code>Math.log(num)</code> : 返回<code>num</code>的自然对数</p>
</li>
<li><p><code>Math.max(num1,num2)</code> : 返回<code>num1</code>和<code>num2</code>中较大的一个</p>
</li>
<li><p><code>Math.min(num1,num2)</code> : 返回<code>num1</code>和<code>num2</code>中较小的一个</p>
</li>
<li><p><code>Math.pow(x,y)</code> : 返回<code>x</code>的<code>y</code>次方的值</p>
</li>
<li><p><code>Math.random()</code> : 返回<code>0</code>到<code>1</code>之间的一个随机数</p>
</li>
<li><p><code>Math.round(num)</code> : 返回<code>num</code>四舍五入后的值</p>
</li>
<li><p><code>Math.sin(num)</code> : 返回<code>num</code>的正弦值</p>
</li>
<li><p><code>Math.sqrt(num)</code> : 返回<code>num</code>的平方根</p>
</li>
<li><p><code>Math.tan(num)</code> : 返回<code>num</code>的正切值</p>
</li>
<li><p><code>Math.E</code> : 自然数(<code>2.718281828459045</code>)</p>
</li>
<li><p><code>Math.LN2</code> : <code>2</code>的自然对数(<code>0.6931471805599453</code>)</p>
</li>
<li><p><code>Math.LN10</code> : <code>10</code>的自然对数(<code>2.302585092994046</code>)</p>
</li>
<li><p><code>Math.LOG2E</code> : <code>log 2</code> 为底的自然数(<code>1.4426950408889634</code>)</p>
</li>
<li><p><code>Math.LOG10E</code> : <code>log 10</code> 为底的自然数(<code>0.4342944819032518</code>)</p>
</li>
<li><p><code>Math.PI</code> : <code>π(3.141592653589793)</code></p>
</li>
<li><p><code>Math.SQRT1_2</code> : <code>1/2</code>的平方根(<code>0.7071067811865476</code>)</p>
</li>
<li><p><code>Math.SQRT2</code> : <code>2</code>的平方根(<code>1.4142135623730951</code>)</p>
</li>
</ul>
<h5 id="Number型-常用的数字函数"><a href="#Number型-常用的数字函数" class="headerlink" title="Number型 常用的数字函数"></a>Number型 常用的数字函数</h5><hr>
<ul>
<li><strong>声明</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>);</div></pre></td></tr></table></figure>
<ul>
<li><strong>字符串与数字间的转换</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = <span class="number">1</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> str = i.toString(); <span class="comment">//结果: “1”</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="built_in">String</span>(i); <span class="comment">//结果: “1”</span></div><div class="line"></div><div class="line">i = <span class="built_in">parseInt</span>(str); <span class="comment">//结果: 1</span></div><div class="line"></div><div class="line">i = <span class="built_in">parseFloat</span>(str); <span class="comment">//结果: 1.0</span></div><div class="line"></div><div class="line"><span class="comment">//注意: parseInt,parseFloat会把一个类似于”32G”的字符串,强制转换成32</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>判断是否为有效的数字</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = <span class="number">123</span>; <span class="keyword">var</span> str = “string”;</div><div class="line"></div><div class="line"><span class="keyword">if</span>( <span class="keyword">typeof</span> i == “number” )&#123; &#125; <span class="comment">//true</span></div><div class="line"></div><div class="line"><span class="comment">//某些方法(如:parseInt,parseFloat)会返回一个特殊的值NaN(Not a Number)</span></div><div class="line"></div><div class="line"><span class="comment">//请注意第2点中的[注意],此方法不完全适合判断一个字符串是否是数字型!!</span></div><div class="line"></div><div class="line">i = <span class="built_in">parseInt</span>(str);</div><div class="line"></div><div class="line"><span class="keyword">if</span>( <span class="built_in">isNaN</span>(i) )&#123; &#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong>数字型比较</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//此知识与[字符串比较]相同</span></div><div class="line"></div><div class="line">- **小数转整数**</div><div class="line"></div><div class="line"><span class="keyword">var</span> f = <span class="number">1.5</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="built_in">Math</span>.round(f); <span class="comment">//结果:2 (四舍五入)</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="built_in">Math</span>.ceil(f); <span class="comment">//结果:2 (返回大于f的最小整数)</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="built_in">Math</span>.floor(f); <span class="comment">//结果:1 (返回小于f的最大整数)</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>格式化显示数字</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> i = <span class="number">3.14159</span>;</div><div class="line"></div><div class="line"><span class="comment">//格式化为两位小数的浮点数</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = i.toFixed(<span class="number">2</span>); <span class="comment">//结果: “3.14”</span></div><div class="line"></div><div class="line"><span class="comment">//格式化为五位数字的浮点数(从左到右五位数字,不够补零)</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> str = i.toPrecision(<span class="number">5</span>); <span class="comment">//结果: “3.1415”</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>X进制数字的转换</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="built_in">parseInt</span>(“<span class="number">0x1f</span>”,<span class="number">16</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="built_in">parseInt</span>(i,<span class="number">10</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> i = <span class="built_in">parseInt</span>(“<span class="number">11010011</span>”,<span class="number">2</span>);</div></pre></td></tr></table></figure>
<ul>
<li><strong>随机数</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//返回0-1之间的任意小数</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> rnd = <span class="built_in">Math</span>.random();</div><div class="line"></div><div class="line"><span class="comment">//返回0-n之间的任意整数(不包括n)</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> rnd = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * n)</div></pre></td></tr></table></figure>
<h5 id="5-Regex"><a href="#5-Regex" class="headerlink" title="5.Regex"></a>5.<code>Regex</code></h5><hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在这个最大的对象的原型上加一个extends方法 使得下面所有的原型 都有这个方法</span></div><div class="line"> <span class="comment">//这个原型的作用是通过迭代 复制传进来的构造器的所有的原型的方法</span></div><div class="line"></div><div class="line"> <span class="built_in">Object</span>.prototype.extends = <span class="function"><span class="keyword">function</span>(<span class="params">parent</span>)</span>&#123;</div><div class="line">     <span class="comment">//console.log(parent.prototype);</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> parent.prototype)&#123;</div><div class="line">        <span class="comment">//console.log(prop);//eat extends</span></div><div class="line">        <span class="keyword">this</span>.prototype[prop] = parent.prototype[prop];<span class="comment">//复制传进来的构造器的所有的原型的方法给当前正在调用这个方法的对象</span></div><div class="line">    &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line"> &#125;</div><div class="line"> Person.prototype = &#123;</div><div class="line">    <span class="attr">eat</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        alert(<span class="keyword">this</span>.name+<span class="string">"在吃饭"</span>);</div><div class="line">    &#125;</div><div class="line"> &#125;;</div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> Father.extends(Person);<span class="comment">//extends方法是最大的对象Object加的方法 所有的子孙 构造器都有这个方法</span></div><div class="line"></div><div class="line"> <span class="keyword">var</span> f = <span class="keyword">new</span> Father(<span class="string">"小头爸爸"</span>);</div><div class="line"> f.eat();</div></pre></td></tr></table></figure>
<h4 id="一些图示"><a href="#一些图示" class="headerlink" title="一些图示"></a><strong>一些图示</strong></h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-6828aabba7d2948e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f4f9ade4c089cabd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>正则表达式扩展阅读<ul>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">正则表达式30分钟入门教程</a></li>
<li><a href="http://blog.poetries.top/2016/07/09/%E6%A2%B3%E7%90%86%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/" target="_blank" rel="external">梳理常用的正则表达式</a></li>
</ul>
</li>
</ul>
<h3 id="第十一课时"><a href="#第十一课时" class="headerlink" title="第十一课时"></a>第十一课时</h3><hr>
<h4 id="上节回顾：-7"><a href="#上节回顾：-7" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li>1.<code>String</code></li>
<li>2.<code>Math</code>  <code>Math.random()</code></li>
</ul>
<h4 id="知识点：-10"><a href="#知识点：-10" class="headerlink" title="知识点："></a><strong>知识点：</strong></h4><hr>
<ul>
<li>1.<code>Date</code> 日期类</li>
<li>2.<code>Array</code></li>
<li>3.<code>Regex</code><ul>
<li>a.<code>[]</code>一个字符的范围</li>
<li>b.有顺序要求的</li>
<li>c.<code>\w==[a-zA-Z0-9_]</code>  <code>\d==[0-9]</code></li>
<li>d.<code>{count}</code>设置匹配数量比如<code>\w{5}</code></li>
<li>e.<code>//</code>的正则表达式匹配局部，<code>/^$/</code>的正则表达式是匹配全部</li>
<li>f.<code>()</code>的作用就是为了分组匹配</li>
</ul>
</li>
</ul>
<ul>
<li>简单封装一个对象案例</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span>.prototype.isEmail = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">  email = <span class="keyword">this</span>;</div><div class="line">  <span class="keyword">if</span> (email.indexOf(<span class="string">"@"</span>)!=<span class="number">-1</span>&amp;&amp;email.indexOf(<span class="string">"."</span>)!=<span class="number">-1</span>)</div><div class="line">  &#123;</div><div class="line">    <span class="keyword">if</span>(email.indexOf(<span class="string">"@"</span>)&lt;email.lastIndexOf(<span class="string">"@"</span>))&#123;</div><div class="line">      alert(<span class="string">"邮箱不合法"</span>);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">      alert(<span class="string">"邮箱合法"</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> email = <span class="string">"jingguanliuye@gmail.com"</span>;</div><div class="line">email.isEmail();</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//===============================日历练习(方法简洁 高效)======================================</span></div><div class="line"></div><div class="line"><span class="comment">//var year = parseInt(prompt("请输入日历年份："));</span></div><div class="line"><span class="comment">//var month = parseInt(prompt("请输入日历月份："))-1;</span></div><div class="line"></div><div class="line"><span class="built_in">Date</span>.prototype.printCalendar = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">var</span> year = <span class="keyword">this</span>.getFullYear(),month = <span class="keyword">this</span>.getMonth();</div><div class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(year,month,<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="comment">//alert(date.toLocaleString());</span></div><div class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;div class='date'&gt;"</span>+year+<span class="string">"年"</span>+(month+<span class="number">1</span>)+<span class="string">"月&lt;/div&gt;"</span>);</div><div class="line"><span class="built_in">document</span>.write(<span class="string">"日 一 二 三 四 五 六&lt;br /&gt;"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> day = date.getDay();</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;day;i++)&#123;</div><div class="line">  <span class="built_in">document</span>.write(<span class="string">'  '</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> count = <span class="keyword">new</span> <span class="built_in">Date</span>(year,month+<span class="number">1</span>,<span class="number">0</span>).getDate();<span class="comment">//这里的0返回一个月的最后一天</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=count;i++)&#123;</div><div class="line">  <span class="built_in">document</span>.write(i+<span class="string">'  '</span>);</div><div class="line">  <span class="keyword">if</span>((i+day)%<span class="number">7</span>==<span class="number">0</span>)&#123;</div><div class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;br/&gt;'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2012</span>,<span class="number">2</span>).printCalendar();</div></pre></td></tr></table></figure>
<h3 id="第十二课时"><a href="#第十二课时" class="headerlink" title="第十二课时"></a>第十二课时</h3><hr>
<h4 id="上节回顾：-8"><a href="#上节回顾：-8" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li>1.<code>Date</code> 期类</li>
<li>2.<code>Array</code></li>
<li>3.<code>Regex</code><ul>
<li>a.<code>[]</code>一个字符的范围</li>
<li>b.有顺序要求的</li>
<li>c.<code>\w==[a-zA-Z0-9_]</code>  <code>\d==[0-9]</code></li>
<li>d.<code>{count}</code>设置匹配数量比如<code>\w{5}</code>，<code>{c1,c2}</code></li>
<li>e.<code>//</code>的正则表达式匹配局部，<code>/^$/</code>的正则表达式是匹配全部</li>
<li>f.<code>()</code>的作用就是为了分组匹配</li>
</ul>
</li>
</ul>
<h4 id="新知识点："><a href="#新知识点：" class="headerlink" title="新知识点："></a><strong>新知识点：</strong></h4><hr>
<ul>
<li>1.<code>Regex</code><ul>
<li>g.<code>+</code>代表的是<code>1-N</code>个，<code>*</code>代表的是<code>0-N</code>个</li>
<li>h.<code>?</code>代表该字符要不没有要不就有一个</li>
<li>i.<code>.</code>代表的是任意字符</li>
<li>j. <code>\转义符</code></li>
</ul>
</li>
<li>2.<code>BOM</code></li>
</ul>
<h3 id="第十三课时"><a href="#第十三课时" class="headerlink" title="第十三课时"></a>第十三课时</h3><hr>
<h4 id="上节回顾：-9"><a href="#上节回顾：-9" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li>1.Regex<ul>
<li>a.<code>[]</code>一个字符的范围</li>
<li>b.有顺序要求的</li>
<li>c.<code>\w==[a-zA-Z0-9_]</code>  <code>\d==[0-9]</code></li>
<li>d.<code>{count}</code>设置匹配数量比如<code>\w{5}</code>，<code>{c1,c2}</code></li>
<li>e.<code>//</code>的正则表达式匹配局部，<code>/^$/</code>的正则表达式是匹配全部</li>
<li>f.<code>()</code>的作用就是为了分组匹配</li>
<li>g.+代表的是<code>1-N</code>个，<code>*</code>代表的是<code>0-N</code>个</li>
<li>h.<code>?</code>代表该字符要不没有要不就有一个</li>
<li>i.<code>.</code>代表的是任意字符</li>
<li>j.<code>\转义符</code></li>
</ul>
</li>
</ul>
<h4 id="新知识："><a href="#新知识：" class="headerlink" title="新知识："></a><strong>新知识：</strong></h4><hr>
<ul>
<li><code>window</code> 是<code>Window</code>构造器造出来的一个对象 <code>alert(window instanceof Window)</code></li>
<li><code>document</code> 是<code>Document</code>构造器造出来的一个对象</li>
<li>任何对象在我们的内存中他都是由某个构造器创建出来的 也就是说 有构造器一定有对应的原型prototype</li>
<li>例如：<code>div</code>是由<code>HTMLDivElement</code> 这个构造器创建的一个实例 <code>div = new HTMLDivElement()</code>  <code>span = new HTMLSpanElement()</code></li>
<li>查看某个对象对应的构造器：<code>console.log();</code></li>
<li>整个浏览器的实现就是一个面向对象的编程思想 一切皆是对象</li>
</ul>
<h4 id="1-BOM-浏览器对象模型"><a href="#1-BOM-浏览器对象模型" class="headerlink" title="1.BOM 浏览器对象模型"></a>1.BOM 浏览器对象模型</h4><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-8b133694198ad13f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="BOM"></p>
<ul>
<li>a.<code>screen</code> 指的不是浏览器的宽度，指的是整个电脑屏幕的分辨率<ul>
<li>可以拿到屏幕可用分辨率</li>
</ul>
</li>
<li>b.<code>navigator</code><ul>
<li>可以通过<code>userAgent</code>判断当前浏览器信息</li>
</ul>
</li>
<li>c.<code>location</code><ul>
<li><code>URL</code>：统一资源定位符 <code>Union Resource Location</code></li>
<li>可以通过<code>href</code>属性重定向（改变）页面的URL，进行页面跳转</li>
</ul>
</li>
<li>d.<code>history</code><ul>
<li><code>go</code>方法能够让我们进行历史回退或者前进</li>
</ul>
</li>
<li><p>e.<code>frames</code></p>
<ul>
<li>获得当前窗体的子页面（<code>iframe</code>）</li>
</ul>
</li>
<li><p>f.<code>document</code></p>
<ul>
<li><code>DOM</code>模型的核心对象</li>
</ul>
</li>
</ul>
<h4 id="2-DOM-文档对象模型"><a href="#2-DOM-文档对象模型" class="headerlink" title="2.DOM 文档对象模型"></a>2.<code>DOM</code> 文档对象模型</h4><hr>
<ul>
<li><p><strong><code>document</code></strong></p>
<ul>
<li><strong>功能</strong><ul>
<li><code>getElementById</code>   <code>$(&#39;#aaa&#39;)</code></li>
<li><code>getElementByTagName</code>  <code>$(&#39;div&#39;)</code></li>
<li><code>getElementsByClassName</code>  <code>$(&#39;.aaa&#39;)</code></li>
<li><code>getElementsByName</code>  只用在表单元素中</li>
</ul>
</li>
</ul>
</li>
<li><p><strong><code>document</code> <code>object</code></strong></p>
<ul>
<li><strong>属性：</strong><ul>
<li><code>className</code>，<code>style</code></li>
<li><code>id</code></li>
<li><code>name</code>,<code>value</code>(表单元素)</li>
<li><code>href</code>,<code>src</code>…(对应的元素)</li>
<li><code>innerHTML</code></li>
<li><code>children</code></li>
<li><code>parentNode</code></li>
</ul>
</li>
</ul>
<ul>
<li><strong>功能方法：</strong><ul>
<li><code>setAttribute/getAttribute</code></li>
<li><code>appendChild</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="第十四课时"><a href="#第十四课时" class="headerlink" title="第十四课时"></a>第十四课时</h3><hr>
<h4 id="上节回顾：-10"><a href="#上节回顾：-10" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<ul>
<li>1.BOM 浏览器对象模型<ul>
<li>a.<code>screen</code> 指的不是浏览器的宽度，指的是整个电脑屏幕的分辨率<ul>
<li>可以拿到屏幕可用分辨率</li>
</ul>
</li>
<li>b.<code>navigator</code><ul>
<li>可以通过<code>userAgent</code>判断当前浏览器信息</li>
</ul>
</li>
<li>c.<code>location</code><ul>
<li><code>URL</code>：统一资源定位符 <code>Union Resource Location</code></li>
<li>可以通过<code>href</code>属性重定向（改变）页面的URL，进行页面跳转</li>
</ul>
</li>
<li>d.<code>history</code><ul>
<li><code>go</code>方法能够让我们进行历史回退或者前进</li>
</ul>
</li>
<li>e.<code>frames</code><pre><code>获得当前窗体的子页面（`iframe`）
</code></pre></li>
<li>f.<code>document</code><ul>
<li><code>DOM</code>模型的核心对象</li>
</ul>
</li>
</ul>
</li>
<li>所有的<code>DOM</code>对象都是在堆内存创建的 都是有一个构造器生成的</li>
<li>查看对象的构造器器方法：<ul>
<li>step1：查看标签的对象以及构造器<code>var body = document.body;console.log(body.toString())</code></li>
<li>step2：查看对象是否是这个构造器创建出来的 <code>console.log(body instanceof HTMLBodyElement)</code></li>
</ul>
</li>
</ul>
<h4 id="新知识点：-1"><a href="#新知识点：-1" class="headerlink" title="新知识点："></a><strong>新知识点：</strong></h4><hr>
<h4 id="1-DOM-文档对象模型"><a href="#1-DOM-文档对象模型" class="headerlink" title="1.DOM 文档对象模型"></a>1.DOM 文档对象模型</h4><hr>
<h5 id="document"><a href="#document" class="headerlink" title="document"></a><strong>document</strong></h5><hr>
<ul>
<li>功能<ul>
<li><code>getElementById</code>：通过传入的ID，返回标识了这个ID的唯一对象的内存地址</li>
<li><code>getElementsByTagName</code>:通过传入的标签名字，返回所有该标签对象（<code>HTMLCollection</code>）</li>
<li><code>getElementsByClassName</code>:通过类的名字，返回所有该类的元素对象（<code>HTMLCollection</code>）</li>
<li><code>createElement</code>:想要创建出来的元素能够绘制在页面中，那么它必须在DOM树中<ul>
<li><strong>总结</strong> <code>document</code>对象是DOM原型的核心对象，它是内存DOM树的根，所以它提供了很多功能让我们快速的找到DOM树中的某些DOM节点（对象）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="element"><a href="#element" class="headerlink" title="element"></a><strong><code>element</code></strong></h5><hr>
<ul>
<li><p>功能方法：（自定义属性非常灵活好用）</p>
<ul>
<li><code>setAttribute/getAttribute</code> //getAttribute获取标签的属性 –用来操作标签的属性</li>
<li><code>setAttribute</code>设置标签的属性</li>
<li><code>appendChild</code>:添加子元素</li>
</ul>
</li>
<li><p>属性：</p>
<ul>
<li><code>id</code></li>
<li><code>className</code>，<code>style</code></li>
<li><code>name</code>,<code>value</code>(只有表单元素有 其他是没有的)</li>
<li><code>href</code>,<code>src</code>…(对应的元素)</li>
<li><code>innerHTML/innerText</code>  <code>innerText</code>返回文本信息</li>
<li><code>children</code>://子元素集合</li>
<li><code>parentNode</code>//父元素</li>
</ul>
</li>
</ul>
<ul>
<li>总结：元素的功能属性直接可以通过元素对象<code>点</code>出来，除此意外的<code>自定义属性</code>，请通过<code>get/setAtribute</code>去操作</li>
</ul>
<h4 id="DOM-操作："><a href="#DOM-操作：" class="headerlink" title="DOM 操作："></a><strong>DOM 操作：</strong></h4><hr>
<ul>
<li>图片切换的相册效果</li>
<li><code>tab</code>切换效果</li>
<li>表单验证</li>
<li>特效就是<code>DOM</code>操作的具体应用 <code>DOM</code>操作就是用<code>js</code>来写<code>HTML</code>代码</li>
<li>节点/元素/标签：<ul>
<li>三种常用的节点类型：<ul>
<li>元素节点</li>
<li>属性节点</li>
<li>文本节点</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="操作DOM对象："><a href="#操作DOM对象：" class="headerlink" title="操作DOM对象："></a><strong>操作DOM对象：</strong></h4><hr>
<ul>
<li>修改：–找到这个节点</li>
<li>删除：–找到这个节点</li>
<li>添加：–先造出一个节点 然后插入 插入到哪里？找节点来定位</li>
<li>这些都离不开节点的查找</li>
</ul>
<h4 id="节点的查找：（最重要）"><a href="#节点的查找：（最重要）" class="headerlink" title="节点的查找：（最重要）"></a><strong>节点的查找：（最重要）</strong></h4><hr>
<ul>
<li>1、<code>document.getElementById</code>—根据<code>id</code>查找节点 [返回的是节点本身]</li>
<li>2、<code>document.getElementsByTagName</code>–根据标签名字来查找[返回的是数组]<code>document.getElementsByTagName[i]</code></li>
<li>3、<code>document.getElemenstByName</code>–根据<code>name</code>属性来查找节点（一般用在表单中）[返回的是数组]<code>document.getElemenstByName[i]</code></li>
</ul>
<ul>
<li><p><strong>注意：</strong>早期浏览器都认为<code>name</code>只出现在表单中 </p>
</li>
<li><p>因此<code>document.getElemenstByName</code>只对表单中的元素发挥作用 后来部分浏览器把<code>Name</code>属性扩展到一般的元素 如：<code>div</code> 但是IE浏览器还是只能对表单使用<code>byName</code>因此处于兼容性 我们只能对表单使用<code>byName</code></p>
</li>
</ul>
<h4 id="DOM中查找节点的思路：（由大到小-个别情况-由子到父）"><a href="#DOM中查找节点的思路：（由大到小-个别情况-由子到父）" class="headerlink" title="DOM中查找节点的思路：（由大到小 个别情况 由子到父）"></a><code>DOM</code>中查找节点的思路：（由大到小 个别情况 由子到父）</h4><hr>
<ul>
<li><p>由大到小：（通过下面的来定位）</p>
<ul>
<li>1、<code>document.getElementById</code>—根据id查找节点 [返回的是节点本身]</li>
<li>2、<code>document.getElementsByTagName</code>–根据标签名字来查找[返回的是数组]<code>document.getElementsByTagName[i]</code></li>
<li>3、<code>document.getElemenstByName</code>–根据<code>name</code>属性来查找节点（一般用在表单中）[返回的是数组]<code>document.getElemenstByName[i]</code></li>
</ul>
</li>
<li>如果还没有查到自己想要的节点，还可以继续根据上面已经找到的节点再次定位来查找</li>
<li>怎么继续定位？<ul>
<li>答：<code>childNodes/child</code></li>
</ul>
</li>
</ul>
<h4 id="继续查找："><a href="#继续查找：" class="headerlink" title="继续查找："></a><strong>继续查找：</strong></h4><ul>
<li>1、查找子元素 <code>children[index]/childNodes</code></li>
<li>2、查找父元素 <code>node.parentNode</code> –&gt;获取父元素</li>
<li>3、查找兄弟元素 <code>nextSibling</code> <code>previousSibling</code></li>
<li>4、<code>nextSibling</code> <code>previousSibling</code> <code>firstChild</code> <code>lastChild</code>这四个属性容易受到<code>空白文本</code>的影响 <code>建议不用</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//============给Object原型加一个方法 消除文本节点对DOM操作的影响 例如：nextSibling` `previousSibling` `firstChild` `lastChild （受到换行 和文本节点影响）</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.prototype.next = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="comment">//NodeType == 3 text的代号</span></div><div class="line">  <span class="comment">//NodeType == 1 tag的代号</span></div><div class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.nextSibling)&#123;<span class="comment">//判断下一个兄弟节点是否存在</span></div><div class="line">  <span class="keyword">switch</span>(<span class="keyword">this</span>.nextSibling.nodeType)&#123;</div><div class="line">    <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.nextSibling;</div><div class="line">    <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.nextSibling.nextSibling;</div><div class="line">  &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(div1.next().next().innerText);</div></pre></td></tr></table></figure>
<ul>
<li><p>5、对于查到的某个元素里面的子元素非常多 这时候还可利用<code>getElementsByTagname</code>进一步筛选</p>
</li>
<li><p><strong>注意</strong> 对于元素对象和<code>document</code>对象相比 元素对象只能利用<code>getElementsByTagName</code>函数 其他两个不能用</p>
</li>
</ul>
<ul>
<li><p>节点查找也是通过由大到小来定位：找到大的元素进一步细化 完全可以找到页面上任意一个元素控制他</p>
</li>
<li><p>子元素 不好找 就找他的父元素</p>
</li>
<li><p>要过滤空白文本节点，用<code>children</code>取他的文本节点</p>
</li>
</ul>
<h4 id="DOM与节点的关系："><a href="#DOM与节点的关系：" class="headerlink" title="DOM与节点的关系："></a><strong>DOM与节点的关系：</strong></h4><hr>
<ul>
<li><strong>node:</strong><ul>
<li><code>childNodes[]</code></li>
<li><code>parentNode</code></li>
<li><code>firstChild</code></li>
<li><code>getElementsByTagName(&#39;元素标签&#39;)</code></li>
<li><code>lastchild</code></li>
<li><code>nextSibling</code></li>
<li><code>previousSibling</code></li>
<li><code>children[index]</code> <code>children</code> 不是<code>w3c</code>标准 但是各大浏览器兼容性很好</li>
</ul>
</li>
</ul>
<ul>
<li><p>通过给原型添加方法在元素后面创建标签</p>
</li>
<li><p><strong>启示</strong>：在项目中，很多很多地方都需要一个方法但是系统没提供，这时可以通过原型扩展</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//var p = document.createElement('p');</span></div><div class="line"><span class="comment">//p.innerHTML = "this is a p";</span></div><div class="line"><span class="comment">//var child = document.getElementsByTagName('div');</span></div><div class="line"></div><div class="line"><span class="comment">//给Div的HTMLDivElement构造器原型加一个创建元素的方法 要所有的元素都有这个方法 改成 Object</span></div><div class="line">HTMLDivElement.prototype.createElement = <span class="function"><span class="keyword">function</span>(<span class="params">tagName</span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> child = <span class="built_in">document</span>.createElement(tagName);</div><div class="line">  <span class="keyword">this</span>.appendChild(child);</div><div class="line">  <span class="keyword">return</span> child;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> child = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>)[<span class="number">2</span>].createElement(<span class="string">"p"</span>);</div><div class="line">child.innerHTML = <span class="string">'pppppp'</span>;</div></pre></td></tr></table></figure>
<h5 id="DOM属性小结"><a href="#DOM属性小结" class="headerlink" title="DOM属性小结"></a><strong>DOM属性小结</strong></h5><hr>
<ul>
<li><p><code>Attributes</code>    存储节点的属性列表(只读)</p>
</li>
<li><p><code>childNodes</code>    存储节点的子节点列表(只读)</p>
</li>
<li><p><code>dataType</code>    返回此节点的数据类型</p>
</li>
<li><p><code>Definition</code>    以<code>DTD</code>或<code>XML</code>模式给出的节点的定义(只读)</p>
</li>
<li><p><code>Doctype</code>    指定文档类型节点(只读)</p>
</li>
<li><p><code>documentElement</code>    返回文档的根元素(可读写)</p>
</li>
<li><p><code>firstChild</code>    返回当前节点的第一个子节点(只读)</p>
</li>
<li><p><code>Implementation</code>    返回<code>XMLDOMImplementation</code>对象</p>
</li>
<li><p><code>lastChild</code>    返回当前节点最后一个子节点(只读)</p>
</li>
<li><p><code>nextSibling</code>    返回当前节点的下一个兄弟节点(只读)</p>
</li>
<li><p><code>nodeName</code>    返回节点的名字(只读)</p>
</li>
<li><p><code>nodeType</code>    返回节点的类型(只读)</p>
</li>
<li><p><code>nodeTypedValue</code>存储节点值(可读写)</p>
</li>
<li><p><code>nodeValue</code>    返回节点的文本(可读写)</p>
</li>
<li><p><code>ownerDocument</code>    返回包含此节点的根文档(只读)</p>
</li>
<li><p><code>parentNode</code>返回父节点(只读)</p>
</li>
<li><p><code>Parsed</code>    返回此节点及其子节点是否已经被解析(只读)</p>
</li>
<li><p><code>Prefix</code>    返回名称空间前缀(只读)</p>
</li>
<li><p><code>preserveWhiteSpace</code>    指定是否保留空白(可读写)</p>
</li>
<li><p><code>previousSibling</code>    返回此节点的前一个兄弟节点(只读)</p>
</li>
<li><p><code>Text</code>    返回此节点及其后代的文本内容(可读写)</p>
</li>
<li><p><code>url</code>返回最近载入的XML文档的<code>URL</code>(只读)</p>
</li>
<li><p><code>Xml</code>    返回节点及其后代的<code>XML</code>表示(只读)</p>
</li>
</ul>
<h5 id="DOM方法小结"><a href="#DOM方法小结" class="headerlink" title="DOM方法小结"></a>DOM方法小结</h5><hr>
<ul>
<li><code>cloneNode</code>    返回当前节点的拷贝</li>
<li><code>createAttribute</code>    创建新的属性</li>
</ul>
<ul>
<li><p><strong>节点操作<code>DOMDocument</code>属性和方法</strong></p>
<ul>
<li><p><code>createCDATASection</code>    创建包括给定数据的<code>CDATA</code>段</p>
</li>
<li><p><code>createComment</code>    创建一个注释节点</p>
</li>
<li><p><code>createDocumentFragment</code>    创建<code>DocumentFragment</code>对象</p>
</li>
<li><p><code>createElement_x_x</code>    创建一个元素节点</p>
</li>
<li><p><code>createEntityReference</code>    创建<code>EntityReference</code>对象</p>
</li>
<li><p><code>createNode</code>    创建给定类型,名字和命名空间的节点</p>
</li>
<li><p><code>createPorcessingInstruction</code>    创建操作指令节点</p>
</li>
<li><p><code>createTextNode</code>    创建包括给定数据的文本节点</p>
</li>
<li><p><code>getElementsByTagName</code>返回指定名字的元素集合</p>
</li>
<li><p><code>hasChildNodes</code>    返回当前节点是否有子节点</p>
</li>
<li><p><code>insertBefore</code>在指定节点前插入子节点</p>
</li>
<li><p><code>Load</code>导入指定位置的XML文档</p>
</li>
<li><p><code>loadXML</code>    导入指定字符串的XML文档</p>
</li>
<li><p><code>removeChild</code>    从子结点列表中删除指定的子节点</p>
</li>
<li><p><code>replaceChild</code>从子节点列表中替换指定的子节点</p>
</li>
<li><p><code>Save    把</code>XML`文件存到指定节点</p>
</li>
<li><p><code>selectNodes</code>    对节点进行指定的匹配,并返回匹配节点列表</p>
</li>
<li><p><code>selectSingleNode</code>    对节点进行指定的匹配,并返回第一个匹配节点</p>
</li>
<li><p><code>transformNode</code>    使用指定的样式表对节点及其后代进行转换</p>
</li>
<li><p><code>transformNodeToObject</code>    使用指定的样式表将节点及其后代转换为对象</p>
</li>
<li><p><code>document.documentElement</code>返回文档的根节点</p>
</li>
<li><p><code>document.activeElement</code>    返回当前文档中被击活的标签节点</p>
</li>
<li><p><code>event.fromElement</code>    返回鼠标移出的源节点</p>
</li>
<li><p><code>event.toElement</code>返回鼠标移入的源节点</p>
</li>
<li><p><code>event.srcElement</code>    返回激活事件的源节点</p>
</li>
<li><p><code>node.parentNode,node.parentElement</code>    返回父节点</p>
</li>
<li><p><code>node.childNodes</code>    返回子节点集合（包含文本节点及标签节点）</p>
</li>
<li><p><code>node.children</code>    返回子标签节点集合</p>
</li>
<li><p><code>node.textNodes</code>    返回子文本节点集合</p>
</li>
<li><p><code>node.firstChild</code>返回第一个子节点</p>
</li>
<li><p><code>node.lastChild</code>    返回最后一个子节点</p>
</li>
<li><p><code>node.nextSibling</code>返回同属下一个节点</p>
</li>
<li><p><code>node.previousSibling</code>    返回同属上一个节点</p>
</li>
<li><p><code>node.a(oNode)</code>    追加子节点：</p>
</li>
<li><p><code>node.applyElment(oNode,sWhere)</code></p>
</li>
<li><p><code>sWhere</code>有两个值：<code>outside</code> / i<code>nside</code>    应用标签节点</p>
</li>
<li><p><code>node.insertBefore()</code></p>
</li>
<li><p><code>node.insertAdjacentElement()</code></p>
</li>
<li><p><code>node.replaceAdjacentText()</code></p>
</li>
</ul>
</li>
<li><p><strong>插入节点</strong></p>
<ul>
<li><code>node.remove()</code></li>
<li><code>node.removeChild()</code></li>
<li><code>node.removeNode()</code></li>
</ul>
</li>
<li><p><strong>删除节点</strong></p>
<ul>
<li><code>node.replaceChild()</code></li>
<li><code>node.replaceNode()</code></li>
<li><code>node.swapNode()</code></li>
</ul>
</li>
<li><p><strong>替换节点</strong></p>
<ul>
<li><code>node.cloneNode(bAll)</code>返回复制复制节点引用</li>
<li><code>node.contains()</code>    是否有子节点</li>
<li><code>node.hasChildNodes()</code>是否有子节点</li>
</ul>
</li>
</ul>
<ul>
<li>扩展阅读<ul>
<li><a href="http://www.jianshu.com/p/1e638b7da640" target="_blank" rel="external">DOM编程之API总结篇</a></li>
</ul>
</li>
</ul>
<h3 id="第十五课时"><a href="#第十五课时" class="headerlink" title="第十五课时"></a>第十五课时</h3><hr>
<h4 id="上节回顾：-11"><a href="#上节回顾：-11" class="headerlink" title="上节回顾："></a><strong>上节回顾：</strong></h4><hr>
<h4 id="1-DOM-文档对象模型-1"><a href="#1-DOM-文档对象模型-1" class="headerlink" title="1.DOM 文档对象模型"></a>1.DOM 文档对象模型</h4><hr>
<h5 id="document-1"><a href="#document-1" class="headerlink" title="document"></a>document</h5><ul>
<li>功能<ul>
<li><code>getElementById</code>：通过传入的ID，返回标识了这个ID的唯一对象的内存地址</li>
<li><code>getElementsByTagName</code>:通过传入的标签名字，返回所有该标签对象（<code>HTMLCollection</code>）</li>
<li><code>getElementsByClassName</code>:通过类的名字，返回所有该类的元素对象（<code>HTMLCollection</code>）</li>
<li><code>createElement</code>:想要创建出来的元素能够绘制在页面中，那么它必须在DOM树中<ul>
<li>总结： <code>document</code>对象是DOM原型的核心对象，它是内存DOM树的根，所以它提供了很多功能让我们快速的找到DOM树中的某些DOM节点（对象）</li>
</ul>
</li>
</ul>
</li>
<li><code>element</code><ul>
<li>功能方法：（自定义属性非常灵活好用）<ul>
<li><code>setAttribute/getAttribute</code> //getAttribute获取标签的属性 –用来操作标签的属性</li>
<li><code>setAttribute</code>设置标签的属性</li>
<li><code>appendChild</code>:添加子元素</li>
</ul>
</li>
<li>属性：<ul>
<li><code>id</code></li>
<li><code>className</code>，<code>style</code></li>
<li><code>name</code>,<code>value</code>(只有表单元素有 其他是没有的)</li>
<li><code>href</code>,<code>src</code>…(对应的元素)</li>
<li><code>innerHTML/innerText</code>  innerText返回文本信息</li>
<li><code>children</code>://子元素集合</li>
<li><code>parentNode</code>//父元素</li>
<li>总结：元素的功能属性直接可以通过元素对象<code>点</code>出来，除此意外的<code>自定义属性</code>，请通过<code>get/setAtribute</code>去操作</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="新知识点：-2"><a href="#新知识点：-2" class="headerlink" title="新知识点："></a><strong>新知识点：</strong></h4><hr>
<h4 id="1-事件（事故）基础"><a href="#1-事件（事故）基础" class="headerlink" title="1.事件（事故）基础"></a>1.<strong>事件（事故）基础</strong></h4><hr>
<ul>
<li>白话含义：就是当一个事物遇到某个事情的时候，要做的事情<ul>
<li>（事件源）</li>
<li>（事件监听名称）</li>
<li>（事件处理程序）</li>
</ul>
</li>
</ul>
<h4 id="2-常用事件"><a href="#2-常用事件" class="headerlink" title="2.常用事件"></a>2.常用事件</h4><hr>
<ul>
<li><code>onclick:</code>当事件源被点击的时候调用处理程序</li>
<li><code>onmouseover:</code>鼠标进入事件</li>
<li><code>onmouseout:</code>鼠标移出事件</li>
<li><code>onmousedown:</code>鼠标按下去的时候</li>
<li><code>onmouseup:</code>鼠标抬起来的时候</li>
<li><code>onscroll:</code>当事件源滚动条滚动的时候</li>
<li><code>onkeydown:</code>当键盘按下的时候</li>
<li><code>onkeypress:</code>当键盘按下去的时候</li>
<li><code>onkeyup:</code>当键盘弹上来的时候</li>
<li><code>onfocus:</code>当事件源获得光标</li>
<li><code>onblur:</code>当事件源失去光标</li>
<li><code>onchange:</code>当事件源<code>blur</code>的时候内容改变了的话</li>
</ul>
<h4 id="浏览器事件注意事项："><a href="#浏览器事件注意事项：" class="headerlink" title="浏览器事件注意事项："></a><strong>浏览器事件注意事项：</strong></h4><hr>
<ul>
<li>1.以后我们不要把事件写在标签上,而使用<code>js</code>方式操作</li>
<li>2.js方式操作的话：<ul>
<li>非<code>IE</code>浏览器第一个对象就会传入<code>event</code>事件源对象</li>
<li>IE浏览器第一个对象就不会传入<code>event</code>事件源对象（<code>event = event||window.event</code>;）</li>
<li>非<code>IE</code>浏览器的事件源属性是<code>target</code>属性（<code>event.target = event.target||event.srcElement</code>;）</li>
<li><code>IE</code>浏6览器的事件源属性是<code>srcElement</code>属性</li>
</ul>
</li>
<li>3.事件冒泡机制</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><hr>
<ul>
<li>以上是一些很基础的理论，笔记经验终究是别人的，看完了还是会忘记的，要转化成自己的东西，还要靠你不断实践。</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-7848f738f43affba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="学编程最佳实践"></p>
<ul>
<li><code>JavaScript</code>读书路线</li>
</ul>
<p><img src="https://github.com/phodal/developer/raw/master/images/js.gif" alt="JavaScript读书路线--from phodal"></p>
<h3 id="js一些资料推荐"><a href="#js一些资料推荐" class="headerlink" title="js一些资料推荐"></a>js一些资料推荐</h3><hr>
<ul>
<li>视频<ul>
<li><a href="http://edu.51cto.com/course/course_id-166-page-1.html" target="_blank" rel="external">Javascript第一季初级视频教程【李炎恢老师】</a></li>
<li><a href="http://www.zhinengshe.com/video.html" target="_blank" rel="external">JavaScript视频教程 | 智能社</a></li>
</ul>
</li>
<li><p>了解<code>web</code>开发知识体系</p>
<ul>
<li><a href="https://github.com/phodal/growth" target="_blank" rel="external">Growth - 陪你成为顶尖开发者</a></li>
<li><a href="https://github.com/poetries/mywiki" target="_blank" rel="external">GitHub上收集整理的前端资源</a></li>
</ul>
</li>
<li><p>常用组件</p>
<ul>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6.md" target="_blank" rel="external">js常用组件整理</a></li>
</ul>
</li>
<li>扩展阅读<ul>
<li><a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="external">廖雪峰JavaScript基础教程</a></li>
<li><a href="https://github.com/stone0090/javascript-lessons" target="_blank" rel="external">JavaScript 闯关记</a></li>
<li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html" target="_blank" rel="external">深入理解JavaScript系列 - 汤姆大叔</a></li>
<li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/" target="_blank" rel="external">JavaScript秘密花园</a></li>
</ul>
</li>
</ul>
<h3 id="附录一份大神总结的关于js的导图"><a href="#附录一份大神总结的关于js的导图" class="headerlink" title="附录一份大神总结的关于js的导图"></a>附录一份大神总结的关于js的导图</h3><hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-3a584567c41f737d.gif?imageMogr2/auto-orient/strip" alt="DOM基本操作"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-7de04acbf81543fc.gif?imageMogr2/auto-orient/strip" alt="javascript函数基础"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-5737bc8360e9e8d3.gif?imageMogr2/auto-orient/strip" alt="JavaScript数据类型"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-44d4ba1c8f6d48a6.gif?imageMogr2/auto-orient/strip" alt="window对象"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-05b7f79120cc6150.gif?imageMogr2/auto-orient/strip" alt="javascript变量"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-1b25cf62140a30fb.gif?imageMogr2/auto-orient/strip" alt="JavaScript字符串函数"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-30e2e0981d225fd4.gif?imageMogr2/auto-orient/strip" alt="JavaScript正则表达式"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-8bdb24d940eceeea.gif?imageMogr2/auto-orient/strip" alt="JavaScript流程控制"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-caa897f33ef0e47d.gif?imageMogr2/auto-orient/strip" alt="JavaScript运算符"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-eb23ab7b14608e83.gif?imageMogr2/auto-orient/strip" alt="JavaScript数组"></p>
<ul>
<li><a href="https://github.com/poetries/poetries.github.io/blob/dev/source/_posts/javascript%E7%AC%94%E8%AE%B0%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E7%AF%87.md" target="_blank" rel="external">本文mardown原文件–欢迎转载</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载请声明出处 &lt;a href=&quot;http://blog.poetries.top/2016/09/24/javascript%E7%AC%94%E8%AE%B0%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93%E7%AF%87/#more&quot;&gt;博客原文&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随手翻阅以前的学习笔记，顺便整理一下放在这里，方便自己复习，也希望你有也有帮助吧&lt;/p&gt;
&lt;h3 id=&quot;第一课时-入门基础&quot;&gt;&lt;a href=&quot;#第一课时-入门基础&quot; class=&quot;headerlink&quot; title=&quot;第一课时 入门基础&quot;&gt;&lt;/a&gt;第一课时 入门基础&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;知识点：&quot;&gt;&lt;a href=&quot;#知识点：&quot; class=&quot;headerlink&quot; title=&quot;知识点：&quot;&gt;&lt;/a&gt;&lt;strong&gt;知识点&lt;/strong&gt;：&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;操作系统就是个应用程序&lt;/li&gt;
&lt;li&gt;只要是应用程序都要占用物理内存&lt;/li&gt;
&lt;li&gt;浏览器本身也是一个应用程序&lt;/li&gt;
&lt;li&gt;浏览器本身只懂得解析&lt;code&gt;HTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;调用浏览器这个应用程序的一个功能绘制
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>DOM编程之API学习总结篇</title>
    <link href="http://www.poetries.top/2016/09/22/DOM%E7%BC%96%E7%A8%8B%E4%B9%8BAPI%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    <id>http://www.poetries.top/2016/09/22/DOM编程之API学习总结篇/</id>
    <published>2016-09-22T09:10:43.000Z</published>
    <updated>2016-11-26T10:58:54.810Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>原文 <a href="http://blog.poetries.top/2016/09/22/DOM%E7%BC%96%E7%A8%8B%E4%B9%8BAPI%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%E7%AF%87/" target="_blank" rel="external">链接</a></p>
</blockquote>
<h3 id="一、基本类型介绍"><a href="#一、基本类型介绍" class="headerlink" title="一、基本类型介绍"></a>一、基本类型介绍</h3><hr>
<h4 id="1-1-Node类型"><a href="#1-1-Node类型" class="headerlink" title="1.1 Node类型"></a>1.1 Node类型</h4><hr>
<ul>
<li><code>DOM1</code>级定义了一个<code>Node</code>接口，该接口由<code>DOM</code>中所有节点类型实现。这个<code>Node</code>接口在<code>JS</code>中是作为<code>Node</code>类型实现的。在<code>IE9</code>以下版本无法访问到这个类型，<code>JS</code>中所有节点都继承自<code>Node</code>类型，都共享着相同的基本属性和方法</li>
<li><code>Node</code>有一个属性<code>nodeType</code>表示<code>Node</code>的类型，它是一个整数，其数值分别表示相应的<code>Node</code>类型</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d1.png" alt=""></p>
<a id="more"></a>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d2.png" alt=""></p>
<ul>
<li>假设我们要判断一个<code>Node</code>是不是元素，我们可以这样判断</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(someNode.nodeType == <span class="number">1</span>)&#123;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"Node is a element"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>这些<code>Node</code>类型中，我们最常用的就是<code>element</code>，<code>text</code>，<code>attribute</code>，<code>comment</code>，<code>document</code>，<code>document_fragment</code>这几种类型</li>
</ul>
<h5 id="1-2-Element类型"><a href="#1-2-Element类型" class="headerlink" title="1.2 Element类型"></a>1.2 Element类型</h5><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d3.png" alt=""></p>
<ul>
<li><code>Element</code>提供了对元素标签名，子节点和特性的访问，我们常用<code>HTML</code>元素比如<code>div</code>，<code>span</code>，<code>a</code>等标签就是<code>element</code>中的一种。</li>
<li><p><strong><code>Element</code>有下面几条特性：</strong></p>
<ul>
<li><code>nodeType</code>为<code>1</code></li>
<li><code>nodeName</code>为元素标签名，<code>tagName</code>也是返回标签名</li>
<li><code>nodeValue</code>为<code>null</code></li>
<li><code>parentNode</code>可能是<code>Document</code>或<code>Element</code></li>
<li>子节点可能是 <code>Element</code>，<code>Text</code>，<code>Comment</code>，<code>Processing_Instruction</code>，<code>CDATASection</code> 或 <code>EntityReference</code></li>
</ul>
</li>
</ul>
<h5 id="1-3-Text类型"><a href="#1-3-Text类型" class="headerlink" title="1.3 Text类型"></a>1.3 Text类型</h5><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d4.png" alt=""></p>
<ul>
<li><code>Text</code>表示文本节点，它包含的是纯文本内容，不能包含<code>html</code>代码，但可以包含转义后的<code>html</code>代码。<code>Text</code>有下面的特性：<ul>
<li><code>nodeType</code>为<code>3</code></li>
<li><code>nodeName</code>为<code>#text</code></li>
<li><code>nodeValue</code>为文本内容</li>
<li><code>parentNode</code>是一个<code>Element</code></li>
<li>没有子节点</li>
</ul>
</li>
</ul>
<h5 id="1-4-Attr类型"><a href="#1-4-Attr类型" class="headerlink" title="1.4 Attr类型"></a>1.4 Attr类型</h5><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d5.png" alt=""></p>
<ul>
<li><code>Attr</code>类型表示元素的特性，相当于元素的<code>attributes</code>属性中的节点，它有下面的特性：<ul>
<li><code>nodeType</code>值为2</li>
<li><code>nodeName</code>是特性的名称</li>
<li><code>nodeValue</code>是特性的值</li>
<li><code>parentNode</code>为<code>null</code></li>
</ul>
</li>
</ul>
<h5 id="1-5-Comment类型"><a href="#1-5-Comment类型" class="headerlink" title="1.5 Comment类型"></a>1.5 Comment类型</h5><hr>
<ul>
<li><code>Comment</code>表示<code>HTML</code>文档中的注释，它有下面的几种特征：<ul>
<li><code>nodeType</code>为8</li>
<li><code>nodeName</code>为<code>#comment</code></li>
<li><code>nodeValue</code>为注释的内容</li>
<li><code>parentNode</code>可能是<code>Document</code>或<code>Element</code></li>
<li>没有子节点</li>
</ul>
</li>
</ul>
<h5 id="1-6-Document"><a href="#1-6-Document" class="headerlink" title="1.6 Document"></a>1.6 Document</h5><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d6.png" alt=""></p>
<ul>
<li><code>Document</code>表示文档，在浏览器中，<code>document</code>对象是<code>HTMLDocument</code>的一个实例，表示整个页面，它同时也是<code>window</code>对象的一个属性。<code>Document</code>有下面的特性：<ul>
<li><code>nodeType</code>为<code>9</code></li>
<li><code>nodeName</code>为<code>#document</code></li>
<li><code>nodeValue</code>为 <code>null</code></li>
<li><code>parentNode</code>为 <code>null</code></li>
<li>子节点可能是一个<code>DocumentType</code>或<code>Element</code></li>
</ul>
</li>
</ul>
<h5 id="1-7-DocumentFragment类型"><a href="#1-7-DocumentFragment类型" class="headerlink" title="1.7 DocumentFragment类型"></a>1.7 DocumentFragment类型</h5><hr>
<ul>
<li><p><code>DocumentFragment</code>是所有节点中唯一一个没有对应标记的类型，它表示一种轻量级的文档，可能当作一个临时的仓库用来保存可能会添加到文档中的节点。<code>DocumentFragment</code>有下面的特性：</p>
<ul>
<li><code>nodeType</code>为<code>11</code></li>
<li><code>nodeName</code>为<code>#document-fragment</code></li>
<li><code>nodeValue</code>为<code>null</code></li>
<li><code>parentNode</code>为<code>null</code></li>
</ul>
</li>
<li><p>我们简单地介绍了几种常见的<code>Node</code>类型，要记住，<code>HTML</code>中的节点并不只是包括元素节点，它还包括文本节点，注释节点等等。在这里我们只是简单地说明了几种常见的节点.</p>
</li>
</ul>
<h3 id="二、-DOM提供的几个属性"><a href="#二、-DOM提供的几个属性" class="headerlink" title="二、 DOM提供的几个属性"></a>二、 DOM提供的几个属性</h3><hr>
<h4 id="2-1-childNodes属性"><a href="#2-1-childNodes属性" class="headerlink" title="2.1 childNodes属性"></a>2.1 childNodes属性</h4><hr>
<ul>
<li>在一棵节点树上，<code>childNodes</code>属性可以用来获取任何一个元素的所有子节点，它是一个包含这个元素全部子元素的数组</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.childNodes</div></pre></td></tr></table></figure>
<h4 id="2-2-nodeType属性"><a href="#2-2-nodeType属性" class="headerlink" title="2.2 nodeType属性"></a>2.2 nodeType属性</h4><hr>
<ul>
<li>节点之间的关系构成了节点层次，<code>html</code> 页面的可以画出一个以<code>html</code>标签为根节点的树形结构<br><code>DOM</code> 会把文档看作是一棵树，同时定义了很多方法来操作这棵数中的每一个元素（节点）</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world!!!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d7.png" alt=""></p>
<ul>
<li>每一个节点都有<code>nodeType</code>属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.nodeType</div></pre></td></tr></table></figure>
<ul>
<li><code>nodeType</code>属性总共有12中可能取值，但其中仅有3种有实用价值<ul>
<li>元素节点的<code>nodeType</code>属性值是1</li>
<li>属性节点的<code>nodeType</code>属性值是2</li>
<li>文本节点的<code>nodeType</code>属性值是3</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">description.firstChild.nodeValue = text;</div></pre></td></tr></table></figure>
<h4 id="2-3-nodeValue属性"><a href="#2-3-nodeValue属性" class="headerlink" title="2.3 nodeValue属性"></a>2.3 nodeValue属性</h4><hr>
<ul>
<li><code>nodeValue</code>属性<ul>
<li>如果想改变一个文本节点的值，那就使用<code>DOM</code>提供的<code>nodeValue</code>,它用来得到一个节点的值 <code>node.nodeValue</code> </li>
<li>需要注意：<code>nodeValue</code>属性获取对象的值时，得到的并不是包含在这个段落里的文本</li>
<li>nodeValue属性不仅可以用来检测节点的值，还可以设置节点的值</li>
</ul>
</li>
</ul>
<h4 id="2-4-firstChild和lastChild属性"><a href="#2-4-firstChild和lastChild属性" class="headerlink" title="2.4 firstChild和lastChild属性"></a>2.4 firstChild和lastChild属性</h4><hr>
<ul>
<li>数组元素<code>childNodes[0]</code>有个更直观的同义词。无论如何，只要访问<code>childNodes</code>数组的第一个元素，都可以把它写成<code>firstChild</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.firstChild</div></pre></td></tr></table></figure>
<p>与下面等价</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.childNodes[<span class="number">0</span>]</div></pre></td></tr></table></figure>
<ul>
<li><code>DOM</code>还提供了一个与之对应的<code>lastChild</code>属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.lastChild</div></pre></td></tr></table></figure>
<h3 id="三、节点创建型API"><a href="#三、节点创建型API" class="headerlink" title="三、节点创建型API"></a>三、节点创建型API</h3><hr>
<ul>
<li>在这里，我将常用的<code>DOM</code>操作<code>api</code>进行分类，首先要介绍的是创建型的<code>api</code>。这一类型的<code>api</code>，简而言之就是用来创建节点的</li>
</ul>
<h4 id="3-1-createElement"><a href="#3-1-createElement" class="headerlink" title="3.1 createElement"></a>3.1 createElement</h4><hr>
<ul>
<li><code>createElement</code>通过传入指定的一个标签名来创建一个元素，如果传入的标签名是一个未知的，则会创建一个自定义的标签，注意：<code>IE8</code>以下浏览器不支持自定义标签</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>使用<code>createElement</code>要注意：通过<code>createElement</code>创建的元素并不属于<code>html</code>文档，它只是创建出来，并未添加到<code>html</code>文档中，要调用<code>appendChild</code>或<code>insertBefore</code>等方法将其添加到<code>HTML</code>文档树中</li>
</ul>
<h4 id="3-2-createTextNode"><a href="#3-2-createTextNode" class="headerlink" title="3.2 createTextNode"></a>3.2 createTextNode</h4><hr>
<ul>
<li><code>createTextNode</code>用来创建一个文本节点，用法如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> textNode = <span class="built_in">document</span>.createTextNode(<span class="string">"一个TextNode"</span>);</div></pre></td></tr></table></figure>
<ul>
<li><code>createTextNode</code>接收一个参数，这个参数就是文本节点中的文本，和<code>createElement</code>一样，创建后的文本节点也只是独立的一个节点，同样需要<code>appendChild</code>将其添加到<code>HTML</code>文档树中</li>
</ul>
<h4 id="3-3-cloneNode"><a href="#3-3-cloneNode" class="headerlink" title="3.3 cloneNode"></a>3.3 cloneNode</h4><ul>
<li><code>cloneNode</code>是用来返回调用方法的节点的一个副本，它接收一个<code>bool</code>参数，用来表示是否复制子元素，使用如下：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> parent = <span class="built_in">document</span>.getElementById(<span class="string">"parentElement"</span>); </div><div class="line"><span class="keyword">var</span> parent2 = parent.cloneNode(<span class="literal">true</span>);<span class="comment">// 传入true</span></div><div class="line">parent2.id = <span class="string">"parent2"</span>;</div></pre></td></tr></table></figure>
<ul>
<li>这段代码通过<code>cloneNode</code>复制了一份<code>parent</code>元素，其中<code>cloneNode</code>的参数为<code>true</code>，表示<code>parent</code>的子节点也被复制，如果传入<code>false</code>，则表示只复制了<code>parent</code>节点</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    我是父元素的文本</div><div class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span></div><div class="line">        我是子元素</div><div class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btnCopy"</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line">var parent = document.getElementById("parent");</div><div class="line">document.getElementById("btnCopy").onclick = function()&#123;</div><div class="line">	var parent2 = parent.cloneNode(true);</div><div class="line">	parent2.id = "parent2";</div><div class="line">	document.body.appendChild(parent2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>这段代码很简单，主要是绑定<code>button</code>事件，事件内容是复制了一个<code>parent</code>，修改其<code>id</code>，然后添加到文档中</p>
</li>
<li><p><strong>这里有几点要注意：</strong></p>
<ul>
<li>和<code>createElement</code>一样，<code>cloneNode</code>创建的节点只是游离有<code>html</code>文档外的节点，要调用<code>appendChild</code>方法才能添加到文档树中</li>
<li>如果复制的元素有<code>id</code>，则其副本同样会包含该<code>id</code>，由于<code>id</code>具有唯一性，所以在复制节点后必须要修改其id</li>
<li>调用接收的<code>bool</code>参数最好传入，如果不传入该参数，不同浏览器对其默认值的处理可能不同</li>
</ul>
</li>
<li><p>除此之外，我们还有一个需要注意的点：</p>
<ul>
<li>如果被复制的节点绑定了事件，则副本也会跟着绑定该事件吗？这里要分情况讨论：<ul>
<li>如果是通过<code>addEventListener</code>或者比如<code>onclick</code>进行绑定事件，则副本节点不会绑定该事件</li>
<li>如果是内联方式绑定比如</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">"showParent()"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>这样的话，副本节点同样会触发事件</li>
</ul>
<h4 id="3-4-createDocumentFragment"><a href="#3-4-createDocumentFragment" class="headerlink" title="3.4 createDocumentFragment"></a>3.4 createDocumentFragment</h4><hr>
<ul>
<li><p><code>createDocumentFragment</code>方法用来创建一个<code>DocumentFragment</code>。在前面我们说到<code>DocumentFragment</code>表示一种轻量级的文档，它的作用主要是存储临时的节点用来准备添加到文档中</p>
</li>
<li><p><code>createDocumentFragment</code>方法主要是用于添加大量节点到文档中时会使用到。假设要循环一组数据，然后创建多个节点添加到文档中</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;ul id=<span class="string">"list"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></div><div class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"添加多项"</span> id=<span class="string">"btnAdd"</span> /&gt;</div><div class="line"></div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"btnAdd"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>; i++)&#123;</div><div class="line">		<span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</div><div class="line">		li.textContent = i;</div><div class="line">		list.appendChild(li);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>这段代码将按钮绑定了一个事件，这个事件创建了100个<code>li</code>节点，然后依次将其添加<code>HTML</code>文档中。这样做有一个缺点：每次一创建一个新的元素，然后添加到文档树中，这个过程会造成浏览器的回流。所谓回流简单说就是指元素大小和位置会被重新计算，如果添加的元素太多，会造成性能问题。这个时候，就是使用<code>createDocumentFragment了</code></p>
</li>
<li><p><code>DocumentFragment</code>不是文档树的一部分，它是保存在内存中的，所以不会造成回流问题。我们修改上面的代码如下</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"btnAdd"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> list = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>);	</div><div class="line">	<span class="keyword">var</span> fragment = <span class="built_in">document</span>.createDocumentFragment();</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>; i++)&#123;</div><div class="line">	  <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</div><div class="line">		li.textContent = i;</div><div class="line">		fragment.appendChild(li);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	list.appendChild(fragment);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>优化后的代码主要是创建了一个<code>fragment</code>，每次生成的<code>li</code>节点先添加到<code>fragment</code>，最后一次性添加到<code>list</code></li>
</ul>
<h4 id="3-5-创建型API总结"><a href="#3-5-创建型API总结" class="headerlink" title="3.5 创建型API总结"></a>3.5 创建型API总结</h4><hr>
<ul>
<li><p>创建型<code>api</code>主要包括<code>createElement</code>，<code>createTextNode</code>，<code>cloneNode</code>和<code>createDocumentFragment</code>四个方法，需要注意下面几点：</p>
<ul>
<li>它们创建的节点只是一个孤立的节点，要通过<code>appendChild</code>添加到文档中</li>
<li><code>cloneNode</code>要注意如果被复制的节点是否包含子节点以及事件绑定等问题</li>
<li>使用<code>createDocumentFragment</code>来解决添加大量节点时的性能问题</li>
</ul>
</li>
</ul>
<h3 id="四、页面修改型API"><a href="#四、页面修改型API" class="headerlink" title="四、页面修改型API"></a>四、页面修改型API</h3><hr>
<ul>
<li>前面我们提到创建型<code>api</code>，它们只是创建节点，并没有真正修改到页面内容，而是要调用<code>appendChild</code>来将其添加到文档树中。我在这里将这类会修改到页面内容归为一类。<br>修改页面内容的<code>api</code>主要包括：<code>appendChild</code>，<code>insertBefore</code>，<code>removeChild</code>，<code>replaceChild</code></li>
</ul>
<h4 id="4-1-appendChild"><a href="#4-1-appendChild" class="headerlink" title="4.1 appendChild"></a>4.1 appendChild</h4><hr>
<ul>
<li><code>appendChild</code>我们在前面已经用到多次，就是将指定的节点添加到调用该方法的节点的子元素的末尾。调用方法如下：</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">parent.appendChild(child);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>child</code>节点将会作为<code>parent</code>节点的最后一个子节点</p>
</li>
<li><p><code>appendChild</code>这个方法很简单，但是还有有一点需要注意：如果被添加的节点是一个页面中存在的节点，则执行后这个节点将会添加到指定位置，其原本所在的位置将移除该节点，也就是说不会同时存在两个该节点在页面上，相当于把这个节点移动到另一个地方</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child"</span>&gt;</span></div><div class="line">    要被添加的节点</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    要移动的位置</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>		</div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btnMove"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"移动节点"</span> /&gt;</span></div><div class="line"></div><div class="line">document.getElementById("btnMove").onclick = function()&#123;</div><div class="line">	var child = document.getElementById("child");</div><div class="line">	document.getElementById("parent").appendChild(child);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>这段代码主要是获取页面上的<code>child</code>节点，然后添加到指定位置，可以看到原本的<code>child</code>节点被移动到<code>parent</code>中了。<br>这里还有一个要注意的点：如果<code>child</code>绑定了事件，被移动时，它依然绑定着该事件</li>
</ul>
<h4 id="4-2-insertBefore"><a href="#4-2-insertBefore" class="headerlink" title="4.2 insertBefore"></a>4.2 insertBefore</h4><hr>
<ul>
<li><code>insertBefore</code>用来添加一个节点到一个参照节点之前，用法如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">parentNode.insertBefore(newNode,refNode);</div></pre></td></tr></table></figure>
<ul>
<li><code>parentNode</code>表示新节点被添加后的父节点</li>
<li><code>newNode</code>表示要添加的节点</li>
<li><code>refNode</code>表示参照节点，新节点会添加到这个节点之前</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    父节点</div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child"</span>&gt;</span>				</div><div class="line">        子元素</div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"insertNode"</span> <span class="attr">value</span>=<span class="string">"插入节点"</span> /&gt;</span></div><div class="line"></div><div class="line">var parent = document.getElementById("parent");</div><div class="line">var child = document.getElementById("child");</div><div class="line">document.getElementById("insertNode").onclick = function()&#123;</div><div class="line">	var newNode = document.createElement("div");</div><div class="line">	newNode.textContent = "新节点"</div><div class="line">	parent.insertBefore(newNode,child);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>这段代码创建了一个新节点，然后添加到<code>child</code>节点之前</li>
<li><p>和<code>appendChild</code>一样，如果插入的节点是页面上的节点，则会移动该节点到指定位置，并且保留其绑定的事件。</p>
</li>
<li><p><strong>关于第二个参数参照节点还有几个注意的地方：</strong></p>
<ul>
<li><code>refNode</code>是必传的，如果不传该参数会报错</li>
<li>如果<code>refNode</code>是<code>undefined</code>或<code>null</code>，则<code>insertBefore</code>会将节点添加到子元素的末尾</li>
</ul>
</li>
</ul>
<h4 id="4-3-removeChild"><a href="#4-3-removeChild" class="headerlink" title="4.3 removeChild"></a>4.3 removeChild</h4><hr>
<ul>
<li><code>removeChild</code>顾名思义，就是删除指定的子节点并返回，用法如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> deletedChild = parent.removeChild(node);</div></pre></td></tr></table></figure>
<ul>
<li><p><code>deletedChild</code>指向被删除节点的引用，它等于<code>node</code>，被删除的节点仍然存在于内存中，可以对其进行下一步操作。</p>
</li>
<li><p><strong>注意</strong>：如果被删除的节点不是其子节点，则程序将会报错。我们可以通过下面的方式来确保可以删除：</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(node.parentNode)&#123;</div><div class="line">    node.parentNode.removeChild(node);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>通过节点自己获取节点的父节点，然后将自身删除</li>
</ul>
<h4 id="4-4-replaceChild"><a href="#4-4-replaceChild" class="headerlink" title="4.4 replaceChild"></a>4.4 replaceChild</h4><hr>
<ul>
<li><code>replaceChild</code>用于使用一个节点替换另一个节点，用法如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">parent.replaceChild(newChild,oldChild);</div></pre></td></tr></table></figure>
<ul>
<li><code>newChild</code>是替换的节点，可以是新的节点，也可以是页面上的节点，如果是页面上的节点，则其将被转移到新的位置</li>
<li><code>oldChild</code>是被替换的节点</li>
</ul>
<h4 id="4-5-页面修改型API总结"><a href="#4-5-页面修改型API总结" class="headerlink" title="4.5 页面修改型API总结"></a>4.5 页面修改型API总结</h4><hr>
<ul>
<li>页面修改型api主要是这四个接口，<strong>要注意几个特点</strong>：<ul>
<li>不管是新增还是替换节点，如果新增或替换的节点是原本存在页面上的，则其原来位置的节点将被移除，也就是说同一个节点不能存在于页面的多个位置</li>
<li>节点本身绑定的事件会不会消失，会一直保留着</li>
</ul>
</li>
</ul>
<h3 id="五、节点查询型API"><a href="#五、节点查询型API" class="headerlink" title="五、节点查询型API"></a>五、节点查询型API</h3><hr>
<ul>
<li>节点查询型<code>API</code>也是非常常用的</li>
</ul>
<h4 id="5-1-document-getElementById"><a href="#5-1-document-getElementById" class="headerlink" title="5.1 document.getElementById"></a>5.1 document.getElementById</h4><hr>
<ul>
<li><p>这个接口很简单，根据元素<code>id</code>返回元素，返回值是<code>Element</code>类型，如果不存在该元素，则返回<code>null</code></p>
</li>
<li><p><strong>使用这个接口有几点要注意：</strong></p>
<ul>
<li>元素的<code>Id</code>是大小写敏感的，一定要写对元素的<code>id</code></li>
<li><code>HTML</code>文档中可能存在多个<code>id</code>相同的元素，则返回第一个元素</li>
<li>只从文档中进行搜索元素，如果创建了一个元素并指定<code>id</code>，但并没有添加到文档中，则这个元素是不会被查找到的</li>
</ul>
</li>
</ul>
<h4 id="5-2-document-getElementsByTagName"><a href="#5-2-document-getElementsByTagName" class="headerlink" title="5.2 document.getElementsByTagName"></a>5.2 document.getElementsByTagName</h4><hr>
<ul>
<li>这个接口根据元素标签名获取元素，返回一个即时的<code>HTMLCollection</code>类型，什么是即时的<code>HTMLCollection</code>类型呢？</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">		</div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"显示数量"</span> <span class="attr">id</span>=<span class="string">"btnShowCount"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"新增div"</span> <span class="attr">id</span>=<span class="string">"btnAddDiv"</span>/&gt;</span>	</div><div class="line"></div><div class="line">var divList = document.getElementsByTagName("div");</div><div class="line">document.getElementById("btnAddDiv").onclick = function()&#123;</div><div class="line">	var div = document.createElement("div");</div><div class="line">	div.textContent ="div" + (divList.length+1);</div><div class="line">	document.body.appendChild(div);</div><div class="line">&#125;</div><div class="line">	</div><div class="line">document.getElementById("btnShowCount").onclick = function()&#123;</div><div class="line">        alert(divList.length);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>这段代码中有两个按钮，一个按钮是显示<code>HTMLCollection</code>元素的个数，另一个按钮可以新增一个div标签到文档中。前面提到<code>HTMLCollcetion</code>元素是即时的表示该集合是随时变化的，也就是是文档中有几个<code>div</code>，它会随时进行变化，当我们新增一个<code>div</code>后，再访问<code>HTMLCollection</code>时，就会包含这个新增的<code>div</code></p>
</li>
<li><p><strong>使用document.getElementsByTagName这个方法有几点要注意</strong>：</p>
<ul>
<li>如果要对<code>HTMLCollection</code>集合进行循环操作，最好将其长度缓存起来，因为每次循环都会去计算长度，暂时缓存起来可以提高效率</li>
<li>如果没有存在指定的标签，该接口返回的不<code>是null</code>，而是一个空的<code>HTMLCollection</code></li>
<li><code>“*”</code>表示所有标签</li>
</ul>
</li>
</ul>
<h4 id="5-3-document-getElementsByName"><a href="#5-3-document-getElementsByName" class="headerlink" title="5.3 document.getElementsByName"></a>5.3 document.getElementsByName</h4><hr>
<ul>
<li><p><code>getElementsByName</code>主要是通过指定的<code>name</code>属性来获取元素，它返回一个即时的<code>NodeList</code>对象。一般用于获取表单元素的·name·属性</p>
</li>
<li><p><strong>使用这个接口主要要注意几点：</strong></p>
<ul>
<li>返回对象是一个即时的<code>NodeList</code>，它是随时变化的</li>
<li>在<code>HTML</code>元素中，并不是所有元素都有<code>name</code>属性，比如<code>div</code>是没有<code>name</code>属性的，但是如果强制设置<code>div的</code>name`属性，它也是可以被查找到的</li>
<li>在<code>IE</code>中，如果<code>id</code>设置成某个值，然后传入<code>getElementsByName</code>的参数值和<code>id</code>值一样，则这个元素是会被找到的，所以最好不好设置同样的值给<code>id</code>和<code>name</code></li>
</ul>
</li>
</ul>
<h4 id="5-4-document-getElementsByClassName"><a href="#5-4-document-getElementsByClassName" class="headerlink" title="5.4 document.getElementsByClassName"></a>5.4 document.getElementsByClassName</h4><hr>
<ul>
<li>这个<code>API</code>是根据元素的<code>class</code>返回一个即时的<code>HTMLCollection</code>，用法如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.getElementsByClassName(names);</div></pre></td></tr></table></figure>
<ul>
<li><strong>这个接口有下面几点要注意：</strong><ul>
<li>返回结果是一个即时的<code>HTMLCollection</code>，会随时根据文档结构变化</li>
<li><code>IE9</code>以下浏览器不支持</li>
<li>如果要获取<code>2</code>个以上<code>classname</code>，可传入多个<code>classname</code>，每个用空格相隔，例如</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"test1 test2"</span>);</div></pre></td></tr></table></figure>
<h4 id="5-5-document-querySelector和document-querySelectorAll"><a href="#5-5-document-querySelector和document-querySelectorAll" class="headerlink" title="5.5 document.querySelector和document.querySelectorAll"></a>5.5 document.querySelector和document.querySelectorAll</h4><hr>
<ul>
<li><p>这两个<code>api</code>很相似，通过<code>css</code>选择器来查找元素，注意选择器要符合<code>CSS</code>选择器的规则</p>
</li>
<li><p>首先来介绍一下<code>document.querySelector</code></p>
</li>
<li><code>document.querySelector</code>返回第一个匹配的元素，如果没有匹配的元素，则返回<code>null</code>。</li>
<li><strong>注意</strong>，由于返回的是第一个匹配的元素，这个<code>api</code>使用的深度优先搜索来获取元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span>第三级的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span>	</div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span>			</div><div class="line">    同级的第二个div</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btnGet"</span> <span class="attr">value</span>=<span class="string">"获取test元素"</span> /&gt;</span></div><div class="line"></div><div class="line">document.getElementById("btnGet").addEventListener("click",function()&#123;</div><div class="line">	var element = document.querySelector(".test");</div><div class="line">	alert(element.textContent);</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><p>这个例子很简单，就是两个<code>class</code>都包<code>含“test”</code>的元素，一个在文档树的前面，但是它在第三级，另一个在文档树的后面，但它在第一级，通过<code>querySelector</code>获取元素时，它通过深度优先搜索，拿到文档树前面的第三级的元素</p>
</li>
<li><p><code>document.querySelectorAll</code>的不同之处在于它返回的是所有匹配的元素，而且可以匹配多个选择符</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">    class为test</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">    id为test</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btnShow"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"显示内容"</span> /&gt;</span></div><div class="line"></div><div class="line">document.getElementById("btnShow").addEventListener("click",function()&#123;</div><div class="line">	var elements = document.querySelectorAll("#test,.test");	</div><div class="line">	for(var i = 0,length = elements.length;i<span class="tag">&lt;<span class="name">length;i++)&#123;</span></span></div><div class="line">		<span class="attr">alert</span>(<span class="attr">elements</span>[<span class="attr">i</span>]<span class="attr">.textContent</span>);</div><div class="line">	&#125;	</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<ul>
<li><p>这段代码通过<code>querySelectorAll</code>，使用<code>id</code>选择器和<code>class</code>选择器选择了两个元素，并依次输出其内容。要注意两点：</p>
<ul>
<li><code>querySelectorAll</code>也是通过深度优先搜索，搜索的元素顺序和选择器的顺序无关</li>
<li>返回的是一个非即时的<code>NodeList</code>，也就是说结果不会随着文档树的变化而变化</li>
</ul>
</li>
<li><p><strong>兼容性问题</strong>：<code>querySelector</code>和<code>querySelectorAll</code>在<code>ie8</code>以下的浏览器不支持</p>
</li>
<li><p><strong>小结</strong>：</p>
<ul>
<li><code>document.getElementById</code>返回一个对象</li>
<li><code>document.getElementsByName</code>和<code>document.getElementsByClasName</code>返回一个对象数组</li>
</ul>
</li>
</ul>
<h3 id="六、节点关系型API"><a href="#六、节点关系型API" class="headerlink" title="六、节点关系型API"></a>六、节点关系型API</h3><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d8.png" alt=""></p>
<ul>
<li>在<code>html</code>文档中的每个节点之间的关系都可以看成是家谱关系，包含父子关系，兄弟关系等等</li>
</ul>
<h4 id="6-1-父关系型API"><a href="#6-1-父关系型API" class="headerlink" title="6.1 父关系型API"></a>6.1 父关系型API</h4><hr>
<ul>
<li><code>parentNode</code>：每个节点都有一个<code>parentNode</code>属性，它表示元素的父节点。<code>Element</code>的父节点可能是<code>Element</code>，<code>Document</code>或<code>DocumentFragment</code></li>
<li><code>parentElement</code>：返回元素的父元素节点，与<code>parentNode</code>的区别在于，其父节点必须是一个<code>Element</code>，如果不是，则返回<code>null</code></li>
</ul>
<h4 id="6-2-兄弟关系型API"><a href="#6-2-兄弟关系型API" class="headerlink" title="6.2 兄弟关系型API"></a>6.2 兄弟关系型API</h4><hr>
<ul>
<li><code>previousSibling</code>：节点的前一个节点，如果该节点是第一个节点，则为<code>null</code>。注意有可能拿到的节点是文本节点或注释节点，与预期的不符，要进行处理一下</li>
<li><p><code>previousElementSibling</code>：返回前一个元素节点，前一个节点必须是<code>Element</code>，注意<code>IE9</code>以下浏览器不支持</p>
</li>
<li><p><code>nextSibling</code> <code>previousSibling</code> 存在兼容性问题</p>
</li>
<li><p><code>nextElementSibling</code> <code>previousElementSibling</code> 推荐使用</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">'ul1'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> firstEle = oUl.firstElementChild;</div><div class="line">    <span class="keyword">var</span> lastEle = oUl.lastElementChild;</div><div class="line"></div><div class="line">    firstEle.nextElementSibling.style.background = <span class="string">'red'</span>;</div><div class="line">    lastEle.previousElementSibling.style.background = <span class="string">'green'</span>;</div><div class="line"></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d9.png" alt=""></p>
<ul>
<li><code>nextSibling</code>：节点的后一个节点，如果该节点是最后一个节点，则为<code>null</code>。注意有可能拿到的节点是文本节点，与预期的不符，要进行处理一下</li>
<li><code>nextElementSibling</code>：返回后一个元素节点，后一个节点必须是<code>Element</code>，注意<code>IE9</code>以下浏览器不支持</li>
</ul>
<h4 id="6-3-子关系型API"><a href="#6-3-子关系型API" class="headerlink" title="6.3 子关系型API"></a>6.3 子关系型API</h4><hr>
<ul>
<li><code>childNodes</code>：<ul>
<li>返回一个即时的<code>NodeList</code>，表示元素的子节点列表，子节点可能会包含文本节点，注释节点等。<code>childNodes</code>子节点列表集合（只读属性 有兼容性问题 ）</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>44444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">'ul1'</span>);</div><div class="line">    <span class="built_in">console</span>.log(oUl.childNodes);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d10.png" alt=""></p>
<ul>
<li><p>从截图中可以看出 这段代码中<code>ul</code>的子节点有<code>9</code>个，这说明使用<code>childNodes</code>获取的节点包括了文本节点和元素节点</p>
</li>
<li><p><code>childNodes</code> 在低版本的<code>ie</code> 浏览器下获取的节点只包括元素节点，这就导致了兼容性问题</p>
</li>
<li>如何解决兼容性？？<ul>
<li>根据子节点的<code>nodeType</code>属性值判断</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;oUl.childNodes.length; i++) &#123;</div><div class="line"></div><div class="line">     <span class="keyword">if</span> ( oUl.childNodes[i].nodeType == <span class="number">1</span> ) &#123;</div><div class="line">        oUl.childNodes[i].style.background = <span class="string">'red'</span>;</div><div class="line">     &#125;</div><div class="line"></div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>children</code>：</p>
<ul>
<li>一个即时的<code>HTMLCollection</code>，子节点都是<code>Element</code>，<code>IE9</code>以下浏览器不支持。<code>children</code>子节点列表集合（只读属性 推荐使用 ）</li>
</ul>
</li>
<li><p><code>children</code> 获取的子节点只包含元素节点</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;oUl.children.length; i++)&#123;</div><div class="line">    oUl.children[i].style.background = <span class="string">'red'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>firstNode</code>：第一个子节点</li>
<li><p><code>lastNode</code>：最后一个子节点</p>
</li>
<li><p><code>firstChild</code> （firstElementChild） <code>lastChild</code>(lastElementChild) 第一个子节点 最后一个子节点</p>
</li>
<li><p><code>firstChild</code> 、<code>lastChild</code> 和<code>childNodes</code>同样的存在兼容性问题，在低版本<code>ie</code>浏览器中只能获取到元素节点</p>
</li>
<li><p><code>firstElementChild</code>、 <code>lastElementChild</code> 获取第一个元素子节点，最后一个元素子节点 推荐使用</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">'ul1'</span>);</div><div class="line"></div><div class="line"><span class="comment">//    oUl.firstChild.style.background = 'red';//标准浏览器 报错</span></div><div class="line"><span class="comment">//    oUl.lastChild.style.background = 'red';//标准浏览器 报错</span></div><div class="line"></div><div class="line">oUl.firstElementChild.style.background = <span class="string">'red'</span>;</div><div class="line">oUl.lastElementChild.style.background = <span class="string">'red'</span>;</div></pre></td></tr></table></figure>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d11.png" alt=""></p>
<ul>
<li><code>hasChildNodes</code>方法：可以用来判断是否包含子节点</li>
</ul>
<h3 id="七、元素属性型"><a href="#七、元素属性型" class="headerlink" title="七、元素属性型"></a>七、元素属性型</h3><hr>
<h4 id="7-1-setAttribute"><a href="#7-1-setAttribute" class="headerlink" title="7.1 setAttribute"></a>7.1 setAttribute</h4><hr>
<ul>
<li><code>setAttribute</code>：它允许我们对元素属性值做出修改与<code>getAttribute</code>一样<code>setAttribute</code>也能用于元素节点</li>
<li>通过<code>setAttribute</code>对文档做出修改后，在通过浏览器的查看源码选项看到的任然是改变之前的属性值，也就是说<code>setAttribue</code>做出的修改，不会反应到文档本身的源码里</li>
<li><code>setAttribute</code>优势在于可以修改文档中的任何一个属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">element.setAttribute(name, value);</div></pre></td></tr></table></figure>
<ul>
<li>其中<code>name</code>是特性名，<code>value</code>是特性值。如果元素不包含该特性，则会创建该特性并赋值。</li>
<li>如果元素本身包含指定的特性名为属性，则可以访问属性进行赋值，比如下面两条代码是等价</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">element.setAttribute(<span class="string">"id"</span>,<span class="string">"test"</span>);</div><div class="line"></div><div class="line">element.id = <span class="string">"test"</span>;</div></pre></td></tr></table></figure>
<ul>
<li><p><strong>非DOM的解决方案</strong></p>
<ul>
<li>其实不用<code>setAttribute</code>也可以改变元素的属性</li>
<li><code>setAttribute</code>方法是第一级<code>DOM</code>的组成部分，它可以设计任何元素节点的任意属性。在第1级<code>DOM</code>出现之前，你可以通过另外一种办法设置大部分元素的属性</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.value = <span class="string">"the new value"</span>;</div></pre></td></tr></table></figure>
<p>与下面语句等价</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.setAttribute(<span class="string">"value"</span>,<span class="string">"the new value"</span>);</div></pre></td></tr></table></figure>
<h4 id="7-2-getAttribute"><a href="#7-2-getAttribute" class="headerlink" title="7.2 getAttribute"></a>7.2 getAttribute</h4><hr>
<ul>
<li><code>getAttribute</code>返回指定的特性名相应的特性值，如果不存在，则返回<code>null</code>或空字符串。</li>
<li><code>getAttribute</code>不属性<code>doucment</code>对象，不能通过<code>document</code>对象调用，只能通过元素节点对象调用</li>
<li>例如可以与<code>getElementsByTagName</code>方法合用，获取每个<code>p</code>的<code>title</code>属性</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> paras = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;para.lenght;i++)&#123;</div><div class="line">    alert(paras.getAttrtitube(<span class="string">"title"</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="八、表格操作"><a href="#八、表格操作" class="headerlink" title="八、表格操作"></a>八、表格操作</h3><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d12.png" alt=""></p>
<h3 id="九、样式操作"><a href="#九、样式操作" class="headerlink" title="九、样式操作"></a>九、样式操作</h3><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d13.png" alt=""></p>
<h3 id="十、大小和偏移"><a href="#十、大小和偏移" class="headerlink" title="十、大小和偏移"></a>十、大小和偏移</h3><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d14.png" alt=""></p>
<h3 id="十一、网上的一张思维导图总结"><a href="#十一、网上的一张思维导图总结" class="headerlink" title="十一、网上的一张思维导图总结"></a>十一、网上的一张思维导图总结</h3><hr>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/d15.png" alt=""></p>
<hr>
<ul>
<li>参考<ul>
<li><code>JavaScript DOM</code>编程艺术</li>
<li><a href="http://www.jianshu.com/p/e1391dc17361" target="_blank" rel="external">常用DOM操作</a></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><a href="https://github.com/poetries/poetries.github.io/blob/dev/source/_posts/DOM%E7%BC%96%E7%A8%8B%E4%B9%8BAPI%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%E7%AF%87.md" target="_blank" rel="external">本文mardown原文件</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文 &lt;a href=&quot;http://blog.poetries.top/2016/09/22/DOM%E7%BC%96%E7%A8%8B%E4%B9%8BAPI%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%E7%AF%87/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一、基本类型介绍&quot;&gt;&lt;a href=&quot;#一、基本类型介绍&quot; class=&quot;headerlink&quot; title=&quot;一、基本类型介绍&quot;&gt;&lt;/a&gt;一、基本类型介绍&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;1-1-Node类型&quot;&gt;&lt;a href=&quot;#1-1-Node类型&quot; class=&quot;headerlink&quot; title=&quot;1.1 Node类型&quot;&gt;&lt;/a&gt;1.1 Node类型&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DOM1&lt;/code&gt;级定义了一个&lt;code&gt;Node&lt;/code&gt;接口，该接口由&lt;code&gt;DOM&lt;/code&gt;中所有节点类型实现。这个&lt;code&gt;Node&lt;/code&gt;接口在&lt;code&gt;JS&lt;/code&gt;中是作为&lt;code&gt;Node&lt;/code&gt;类型实现的。在&lt;code&gt;IE9&lt;/code&gt;以下版本无法访问到这个类型，&lt;code&gt;JS&lt;/code&gt;中所有节点都继承自&lt;code&gt;Node&lt;/code&gt;类型，都共享着相同的基本属性和方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Node&lt;/code&gt;有一个属性&lt;code&gt;nodeType&lt;/code&gt;表示&lt;code&gt;Node&lt;/code&gt;的类型，它是一个整数，其数值分别表示相应的&lt;code&gt;Node&lt;/code&gt;类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xq6al.com1.z0.glb.clouddn.com/d1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
      <category term="DOM" scheme="http://www.poetries.top/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的this的一些用法</title>
    <link href="http://www.poetries.top/2016/09/20/JavaScript%E4%B8%ADthis%E7%9A%84%E4%B8%80%E4%BA%9B%E7%94%A8%E6%B3%95/"/>
    <id>http://www.poetries.top/2016/09/20/JavaScript中this的一些用法/</id>
    <published>2016-09-20T12:09:43.000Z</published>
    <updated>2016-11-26T10:58:54.810Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、global-this"><a href="#一、global-this" class="headerlink" title="一、global this"></a>一、global this</h4><hr>
<ul>
<li>总结起来就是：在浏览器里面<code>this</code>是老大，它等价于<code>window</code>对象，如果你声明一些全局变量(不管在任何地方)，这些变量都会作为<code>this</code>的属性。</li>
<li>在node里面，有两种执行<code>JavaScript</code>代码的方式，一种是直接执行写好的<code>JavaScript</code>文件，另外一种是直接在里面执行一行行代码。</li>
<li>对于直接运行一行行<code>JavaScript</code>代码的方式，<code>global</code>才是老大，<code>this</code>和它是等价的。在这种情况下，和浏览器比较相似</li>
<li>也就是声明一些全局变量会自动添加给老大<code>global</code>，顺带也会添加给<code>this</code>。</li>
<li>但是在<code>node</code>里面直接脚本文件就不一样了，你声明的全局变量不会自动添加到<code>this</code>，但是会添加到<code>global</code>对象。所以相同点是，在全局范围内，全局变量终究是属于老大的</li>
</ul>
<a id="more"></a>
<h4 id="二、function-this"><a href="#二、function-this" class="headerlink" title="二、function this"></a>二、function this</h4><hr>
<ul>
<li>如果不是用<code>new</code>调用，在函数里面使用<code>this</code>都是指代全局范围的<code>this</code></li>
<li>函数里面的<code>this</code>其实相对比较好理解，如果我们在一个函数里面使用<code>this</code>，需要注意的就是我们调用函数的方式，如果是正常的方式调用函数，this指代全局的this</li>
<li>如果我们加一个<code>new</code>，这个函数就变成了一个构造函数，我们就创建了一个实例，<code>this</code>指代这个实例，这个和其他面向对象的语言很像</li>
<li>另外，写<code>JavaScript</code>很常做的一件事就是绑定事件处理程序，也就是诸如<code>button.addEventListener(‘click’, fn, false)</code>之类的，如果在<code>fn</code>里面需要使用<code>this</code>，<code>this</code>指代事件处理程序对应的对象，也就是<code>button</code></li>
</ul>
<h4 id="三、prototype-this"><a href="#三、prototype-this" class="headerlink" title="三、prototype this"></a>三、prototype this</h4><hr>
<ul>
<li>你创建的每一个函数都是函数对象。它们会自动获得一个特殊的属性<code>prototype</code>，你可以给这个属性赋值。当你用<code>new</code>的方式调用一个函数的时候，你就能通过<code>this</code>访问你给<code>prototype</code>赋的值了</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Thing</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.foo);</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> Thing.prototype.foo = <span class="string">"bar"</span>;</div><div class="line"></div><div class="line"> <span class="keyword">var</span> thing = <span class="keyword">new</span> Thing(); <span class="comment">//logs "bar"</span></div><div class="line"> <span class="built_in">console</span>.log(thing.foo);  <span class="comment">//logs "bar"</span></div></pre></td></tr></table></figure>
<ul>
<li><p>当你使用<code>new</code>为你的函数创建多个实例的时候，这些实例会共享你给<code>prototype</code>设定的值。当你调用<code>this.foo</code>的时候，都会返回相同的值，除非你在某个实例里面重写了自己的<code>this.foo</code></p>
</li>
<li><p>实例里面的<code>this</code>是一个特殊的对象。你可以把<code>this</code>想成一种获取<code>prototype</code>的值的一种方式。当你在一个实例里面直接给<code>this</code>添加属性的时候，会隐藏<code>prototype</code>中与之同名的属性。如果你想访问<code>prototype</code>中的这个属性值而不是你自己设定的属性值，你可以通过在实例里面删除你自己添加的属性的方式来实现</p>
</li>
<li><p>通过一个函数创建的实例会共享这个函数的<code>prototype</code>属性的值，如果你给这个函数的<code>prototype</code>赋值一个<code>Array</code>，那么所有的实例都会共享这个<code>Array</code>，除非你在实例里面重写了这个<code>Array</code>，这种情况下，函数的<code>prototype</code>的<code>Array</code>就会被隐藏掉</p>
</li>
<li>给一个函数的<code>prototype</code>赋值一个<code>Array</code>通常是一个错误的做法。如果你想每一个实例有他们专属的<code>Array</code>，你应该在函数里面创建而不是在<code>prototype</code>里面创建</li>
<li>实际上你可以通过把多个函数的<code>prototype</code>链接起来的从而形成一个原型链，因此<code>this</code>就会魔法般地沿着这条原型链往上查找直到找你你需要引用的值</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Thing1</span>(<span class="params"></span>) </span>&#123;</div><div class="line"> </div><div class="line">    Thing1.prototype.foo = <span class="string">"bar"</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Thing2</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">    Thing2.prototype = <span class="keyword">new</span> Thing1();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> thing = <span class="keyword">new</span> Thing2();</div><div class="line">    <span class="built_in">console</span>.log(thing.foo); <span class="comment">//logs "bar"</span></div></pre></td></tr></table></figure>
<h4 id="四、object-this"><a href="#四、object-this" class="headerlink" title="四、object this"></a>四、object this</h4><hr>
<ul>
<li>在一个对象的一个函数里，你可以通过<code>this</code>来引用这个对象的其他属性。这个用<code>new</code>来新建一个实例是不一样的</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">     <span class="attr">foo</span>: <span class="string">"bar"</span>,</div><div class="line">     <span class="attr">logFoo</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">         <span class="built_in">console</span>.log(<span class="keyword">this</span>.foo);</div><div class="line">     &#125;</div><div class="line"> &#125;;</div><div class="line"> </div><div class="line"> obj.logFoo(); <span class="comment">//logs "bar"</span></div></pre></td></tr></table></figure>
<ul>
<li><strong>注意</strong>，没有使用<code>new</code>，没有使用<code>Object.create</code>，也没有使用函数调用创建一个对象。你也可以将对象当作一个实例将函数绑定到上面</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">foo</span>: <span class="string">"bar"</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">logFoo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.foo);</div><div class="line">&#125;</div><div class="line"></div><div class="line">logFoo.apply(obj); <span class="comment">//logs "bar"</span></div></pre></td></tr></table></figure>
<h4 id="五、DOM-event-this"><a href="#五、DOM-event-this" class="headerlink" title="五、DOM event this"></a>五、DOM event this</h4><hr>
<ul>
<li>在一个<code>HTML DOM</code>事件处理程序里面，<code>this</code>始终指向这个处理程序被所绑定到的<code>HTML DOM</code>节点</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Listener</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="built_in">document</span>.getElementById(<span class="string">"foo"</span>).addEventListener(<span class="string">"click"</span>,</div><div class="line">         <span class="keyword">this</span>.handleClick);</div><div class="line">  &#125;</div><div class="line">  Listener.prototype.handleClick = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//logs "&lt;div id="foo"&gt;&lt;/div&gt;"</span></div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="keyword">var</span> listener = <span class="keyword">new</span> Listener();</div><div class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"foo"</span>).click();</div></pre></td></tr></table></figure>
<ul>
<li>除非你自己通过<code>bind</code>切换了上下文</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Listener</span>(<span class="params"></span>) </span>&#123;</div><div class="line">     <span class="built_in">document</span>.getElementById(<span class="string">"foo"</span>).addEventListener(<span class="string">"click"</span>, </div><div class="line">         <span class="keyword">this</span>.handleClick.bind(<span class="keyword">this</span>));</div><div class="line"> &#125;</div><div class="line"> Listener.prototype.handleClick = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">     <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//logs Listener &#123;handleClick: function&#125;</span></div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> <span class="keyword">var</span> listener = <span class="keyword">new</span> Listener();</div><div class="line"> <span class="built_in">document</span>.getElementById(<span class="string">"foo"</span>).click();</div></pre></td></tr></table></figure>
<h4 id="六、HTML-this"><a href="#六、HTML-this" class="headerlink" title="六、HTML this"></a>六、HTML this</h4><hr>
<ul>
<li>在<code>HTML</code>节点的属性里面，你可以放置<code>JavaScript</code>代码，<code>this</code>指向了这个元素</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;div id=<span class="string">"foo"</span> onclick=<span class="string">"console.log(this);"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"> &lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line"> <span class="built_in">document</span>.getElementById(<span class="string">"foo"</span>).click(); <span class="comment">//logs &lt;div id="foo"...</span></div><div class="line"> &lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h4 id="七、override-this"><a href="#七、override-this" class="headerlink" title="七、override this"></a>七、override this</h4><hr>
<ul>
<li>你不能重写<code>this</code>，因为它是保留字</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> <span class="keyword">this</span> = &#123;&#125;;  <span class="comment">// Uncaught SyntaxError: Unexpected token this </span></div><div class="line"> &#125;</div><div class="line"><span class="built_in">eval</span> <span class="keyword">this</span></div></pre></td></tr></table></figure>
<ul>
<li>你可以通过<code>eval</code>来访问<code>this</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Thing</span> (<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">Thing.prototype.foo = <span class="string">"bar"</span>;</div><div class="line"></div><div class="line">Thing.prototype.logFoo = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">eval</span>(<span class="string">"console.log(this.foo)"</span>); <span class="comment">//logs "bar"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> thing = <span class="keyword">new</span> Thing();</div><div class="line"></div><div class="line">thing.logFoo();</div></pre></td></tr></table></figure>
<ul>
<li>这会造成一个安全问题，除非不用<code>eval</code>，没有其他方式来避免这个问题</li>
</ul>
<h4 id="八、with-this"><a href="#八、with-this" class="headerlink" title="八、with this"></a>八、with this</h4><hr>
<ul>
<li>你可以通过<code>with</code>来将<code>this</code>添加到当前的执行环境，并且读写<code>this</code>的属性的时候不需要通过<code>this</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Thing</span> (<span class="params"></span>) </span>&#123;</div><div class="line"> &#125;</div><div class="line"> Thing.prototype.foo = <span class="string">"bar"</span>;</div><div class="line"> Thing.prototype.logFoo = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">     <span class="keyword">with</span> (<span class="keyword">this</span>) &#123;</div><div class="line">         <span class="built_in">console</span>.log(foo);</div><div class="line">         foo = <span class="string">"foo"</span>;</div><div class="line">     &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> thing = <span class="keyword">new</span> Thing();</div><div class="line">thing.logFoo(); <span class="comment">// logs "bar"</span></div><div class="line"><span class="built_in">console</span>.log(thing.foo); <span class="comment">// logs "foo"</span></div></pre></td></tr></table></figure>
<ul>
<li>许多人认为这样使用是不好的因为<code>with</code>本身就饱受争议</li>
</ul>
<h4 id="九、jQuery-this"><a href="#九、jQuery-this" class="headerlink" title="九、jQuery this"></a>九、jQuery this</h4><hr>
<ul>
<li>和<code>HTML DOM</code>元素节点的事件处理程序一样，在许多情况下<code>JQuery</code>的<code>this</code>都指向<code>HTML</code>元素节点。这在事件处理程序和一些方便的方法中都是管用的，比如<code>$.each</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"foo bar1"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"></div><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"foo bar2"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"> </div><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">     $(<span class="string">".foo"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">         <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//logs &lt;div class="foo...</span></div><div class="line">     &#125;);</div><div class="line">     $(<span class="string">".foo"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">         <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//logs &lt;div class="foo...</span></div><div class="line">     &#125;);</div><div class="line">    $(<span class="string">".foo"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.click();</div><div class="line">    &#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、global-this&quot;&gt;&lt;a href=&quot;#一、global-this&quot; class=&quot;headerlink&quot; title=&quot;一、global this&quot;&gt;&lt;/a&gt;一、global this&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;总结起来就是：在浏览器里面&lt;code&gt;this&lt;/code&gt;是老大，它等价于&lt;code&gt;window&lt;/code&gt;对象，如果你声明一些全局变量(不管在任何地方)，这些变量都会作为&lt;code&gt;this&lt;/code&gt;的属性。&lt;/li&gt;
&lt;li&gt;在node里面，有两种执行&lt;code&gt;JavaScript&lt;/code&gt;代码的方式，一种是直接执行写好的&lt;code&gt;JavaScript&lt;/code&gt;文件，另外一种是直接在里面执行一行行代码。&lt;/li&gt;
&lt;li&gt;对于直接运行一行行&lt;code&gt;JavaScript&lt;/code&gt;代码的方式，&lt;code&gt;global&lt;/code&gt;才是老大，&lt;code&gt;this&lt;/code&gt;和它是等价的。在这种情况下，和浏览器比较相似&lt;/li&gt;
&lt;li&gt;也就是声明一些全局变量会自动添加给老大&lt;code&gt;global&lt;/code&gt;，顺带也会添加给&lt;code&gt;this&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;但是在&lt;code&gt;node&lt;/code&gt;里面直接脚本文件就不一样了，你声明的全局变量不会自动添加到&lt;code&gt;this&lt;/code&gt;，但是会添加到&lt;code&gt;global&lt;/code&gt;对象。所以相同点是，在全局范围内，全局变量终究是属于老大的&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="JavaScript" scheme="http://www.poetries.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Emmet常用快捷键</title>
    <link href="http://www.poetries.top/2016/09/09/Emmet%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://www.poetries.top/2016/09/09/Emmet常用快捷键/</id>
    <published>2016-09-09T13:00:08.000Z</published>
    <updated>2016-11-26T10:58:54.810Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><hr>
<ul>
<li><p><code>div+div&gt;p&gt;span+em^bq</code></p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>div+div&gt;p&gt;span+em^^bq</code></p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>ul&gt;li.item$*5</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>h$[title=item$]{Header $}*3</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">"item1"</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">title</span>=<span class="string">"item2"</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">title</span>=<span class="string">"item3"</span>&gt;</span>Header 3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>ul&gt;li.item$$$*5</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item001"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item002"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item003"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item004"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item005"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>ul&gt;li.item$@-*5</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>ul&gt;li.item$@3*5</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item6"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item7"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>form#search.wide</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"search"</span> <span class="attr">class</span>=<span class="string">"wide"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>p.class1.class2.class3</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"class1 class2 class3"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>td[rowspan=2 colspan=3 title]</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span> <span class="attr">colspan</span>=<span class="string">"3"</span> <span class="attr">title</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><hr>
<ul>
<li><strong><code>!</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>a:link</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>a:mail</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>link:css</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span> /&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>link:favicon</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">type</span>=<span class="string">"image/x-icon"</span> <span class="attr">href</span>=<span class="string">"favicon.ico"</span> /&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>link:rss</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">type</span>=<span class="string">"application/rss+xml"</span> <span class="attr">title</span>=<span class="string">"RSS"</span> <span class="attr">href</span>=<span class="string">"rss.xml"</span> /&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>meta:utf</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span> /&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>script:src</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>form:get</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<ul>
<li><strong><code>input:hidden</code>,<code>input:h</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">""</span> /&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>input:text</code>, <code>input:t</code></li>
<li><code>input:password,</code> <code>input:p</code></li>
<li><code>input:checkbox</code>, <code>input:c</code></li>
<li><code>input:radio</code>,<code>input:r</code></li>
<li><code>input:file</code>, <code>input:f</code></li>
<li><code>input:submit</code>, <code>input:s</code></li>
<li><code>input:image</code>,<code>input:i</code></li>
<li><code>input:button</code>, <code>input:b</code></li>
</ul>
<hr>
<ul>
<li><strong><code>option</code>, <code>opt</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>button:disabled</code>,<code>button:d</code>, <code>btn:d</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>ifr</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">frameborder</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><code>btn</code></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>ul+</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>dl+</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div><div class="line">`</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>table+</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>tr+</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>select+</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>c</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- --&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li><strong><code>cc:ie6</code></strong></li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lte IE 6]&gt;</span></div><div class="line">    $&#123;child&#125;</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><h4 id="visual-formating"><a href="#visual-formating" class="headerlink" title="visual formating"></a>visual formating</h4><hr>
<ul>
<li><p><code>pos:s</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">position</span><span class="selector-pseudo">:static</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pos:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pos:r</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pos:f</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">position</span><span class="selector-pseudo">:fixed</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>t</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">top</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>b:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">bottom</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>l</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">left</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>l:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">left</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>z</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">z-index</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>z:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">z-index</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fl</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fl:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">float</span><span class="selector-pseudo">:none</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fl:l</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fl:r</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">float</span><span class="selector-pseudo">:right</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cl</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cl:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:none</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cl:l</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:left</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cl:r</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:right</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cl:b</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:block</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d:b</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:block</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d:i</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:inline</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d:ib</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:inline-block</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d:itb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:inline-table</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>d:tbc</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">display</span><span class="selector-pseudo">:table-cell</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>v</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">visibility</span><span class="selector-pseudo">:hidden</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>v:v</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">visibility</span><span class="selector-pseudo">:visible</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>v:h</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">visibility</span><span class="selector-pseudo">:hidden</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ov</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ov:v</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:visible</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ov:h</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ov:s</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:scroll</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>zoo, zm</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">zoom</span><span class="selector-pseudo">:1</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cur:d</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">cursor</span><span class="selector-pseudo">:default</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cur:ha</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">cursor</span><span class="selector-pseudo">:hand</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>cur:p</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">cursor</span><span class="selector-pseudo">:pointer</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h4 id="Margin-amp-Padding"><a href="#Margin-amp-Padding" class="headerlink" title="Margin &amp; Padding"></a>Margin &amp; Padding</h4><hr>
<ul>
<li><p><code>m:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mt</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-top</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mt:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-top</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mr</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-right</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mr:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-right</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-bottom</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>mb:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-bottom</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ml</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-left</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ml:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">margin-left</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pt</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">padding-top</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pr</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">padding-right</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">padding-bottom</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>pl</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">padding-left</span>:;</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h4 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h4><ul>
<li><p><code>fw</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-weight</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fw:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-weight</span><span class="selector-pseudo">:normal</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fw:b</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-weight</span><span class="selector-pseudo">:bold</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fw:br</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-weight</span><span class="selector-pseudo">:bolder</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fw:lr</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-weight</span><span class="selector-pseudo">:lighter</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fs</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">font-style:$&#123;italic&#125;;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fs:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-style</span><span class="selector-pseudo">:normal</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>fz</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-size</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff:s</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span><span class="selector-pseudo">:serif</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff:ss</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span><span class="selector-pseudo">:sans-serif</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff:m</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span><span class="selector-pseudo">:monospace</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span>: <span class="selector-tag">Arial</span>, "<span class="selector-tag">Helvetica</span> <span class="selector-tag">Neue</span>", <span class="selector-tag">Helvetica</span>, <span class="selector-tag">sans-serif</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff:t</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span>: "<span class="selector-tag">Times</span> <span class="selector-tag">New</span> <span class="selector-tag">Roman</span>", <span class="selector-tag">Times</span>, <span class="selector-tag">Baskerville</span>, <span class="selector-tag">Georgia</span>, <span class="selector-tag">serif</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>ff:v</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-family</span>: <span class="selector-tag">Verdana</span>, <span class="selector-tag">Geneva</span>, <span class="selector-tag">sans-serif</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><ul>
<li><p><code>bg</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>:<span class="selector-id">#000</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bg+</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>:<span class="selector-id">#fff</span> <span class="selector-tag">url</span>() 0 0 <span class="selector-tag">no-repeat</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bg:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span><span class="selector-pseudo">:none</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgc</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-color</span>:<span class="selector-id">#fff</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgc:t</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-color</span><span class="selector-pseudo">:transparent</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgi</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-image</span><span class="selector-pseudo">:url()</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgi:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-image</span><span class="selector-pseudo">:none</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgr</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-repeat</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgr:n</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:no-repeat</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgr:x</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:repeat-x</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgr:y</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:repeat-y</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgr:sp</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:space</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgr:rd</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-repeat</span><span class="selector-pseudo">:round</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bga</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-attachment</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bga:f</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-attachment</span><span class="selector-pseudo">:fixed</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bga:s</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-attachment</span><span class="selector-pseudo">:scroll</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgp</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-position</span><span class="selector-pseudo">:0</span> 0;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgpx</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-position-x</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgpy</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-position-y</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgbk</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-break</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgbk:bb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-break</span><span class="selector-pseudo">:bounding-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgbk:eb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-break</span><span class="selector-pseudo">:each-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgbk:c</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-break</span><span class="selector-pseudo">:continuous</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgcp</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-clip</span><span class="selector-pseudo">:padding-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgcp:bb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-clip</span><span class="selector-pseudo">:border-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgcp:pb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-clip</span><span class="selector-pseudo">:padding-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgcp:cb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-clip</span><span class="selector-pseudo">:content-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgcp:nc</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-clip</span><span class="selector-pseudo">:no-clip</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgo</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-origin</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgo:pb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-origin</span><span class="selector-pseudo">:padding-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgo:bb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-origin</span><span class="selector-pseudo">:border-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgo:cb</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-origin</span><span class="selector-pseudo">:content-box</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgsz</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-size</span>:;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgsz:a</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-size</span><span class="selector-pseudo">:auto</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgsz:ct</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-size</span><span class="selector-pseudo">:contain</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>bgsz:cv</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background-size</span><span class="selector-pseudo">:cover</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Color"><a href="#Color" class="headerlink" title="Color"></a>Color</h4><hr>
<ul>
<li><p><code>c</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">color</span>:<span class="selector-id">#000</span>;</div></pre></td></tr></table></figure>
</li>
<li><p><code>c:r</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">color</span><span class="selector-pseudo">:rgb(0</span>, 0, 0);</div></pre></td></tr></table></figure>
</li>
<li><p><code>c:ra</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">color</span><span class="selector-pseudo">:rgba(0</span>, 0, 0, <span class="selector-class">.5</span>);</div></pre></td></tr></table></figure>
</li>
<li><p><code>op</code></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">opacity</span>:;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><hr>
<ul>
<li><strong><code>·@m·</code>, <code>@media</code>·</strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">media</span> screen &#123;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>@i</code>, <code>@import</code></strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">import</span> url();</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>@kf</code></strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">keyframes</span> identifier &#123;</div><div class="line">    <span class="selector-tag">from</span> &#123;  &#125;</div><div class="line">    <span class="selector-tag">to</span> &#123;  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>@f+</code></strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">font-face</span> &#123;</div><div class="line">    <span class="attribute">font-family</span>: <span class="string">'FontName'</span>;</div><div class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'FileName.eot'</span>);</div><div class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'FileName.eot?#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>),</div><div class="line">         <span class="built_in">url</span>(<span class="string">'FileName.woff'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>),</div><div class="line">         <span class="built_in">url</span>(<span class="string">'FileName.ttf'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>),</div><div class="line">         <span class="built_in">url</span>(<span class="string">'FileName.svg#FontName'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>);</div><div class="line">    <span class="attribute">font-style</span>: normal;</div><div class="line">    <span class="attribute">font-weight</span>: normal;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>@f</code></strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">font-face</span> &#123;</div><div class="line">    <span class="attribute">font-family</span>:;</div><div class="line">    <span class="attribute">src</span>:<span class="built_in">url</span>(|);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><strong><code>!</code></strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">!<span class="selector-tag">important</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;div+div&amp;gt;p&amp;gt;span+em^bq&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工欲善其事必先利其器" scheme="http://www.poetries.top/categories/%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B%E5%BF%85%E5%85%88%E5%88%A9%E5%85%B6%E5%99%A8/"/>
    
    
      <category term="Emmet" scheme="http://www.poetries.top/tags/Emmet/"/>
    
  </entry>
  
  <entry>
    <title>hasLayout知多少</title>
    <link href="http://www.poetries.top/2016/09/07/hasLayout%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <id>http://www.poetries.top/2016/09/07/hasLayout知多少/</id>
    <published>2016-09-07T11:20:08.000Z</published>
    <updated>2016-11-26T10:58:54.814Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是haslayout"><a href="#什么是haslayout" class="headerlink" title="什么是haslayout"></a>什么是haslayout</h3><hr>
<ul>
<li>什么是<code>hasLayout</code>？<code>hasLayout</code>是<code>IE</code>特有的一个属性。很多的<code>ie</code>下的<code>css bug</code>都与其息息相关。在<code>ie</code>中，一个元素要么自己对自身的内容进行计算大小和组织，要么依赖于父元素来计算尺寸和组织内容。当一个元素的<code>hasLayout</code>属性值为<code>true</code>时，它负责对自己和可能的子孙元素进行尺寸计算和定位。虽然这意味着这个元素需要花更多的代价来维护自身和里面的内容，而不是依赖于祖先元素来完成这些工作<a id="more"></a>
</li>
</ul>
<h3 id="默认拥有haslayout属性"><a href="#默认拥有haslayout属性" class="headerlink" title="默认拥有haslayout属性"></a>默认拥有haslayout属性</h3><hr>
<ul>
<li><code>&lt;html&gt;</code>, <code>&lt;body&gt;</code></li>
<li><code>&lt;table&gt;</code>, <code>&lt;tr&gt;</code>, <code>&lt;th&gt;</code>,<code>&lt;td&gt;</code></li>
<li><code>&lt;img&gt;</code></li>
<li><code>&lt;hr&gt;</code></li>
<li><code>&lt;input&gt;</code>, <code>&lt;button&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;textarea&gt;</code>, <code>&lt;fieldset&gt;</code>, <code>&lt;legend&gt;</code></li>
<li><code>&lt;iframe&gt;</code>, <code>&lt;embed&gt;</code>, <code>&lt;object&gt;</code>, <code>&lt;applet&gt;</code></li>
<li><code>&lt;marquee&gt;</code></li>
</ul>
<h3 id="触发haslayout属性"><a href="#触发haslayout属性" class="headerlink" title="触发haslayout属性"></a>触发haslayout属性</h3><hr>
<ul>
<li><p>很多情况下，我们把<code>hasLayout</code>的状态改成<code>true</code>就可以解决很大部分<code>ie</code>下显示的<code>bug</code>。<br><code>hasLayout</code>属性不能直接设定，你只能通过设定一些特定的<code>css</code>属性来触发并改变 <code>hasLayout</code>状态。下面列出可以触发<code>hasLayout</code>的一些<code>CSS</code>属性值</p>
<ul>
<li><p><code>display</code></p>
<ul>
<li>启动<code>haslayout</code>的值:<code>inline-block</code> </li>
<li>取消<code>hasLayout</code>的值:其他值 </li>
</ul>
</li>
<li><p><code>width</code> / <code>height</code></p>
<ul>
<li>启动<code>hasLayout</code>的值：除了<code>auto</code>以外的值</li>
<li>取消<code>hasLayout</code>的值：<code>auto</code><ul>
<li>( 对 <code>IE6</code>及更早版本来说很常用，该方法被称为霍莉破解(<code>Holly hack</code>)，即设定这个元素的高度为 <code>1%</code>  (<code>height:1%</code>;)。但是要注意，当这个元素的 <code>overflow</code> 属性被设置为 <code>visible</code> 时，这个方法就失效了。)</li>
</ul>
</li>
</ul>
</li>
<li><p><code>position</code></p>
<ul>
<li>启动hasLayout的值：absolute </li>
<li>取消hasLayout的值：static </li>
</ul>
</li>
<li><p><code>float</code></p>
<ul>
<li>启动<code>hasLayout</code>的值：<code>left</code>或<code>right</code></li>
<li>取消<code>hasLayout</code>的值：<code>none</code> </li>
</ul>
</li>
<li><p><code>zoom</code></p>
<ul>
<li>启动<code>hasLayout</code>的值：有值 </li>
<li>取消<code>hasLayout</code>的值：<code>narmal</code>或者空值 </li>
<li>(又一个<code>ie</code>私有属性，不兼容标准。)</li>
</ul>
</li>
<li><p><code>ie7</code>还有一些额外的属性可以触发该属性（不完全列表）： </p>
<ul>
<li><code>min-height:</code> (任何值) </li>
<li><code>max-height:</code>(任何值除了<code>none</code>) </li>
<li><code>min-width:</code>(任何值) </li>
<li><code>max-width:</code> (任何值除了<code>none</code>) </li>
<li><code>overflow:</code>(任何值除了<code>visible</code>) </li>
<li><code>overflow-x:</code> (任何值除了<code>visible</code>) </li>
<li><code>overflow-y:</code> (任何值除了<code>visible</code>)</li>
<li><code>position: fixed</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="发现及使用"><a href="#发现及使用" class="headerlink" title="发现及使用"></a>发现及使用</h3><hr>
<ul>
<li>因元素<code>hasLayout</code>而导致的问题其实一般都很容易发现：往往是内容出现错位甚至完全不可见，比如含浮动或者绝对定位子元素的容器高度会塌陷，在<code>ie6/ie7</code>下我们为其添加<code>zoom：1</code>属性就触发了<code>haslayout</code>，从而修复高度塌陷的问题;再比如，我们经常会碰到<code>ie6</code>和<code>ie7</code>同时出现的<code>bug</code>，这个时候可以考虑是否源于 <code>haslayout</code>，可以添加一些可以触发<code>haslayout</code>的属性来解决</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是haslayout&quot;&gt;&lt;a href=&quot;#什么是haslayout&quot; class=&quot;headerlink&quot; title=&quot;什么是haslayout&quot;&gt;&lt;/a&gt;什么是haslayout&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;什么是&lt;code&gt;hasLayout&lt;/code&gt;？&lt;code&gt;hasLayout&lt;/code&gt;是&lt;code&gt;IE&lt;/code&gt;特有的一个属性。很多的&lt;code&gt;ie&lt;/code&gt;下的&lt;code&gt;css bug&lt;/code&gt;都与其息息相关。在&lt;code&gt;ie&lt;/code&gt;中，一个元素要么自己对自身的内容进行计算大小和组织，要么依赖于父元素来计算尺寸和组织内容。当一个元素的&lt;code&gt;hasLayout&lt;/code&gt;属性值为&lt;code&gt;true&lt;/code&gt;时，它负责对自己和可能的子孙元素进行尺寸计算和定位。虽然这意味着这个元素需要花更多的代价来维护自身和里面的内容，而不是依赖于祖先元素来完成这些工作
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS中的BFC</title>
    <link href="http://www.poetries.top/2016/09/07/CSS%E4%B8%AD%E7%9A%84BFC/"/>
    <id>http://www.poetries.top/2016/09/07/CSS中的BFC/</id>
    <published>2016-09-07T10:20:08.000Z</published>
    <updated>2016-11-26T10:58:54.806Z</updated>
    
    <content type="html"><![CDATA[<h3 id="BFC-是什么？"><a href="#BFC-是什么？" class="headerlink" title="BFC 是什么？"></a>BFC 是什么？</h3><ul>
<li><code>BFC</code> (<code>Block Formatting Contexts</code>) 即块级格式化上下文，从样式上看，它与普通的容器没有什么区别，但是从功能上，<code>BFC</code> 可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 <code>BFC</code> 具有普通容器没有的一些特性，例如可以包含浮动元素，使到它可以包含浮动元素，从而防止出现高度塌陷的问题<a id="more"></a>
</li>
</ul>
<hr>
<h3 id="如何触发-BFC"><a href="#如何触发-BFC" class="headerlink" title="如何触发 BFC"></a>如何触发 BFC</h3><ul>
<li><p>触发 BFC 的条件</p>
<ul>
<li>浮动元素，<code>float</code> 除 <code>none</code> 以外的值</li>
<li>绝对定位元素，<code>position</code>（<code>absolute</code>，<code>fixed</code>）</li>
<li><code>display</code> 为以下其中之一的值 <code>inline-blocks</code>，<code>table-cells</code>，<code>table-captions</code></li>
<li><code>overflow</code> 除了 <code>visible</code> 以外的值（<code>hidden</code>，<code>auto</code>，<code>scroll</code>）</li>
</ul>
<ul>
<li>在 <code>CSS3</code> 中，<code>BFC</code> 叫做<code>Flow Root</code>，并增加了一些触发条件：<ul>
<li><code>display</code> 的 <code>table-caption</code> 值</li>
<li><code>position</code> 的 <code>fixed</code> 值，其实 <code>fixed</code> 是 <code>absolute</code> 的一个子类，因此在 <code>CSS2.1</code> 中使用这个值也会触发 <code>BFC</code> ，只是在<code>CSS3</code> 中更加明确了这一点</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="BFC布局规则"><a href="#BFC布局规则" class="headerlink" title="BFC布局规则"></a>BFC布局规则</h3><ul>
<li>内部的<code>Box</code>会在垂直方向，一个接一个地放置。</li>
<li><code>Box</code>垂直方向的距离由<code>margin</code>决定。属于同一个<code>BFC</code>的两个相邻<code>Box</code>的<code>margin</code>会发生重叠</li>
<li>每个元素的<code>margin box</code>的左边， 与包含块<code>border box</code>的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如 此。</li>
<li><code>BFC</code>的区域不会与<code>float box</code>重叠。</li>
<li><code>BFC</code>就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li>
<li>计算<code>BFC</code>的高度时，浮动元素也参与计算</li>
</ul>
<hr>
<h3 id="BFC的作用及原理"><a href="#BFC的作用及原理" class="headerlink" title="BFC的作用及原理"></a>BFC的作用及原理</h3><ul>
<li><strong>自适应两栏布局</strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">       <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">       <span class="attribute">position</span>: relative;</div><div class="line">   &#125;</div><div class="line">   <span class="selector-class">.aside</span> &#123;</div><div class="line">       <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">       <span class="attribute">height</span>: <span class="number">150px</span>;</div><div class="line">       <span class="attribute">float</span>: left;</div><div class="line">       <span class="attribute">background</span>: <span class="number">#f66</span>;</div><div class="line">   &#125;</div><div class="line">   <span class="selector-class">.main</span> &#123;</div><div class="line">       <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">       <span class="attribute">background</span>: <span class="number">#fcc</span>;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"aside"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://p1.qhimg.com/d/inn/4055c62a/4dca44a927d4c1ffc30e3ae5f53a0b79.png" alt=""></p>
<ul>
<li>根据BFC布局规则第3条：<ul>
<li>每个元素的<code>margin box</code>的左边， 与包含块<code>border box</code>的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</li>
</ul>
</li>
<li>因此，虽然存在浮动的元素<code>aslide</code>，但<code>main</code>的左边依然会与包含块的左边相接触</li>
<li><p>根据<code>BFC</code>布局规则第四条：</p>
<ul>
<li><code>BFC</code>的区域不会与<code>float box</code>重叠</li>
</ul>
</li>
<li><p>我们可以通过通过触发<code>main</code>生成<code>BFC</code>， 来实现自适应两栏布局</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.main</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>当触发<code>main</code>生成<code>BFC</code>后，这个新的<code>BFC</code>不会与浮动的<code>aside</code>重叠。因此会根据包含块的宽度，和<code>aside</code>的宽度，自动变窄。效果如下：</li>
</ul>
<p><img src="http://p6.qhimg.com/t01077886a9706cb26b.png" alt=""></p>
<ul>
<li><strong>清除内部浮动</strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.par</span> &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#fcc</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"><span class="selector-class">.child</span> &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#f66</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"par"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://p1.qhimg.com/t016035b58195e7909a.png" alt=""></p>
<ul>
<li>根据<code>BFC</code>布局规则第六条：<ul>
<li>计算<code>BFC</code>的高度时，浮动元素也参与计算</li>
</ul>
</li>
<li>为达到清除内部浮动，我们可以触发<code>par</code>生成<code>BFC</code>，那么<code>par</code>在计算高度时，<code>par</code>内部的浮动元素<code>child</code>也会参与计算</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.par</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://p2.qhimg.com/t016bbbe5236ef1ffd5.png" alt=""></p>
<ul>
<li><strong>防止垂直 margin 重叠</strong></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#f55</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#fcc</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">100px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Haha<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hehe<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<p> <img src="http://p5.qhimg.com/t01b47b8b7d153c07cc.png" alt=""></p>
<ul>
<li>两个<code>p</code>之间的距离为<code>100px</code>，发送了<code>margin</code>重叠</li>
<li>根据BFC布局规则第二条：<ul>
<li><code>Box</code>垂直方向的距离由<code>margin</code>决定。属于同一个<code>BFC</code>的两个相邻Box的<code>margin</code>会发生重叠</li>
</ul>
</li>
<li>我们可以在<code>p</code>外面包裹一层容器，并触发该容器生成一个<code>BFC</code>。那么两个<code>P</code>便不属于同一个<code>BFC</code>，就不会发生<code>margin</code>重叠了</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.wrap</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#f55</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#fcc</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">100px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Haha<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hehe<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://p3.qhimg.com/t0118d1d2badbb00521.png" alt=""></p>
<hr>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>其实以上的几个例子都体现了<code>BFC</code>布局规则第五条<ul>
<li><code>BFC</code>就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此</li>
</ul>
</li>
<li>因为<code>BFC</code>内部的元素和外部的元素绝对不会互相影响，因此， 当<code>BFC</code>外部存在浮动时，它不应该影响<code>BFC</code>内部<code>Box</code>的布局，<code>BFC</code>会通过变窄，而不与浮动有重叠。同样的，当<code>BFC</code>内部有浮动时，为了不影响外部元素的布局，<code>BFC</code>计算高度时会包括浮动的高度。避免<code>margin</code>重叠也是这样的一个道理</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;BFC-是什么？&quot;&gt;&lt;a href=&quot;#BFC-是什么？&quot; class=&quot;headerlink&quot; title=&quot;BFC 是什么？&quot;&gt;&lt;/a&gt;BFC 是什么？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BFC&lt;/code&gt; (&lt;code&gt;Block Formatting Contexts&lt;/code&gt;) 即块级格式化上下文，从样式上看，它与普通的容器没有什么区别，但是从功能上，&lt;code&gt;BFC&lt;/code&gt; 可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 &lt;code&gt;BFC&lt;/code&gt; 具有普通容器没有的一些特性，例如可以包含浮动元素，使到它可以包含浮动元素，从而防止出现高度塌陷的问题
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>DIV+CSS系统学习笔记回顾</title>
    <link href="http://www.poetries.top/2016/09/06/DIV+CSS%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9E%E9%A1%BE/"/>
    <id>http://www.poetries.top/2016/09/06/DIV+CSS系统学习笔记回顾/</id>
    <published>2016-09-06T10:24:08.000Z</published>
    <updated>2016-11-26T10:58:54.810Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一部分-HTML"><a href="#第一部分-HTML" class="headerlink" title="第一部分 HTML"></a>第一部分 HTML</h3><hr>
<h4 id="第一章-职业规划和前景"><a href="#第一章-职业规划和前景" class="headerlink" title="第一章 职业规划和前景"></a>第一章 职业规划和前景</h4><hr>
<ul>
<li><p><strong>职业方向规划定位：</strong></p>
<ul>
<li><code>web</code>前端开发工程师</li>
<li><code>web</code>网站架构师</li>
<li>自己创业</li>
<li>转岗管理或其他<a id="more"></a></li>
</ul>
</li>
<li><p><strong><code>web</code>前端开发的前景展望：</strong></p>
<ul>
<li>未来<code>IT</code>行业企业需求最多的人才</li>
<li>结合最新的<code>html5</code>抢占移动端的市场</li>
<li>自己创业做老板</li>
<li>随着互联网的普及<code>web</code>开发成为企业的宠儿和核心</li>
</ul>
</li>
<li><p><strong><code>web</code>职业发展目标：</strong></p>
<ul>
<li><p>第一、梳理知识架构</p>
<ul>
<li>负责内容的<code>HTML</code></li>
<li>负责外观的<code>css</code>（层叠样式表）</li>
<li>负责行为的<code>js</code></li>
<li><code>ps</code>切图</li>
</ul>
</li>
<li><p>第二、分解目标（起步阶段、提升阶段、成型阶段）</p>
<ul>
<li><p>起步阶段：</p>
<ul>
<li>基本知识的掌握</li>
<li>常用工具的掌握</li>
<li>沟通技巧的掌握（围绕客户的需求）</li>
<li>良好的开发习惯（加注释、对齐方式）</li>
</ul>
</li>
<li><p>提升阶段：</p>
<ul>
<li>熟悉掌握<code>HTML</code>基本标签和属性</li>
<li>熟练掌握<code>css</code>的基本语法和使用</li>
<li>浏览器兼容和w3c标准的掌握</li>
<li>结合<code>html</code>+<code>css</code>+<code>js</code>开始系统项目的开发</li>
</ul>
</li>
<li><p>成型阶段：</p>
<ul>
<li>精通<code>DIV</code>+<code>CCS</code>布局</li>
<li>精通<code>css</code>样式表控制<code>html</code>标签</li>
<li>熟悉运用<code>js</code>制作动态网站的效果</li>
<li>能独立开发完成网站</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第二章-html基本结构"><a href="#第二章-html基本结构" class="headerlink" title="第二章 html基本结构"></a>第二章 html基本结构</h4><hr>
<ul>
<li><p>认识HTML：</p>
<ul>
<li><code>html</code>不是一种编程语言，是一种标志语言</li>
<li>标记语言是由一套标识标签组成的</li>
<li><code>html</code>使用标签来描述网页</li>
</ul>
</li>
<li><p><code>html</code>结构：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;&lt;/head&gt;</div><div class="line">    &lt;body&gt;&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<ul>
<li>不成对出现的标签<br><code>&lt;br&gt;</code> <code>&lt;hr&gt;</code>  <code>&lt;meta&gt;</code> <code>&lt;img&gt;</code>  <code>&lt;input..&gt;</code>  <code>&lt;option..&gt;</code>  <code>&lt;link&gt;</code></li>
</ul>
<ul>
<li><p><strong>HTML 基本标签的讲解：</strong></p>
<ul>
<li><code>&lt;html&gt;</code> <code>&lt;head&gt;</code> <code>&lt;body&gt;</code>标签</li>
<li><code>&lt;h1&gt;</code>—-<code>&lt;h6&gt;</code>仅仅用于标题文本，不要为了产生粗体文本使用它们</li>
<li><code>&lt;p&gt;</code>标签  段落标签</li>
<li><p><code>&lt;strong&gt;&lt;b&gt;</code>标签</p>
</li>
<li><p>都会让文字产生加粗效果</p>
<ul>
<li><code>&lt;strong&gt;</code>用于强调文本，强度更深，表示重要文本—&gt;用于<code>SEO</code>优化</li>
<li><code>&lt;b&gt;</code>只是视觉加粗效果—&gt;单纯为了产生加粗</li>
</ul>
</li>
</ul>
<ul>
<li><code>&lt;em&gt;</code> <code>&lt;i&gt;</code>标签<ul>
<li><code>em</code>用于强调文本</li>
<li><code>i</code>只是视觉斜体效果</li>
<li><code>&lt;strong&gt;</code>比<code>&lt;em&gt;</code>强调更强</li>
</ul>
</li>
<li>特殊符号：<ul>
<li><code>&amp;nbsp</code>; —-&gt;空格</li>
<li><code>&amp;gt</code>; —&gt;大于号</li>
<li><code>&amp;lt</code>；—&gt;小于号</li>
<li><code>&amp;quot</code>；—&gt;引号</li>
<li><code>&amp;copy</code>;–&gt;版权号</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第三章-html基本标签"><a href="#第三章-html基本标签" class="headerlink" title="第三章 html基本标签"></a>第三章 html基本标签</h4><hr>
<ul>
<li><p><code>HTMl</code>基本标签：</p>
<ul>
<li><code>span</code>标签<ul>
<li>对被用来组合文档中的行内元素</li>
<li>注意：span没有固定的格式表现，当对它应用样式时，才会产生视觉上的变化</li>
</ul>
</li>
<li><code>&lt;pre&gt;</code>标签<ul>
<li>文字的格式按源码的排版来显示，我们称之为预处理格式</li>
</ul>
</li>
<li><p><code>&lt;a&gt;</code>标签—&gt;他有一个必不可少的属性 href </p>
<ul>
<li><code>target</code>属性：</li>
<li><code>_self</code>(在原来页面打开) </li>
<li><code>_blank</code>（新窗口打开）</li>
<li><code>_top</code>（打开时忽略所有的框架） </li>
<li><code>_parent</code>（在父窗口中打开）</li>
</ul>
</li>
<li><p>创建锚点和锚链接</p>
<ul>
<li>锚点也是一种超链接，是页面内进行跳转的超链接<ul>
<li>第一步：创建锚点 <code>&lt;a name=&quot;锚点名称&quot;&gt;&lt;/a&gt;</code></li>
<li>第二步：使用创建好的锚点名称 <code>&lt;a href=&quot;#锚点名称&quot;&gt;内容&lt;/a&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li><code>marquee</code>标签<ul>
<li>可以创建一个内容滚动效果</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;marquee direction=&quot;down&quot; loop=&quot;4&quot; onmouseover=this.stop() onmouseout=this.start()&gt;&lt;/marquee&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>direction</code> 表示滚动方向，取值有（left,right,up,down,默认left）</li>
<li><code>loop</code>表示滚动循环的次数，默认为无限循环</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">onmouseover=this.stop()  onmouseover=this.start()  scrollamout=&quot;1&quot;(滚动速度)</div></pre></td></tr></table></figure>
<ul>
<li>表示当鼠标移上区域的时候停止滚动，鼠标移开继续滚动</li>
</ul>
<hr>
<h4 id="第四章-img图片标签与路径"><a href="#第四章-img图片标签与路径" class="headerlink" title="第四章 img图片标签与路径"></a>第四章 img图片标签与路径</h4><hr>
<ul>
<li><p>图片标签与路径：</p>
<ul>
<li>常见图片格式 <code>jpg</code> <code>png</code> <code>gif</code></li>
<li><code>Gif</code>     （只支持全透明）</li>
<li><code>Jpeg</code> /<code>jpg</code>     </li>
<li><code>Png</code> 半/全透明都支持</li>
</ul>
</li>
<li><p>图片标签写法 ：</p>
<ul>
<li><code>&lt;img src=&quot;&quot; alt=&quot;&quot; width=&quot;&quot; height=&quot;&quot; /&gt;</code></li>
</ul>
</li>
<li><p>图片四要素：</p>
<ul>
<li><code>src=&quot;&quot;</code>        图片路径</li>
<li><code>alt=&quot;&quot;</code>       图片含义</li>
<li><code>width=&quot;&quot;</code>     图片宽度 和图片大小保持一致</li>
<li><code>height=&quot;&quot;</code>     图片高度 和图片大小保持一致</li>
<li><code>title=&quot;&quot;</code></li>
</ul>
</li>
<li><p>路径知识：</p>
<ul>
<li><p>相对路径、绝对路径：</p>
<ul>
<li>相对路径：(Relative Path) 相对于该文件的路径；</li>
<li>绝对路径：(Absolute Path) 从磁盘出发的路径； </li>
</ul>
</li>
<li><p><code>&lt;img src=&quot;&quot; …… align=&quot;&quot; /&gt;</code> <code>align</code>属性–设置图片与后面文字的位置关系<br>值–<code>top</code>、<code>bottom</code>、<code>middle</code>、<code>absmiddle</code>、<code>left</code>、<code>right</code></p>
</li>
</ul>
</li>
<li><p>在静态页面中：</p>
<ul>
<li><p><code>/</code>开头表示根目录；</p>
</li>
<li><p><code>./</code>表示当前目录；（斜画线前面一个点）</p>
</li>
<li><p><code>../</code>上级目录；（斜画线前面两个点）</p>
</li>
<li><p>直接用文件名不带/也表示同一目录</p>
</li>
</ul>
<ul>
<li>这些都是相对于当前文件的位置来说的，如果用绝对路径的话就是写全了。</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第五章-三种列表的讲解"><a href="#第五章-三种列表的讲解" class="headerlink" title="第五章 三种列表的讲解"></a>第五章 三种列表的讲解</h4><hr>
<ul>
<li>三种列表的知识讲解：<ul>
<li><code>&lt;ul&gt;</code>无序列表<ul>
<li>无序列表是一个没有顺序项目的列表，此列表项默认粗体圆点进行标识</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;ul&gt;</div><div class="line">   &lt;li&gt;&lt;/li&gt;</div><div class="line">   &lt;li&gt;&lt;/li&gt;</div><div class="line">   &lt;li&gt;&lt;/li&gt;</div><div class="line">&lt;/ul&gt;</div></pre></td></tr></table></figure>
<ul>
<li><ol>有序列表<ul>
<li>有序列表也是一列项目，只是列表项目使用的是数字进行标记。 有序列表始于 <code>&lt;ol&gt;</code> 标签。每个列表项始于 <code>&lt;li&gt;</code>标签。</li>
</ul>
</ol></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;ol&gt;</div><div class="line">   &lt;li&gt;内容一&lt;/li&gt;</div><div class="line">   &lt;li&gt;内容二&lt;/li&gt;</div><div class="line">   &lt;li&gt;内容三&lt;/li&gt;</div><div class="line">&lt;/ol&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p>列表符号</p>
<ul>
<li><p>无序列表-列表符号:</p>
<ul>
<li><code>type=&quot;circle&quot;</code>  空心圆 <code>type=“disc”</code> 实心圆  默认值 <code>type=&quot;square&quot;</code> 方块符</li>
</ul>
</li>
<li><p>有序列表-列表符号</p>
<ul>
<li><code>type=&quot;A&quot;</code>    A B C D</li>
<li><code>type=&quot;a&quot;</code>    a b c d</li>
<li><code>type=&quot;1&quot;</code>    1 2 3 4  默认值type=”I”    I II III type=”i”     i ii iii</li>
</ul>
</li>
<li><p>列表嵌套</p>
</li>
<li><p>无序列表-嵌套</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;ul&gt;</div><div class="line"> &lt;li&gt;柚子</div><div class="line">  &lt;ul&gt;</div><div class="line">   &lt;li&gt;沙田柚&lt;/li&gt;</div><div class="line">   &lt;li&gt;蜜柚&lt;/li&gt;</div><div class="line">  &lt;/ul&gt;</div><div class="line"> &lt;/li&gt;</div><div class="line"> &lt;li&gt;荔枝&lt;/li&gt;</div><div class="line"> &lt;li&gt;苹果&lt;/li&gt;&lt;/ul&gt;</div></pre></td></tr></table></figure>
<ul>
<li>有序列表-嵌套</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;ol&gt;</div><div class="line"> &lt;li&gt;茶</div><div class="line">  &lt;ul&gt;</div><div class="line">   &lt;li&gt;红茶&lt;/li&gt;</div><div class="line">   &lt;li&gt;绿茶&lt;/li&gt;</div><div class="line">  &lt;/ul&gt;</div><div class="line"> &lt;/li&gt;</div><div class="line"> &lt;li&gt;果汁&lt;/li&gt;</div><div class="line"> &lt;li&gt;牛奶&lt;/li&gt;&lt;/ol&gt;</div></pre></td></tr></table></figure>
<ul>
<li>定义列表<ul>
<li>定义列表不仅仅是一列项目，而是项目及其注释的组合。定义列表以 <code>&lt;dl&gt;</code> 标签开始。每个定义列表项以 <code>&lt;dt&gt;</code>开始。每个自定义列表项的定义以 <code>&lt;dd&gt;</code> 开始。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;dl&gt;  </div><div class="line">     &lt;dt&gt;pc网页制作&lt;/dt&gt;  </div><div class="line">     &lt;dd&gt;学习DIV+CSS JS JQ 项目实战&lt;/dd&gt;  </div><div class="line">     &lt;dt&gt;手机网页制作&lt;/dt&gt;  </div><div class="line">     &lt;dd&gt;手机网页制作实战&lt;/dd&gt;</div><div class="line">&lt;/dl&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>dd</code>是对<code>dt</code>的解释</p>
<ul>
<li><code>&lt; dl&gt;&lt; /dl&gt;</code>用来创建一个普通的列表,</li>
<li><code>&lt; dt&gt;&lt; /dt&gt;</code>用来创建列表中的上层项目，</li>
<li><code>&lt; dd&gt;&lt; /dd&gt;</code>用来创建列表中最下层项目，</li>
<li><code>&lt; dt&gt;&lt; /dt&gt;</code>和<code>&lt; dd&gt;&lt; /dd&gt;</code>都必须放在<code>&lt; dl&gt;&lt; /dl&gt;</code>标志对之间。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;dl&gt;</div><div class="line">    &lt;dt&gt;中国城市&lt;/dt&gt;</div><div class="line">    &lt;dd&gt;北京 &lt;/dd&gt;</div><div class="line">    &lt;dd&gt;上海 &lt;/dd&gt;</div><div class="line">    &lt;dd&gt;广州 &lt;/dd&gt;</div><div class="line">    &lt;dt&gt;美国城市&lt;/dt&gt;</div><div class="line">    &lt;dd&gt;华盛顿 &lt;/dd&gt;</div><div class="line">    &lt;dd&gt;芝加哥 &lt;/dd&gt;</div><div class="line">    &lt;dd&gt;纽约 &lt;/dd&gt;</div><div class="line">&lt;/dl&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>dl</code>是d<code>efinition list</code>的缩写</li>
<li><code>dt</code>是<code>definition title</code>的缩写</li>
<li><code>dd</code>是d<code>efinition description</code>的缩写</li>
</ul>
<ul>
<li><code>list-style</code>属性具有三个属性分量：</li>
<li><code>list-style-position</code> ：设置列表项图标的位置，位于文本内或者文本外</li>
<li><code>list-style-type</code>： 设置列表项图标的类型</li>
<li><code>list-style-image</code>：使用图像设置列表项图标</li>
</ul>
<hr>
<h4 id="第六章-表单元素-上"><a href="#第六章-表单元素-上" class="headerlink" title="第六章 表单元素(上)"></a>第六章 表单元素(上)</h4><hr>
<ul>
<li><p>表单标签:</p>
<ul>
<li><p><code>&lt;form&gt;</code>表单标签</p>
<ul>
<li><code>&lt;form&gt;</code>表单是一个包含表单元素的区域，包括起来的都是表单的内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt;</div><div class="line"> &lt;input type=&quot;text&quot;/&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>HTML标签 - <code>Action</code>和确认按钮： </p>
<ul>
<li>当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;form action=&quot;html.do&quot; method=&quot;get&quot;&gt;    </div><div class="line">        username:  &lt;input type=&quot;text&quot; name=&quot;user&quot; /&gt;   </div><div class="line">        &lt;input type=&quot;submit&quot; value=&quot;提  交&quot; /&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>HTML</code>标签 - 隐藏域隐藏标签：</p>
</li>
<li><p>隐藏域在页面中对于用户是不可见的，在表单中插入隐藏域的目的在于收集或发送信息，以利于被处理表单的程序所使用。浏览者单击发送按钮发送表单的时候，隐藏域的信息也被一起发送到服务器</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt;        </div><div class="line">     &lt;input type=&quot;hidden&quot; name=&quot;hid&quot; value=&quot;value&quot;&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>&lt;input&gt;</code>标签的掌握</p>
<ul>
<li><p>常用<code>type</code>类型：</p>
<ul>
<li><code>&lt;input type=&quot;&quot; name=&quot;&quot; value=&quot;&quot; /&gt;</code></li>
<li><code>type=&quot;text&quot;</code>       单行文本输入框</li>
<li><code>type=&quot;password&quot;</code>    密码（<code>maxlength=&quot;&quot;</code>）</li>
<li><code>type=&quot;radio&quot;</code>     单项选择（<code>checked=&quot;checked&quot;</code>） </li>
<li><code>type=&quot;checkbox&quot;</code>   多项选择  </li>
<li><code>type=&quot;button&quot;</code>    按钮</li>
<li><code>type=&quot;submit&quot;</code>    提交 <code>type=&quot;image&quot;</code>图片提交</li>
<li><code>type=&quot;file&quot;</code>    上传文件</li>
<li><code>type=&quot;reset&quot;</code>重置</li>
<li><code>type=&quot;hidden&quot;</code>    隐藏</li>
</ul>
</li>
</ul>
</li>
<li><p>关于表单中的设置默认值：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;text&quot; name=&quot;&quot; value=&quot;今天心情不错&quot; /&gt;</div><div class="line">&lt;input type=&quot;radio&quot; name=&quot;&quot; value=&quot;&quot; checked=&quot;checked&quot;&gt;</div><div class="line">&lt;input type=&quot;checkbox&quot; name=&quot;&quot; value=&quot;&quot; checked=&quot;checked&quot;&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;select name=&quot;&quot; &gt;</div><div class="line"> &lt;option  value=&quot;&quot;&gt;&lt;/option&gt;</div><div class="line"> &lt;option  value=&quot;&quot; selected=&quot;selected&quot;&gt;&lt;/option&gt;</div><div class="line">&lt;select&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>textarea</code>没有默认值</p>
</li>
<li><p><code>&lt;label&gt;</code>标签的使用</p>
<ul>
<li><p><code>&lt;label&gt;&lt;/label&gt;</code></p>
<ul>
<li><code>label</code> 元素不会向用户呈现任何特殊效果。</li>
<li>不过，它为鼠标用户改进了可用性。</li>
<li>如果您在 <code>label</code> 元素内点击文本，就会触发此控件。</li>
<li>就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。</li>
</ul>
</li>
<li><p><code>&lt;label&gt;</code> 标签的<code>for</code> 属性应当与相关元素的 <code>id</code>属性相同。</p>
</li>
<li><p>例子：（重要—注册表单–用户体验–必做）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;单向选择&lt;/p&gt;</div><div class="line">&lt;label for=&quot;male&quot;&gt;男：&lt;/label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;male&quot;/&gt;</div><div class="line">&lt;label for=&quot;nv&quot;&gt;女：&lt;/label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot;checked=&quot;check&quot;/&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第七章-表单和表格-下"><a href="#第七章-表单和表格-下" class="headerlink" title="第七章 表单和表格(下)"></a>第七章 表单和表格(下)</h4><hr>
<ul>
<li>表单和表格标签：<ul>
<li><code>&lt;textarea&gt;</code>文本域标签</li>
<li><code>&lt;textarea&gt;</code>标签：</li>
<li><code>&lt;textarea&gt;&lt;/textarea&gt;</code>是文本域标签，可以在其中插入一段文字内容，它有两个常用属性<code>rows</code>和<code>cols</code></li>
</ul>
</li>
<li><p>注意：</p>
<ul>
<li><code>rows</code>表示这个文本域有多少行</li>
<li><code>cols</code>表示这个文本域有多少列</li>
</ul>
</li>
<li><p>除了这两个属性它还有<code>readonly</code>（只读，文本域的内容无法改变，相当于协议）和<code>title</code>（鼠标放上提示）</p>
</li>
<li><p><code>&lt;select&gt;</code>标签的掌握</p>
<ul>
<li>注：当提交表单时，浏览器会提交选定的项目，或者收集用逗号分隔的多个选项，将其合成一个单独的参数列表，并且在将 <code>&lt;select&gt;</code> 表单数据提交给服务器时包括 <code>name</code>属性<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt;      </div><div class="line">    &lt;select name=&quot;&quot;  id=&quot;&quot;&gt;</div><div class="line">         &lt;option value=&quot;1&quot;&gt;1月&lt;/option&gt;  </div><div class="line">          &lt;option value=&quot;2&quot;&gt;2月&lt;/option&gt;      </div><div class="line">&lt;/select&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>常用到的属性：<code>disabled=“disabled”  name=&quot;sel&quot;  size=&quot;2&quot;</code></p>
</li>
</ul>
<ul>
<li><code>&lt;table&gt;</code>表格标签</li>
<li><p><code>&lt;table&gt;</code>表格标签：<code>&lt;table&gt;</code>是表格标签，可以用它定义一个表格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;table border=&quot;1&quot;&gt;</div><div class="line">    &lt;tr&gt;</div><div class="line">    &lt;td&gt;姓名&lt;/td&gt;</div><div class="line">    &lt;td&gt;性别&lt;/td&gt;</div><div class="line">    &lt;/tr&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>注意：<code>&lt;table&gt;</code>的<code>border</code>属性不能少</p>
</li>
</ul>
<ul>
<li><p><code>&lt;tr&gt;</code> <code>&lt;td&gt;</code>标签的使用</p>
<ul>
<li><p><code>&lt;tr&gt;</code>行标签：</p>
<ul>
<li><code>&lt;tr&gt;</code>可以定义表格中的一行，一个&lt;<code>tr&gt;&lt;/tr&gt;</code>表示一行。</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;table border=&quot;1&quot;&gt;</div><div class="line">&lt;tr&gt;</div><div class="line"> &lt;td&gt;姓名&lt;/td&gt;</div><div class="line"> &lt;td&gt;性别&lt;/td&gt;</div><div class="line">&lt;/tr&gt;</div><div class="line"></div><div class="line">&lt;tr&gt;</div><div class="line"> &lt;td&gt;姓名&lt;/td&gt;</div><div class="line"> &lt;td&gt;性别&lt;/td&gt;</div><div class="line">&lt;/tr&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>&lt;td&gt;</code>单元格标签:</p>
<ul>
<li><code>&lt;td&gt;</code>可以定义表格中的一个单元格，<code>&lt;td&gt;&lt;/td&gt;</code>表示一个单元格。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;table border=&quot;1&quot;&gt;</div><div class="line">&lt;tr&gt;</div><div class="line">&lt;td &gt;姓名&lt;/td&gt;</div><div class="line">&lt;td&gt;性别&lt;/td&gt;</div><div class="line">&lt;td&gt;爱好&lt;/td&gt;</div><div class="line">&lt;/tr&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><code>border-collapse</code> 属性设置是否将表格边框折叠为单一边框：</li>
<li><code>border-collapse:collapse</code>;</li>
<li><code>colspan</code>左右合并</li>
<li><code>rowspan</code>上下合并</li>
</ul>
</li>
</ul>
<p><strong>第一部分总结</strong>：</p>
<ul>
<li>非可视化标签：<code>head</code>  <code>meta</code>  <code>style</code>  <code>scrpit.</code>..</li>
<li>可视化标签：<code>img</code>  <code>div</code> <code>span</code> <code>a</code> <code>ul</code> <code>li</code>…</li>
<li>只有可视化标签，才能用<code>css</code>改变它</li>
<li>单标签：<code>meta</code>  <code>link</code>  <code>base</code>  <code>img</code>  <code>input</code> <code>br</code> <code>hr</code></li>
<li><p>双标签：<code>html</code> <code>head</code> <code>body</code>  <code>div</code>  <code>a</code>  <code>p</code>  <code>span</code> ..<code>ul</code> <code>li</code> <code>ol</code> <code>dl</code> ….</p>
</li>
<li><p><strong>常用可视化标签</strong></p>
<ul>
<li><strong> <code>div</code></strong> <ul>
<li>一般用它来布局</li>
</ul>
</li>
<li><strong>a</strong>  超链接标签<ul>
<li><code>href</code>*属性：设置跳转的网页地址</li>
<li><code>target</code>属性：设置跳转的目标</li>
<li>结论：凡事页面可以点击跳转或者表单提交的文字，都用<code>a</code>标签</li>
</ul>
</li>
<li><strong><code>img</code></strong><ul>
<li><code>src</code>*属性用来设置图片的url数据</li>
<li><code>alt</code>提供给搜索引擎搜索的</li>
<li><code>width</code></li>
<li><code>height</code></li>
<li>结论 ：显示图片</li>
</ul>
</li>
<li><strong>ul li</strong><ul>
<li>列表</li>
<li>结论：只要将来设计页面中有固定样式的列表，就用ul和li</li>
</ul>
</li>
<li><strong><code>table</code> <code>caption</code> <code>tr</code> <code>td (th)</code></strong><ul>
<li>慢慢已经被淘汰了 被ul li代替</li>
<li>如果是合并竖排的就是合并行（<code>rowspan</code>）</li>
<li>如果是合并横排的就是合并列（<code>colspan</code>）</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p><strong>HTML部分导图总结</strong></p>
<hr>
<ul>
<li><a href="http://www.html5star.com/manual/html5label-meaning/" target="_blank" rel="external">HTML5标签集合</a></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-1950ccf50810a92b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-3d15eb9c7be0cb65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-4b0073fd050ba4f3.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<h3 id="第二部分-CSS"><a href="#第二部分-CSS" class="headerlink" title="第二部分 CSS"></a>第二部分 CSS</h3><hr>
<h4 id="第八章-css基础知识"><a href="#第八章-css基础知识" class="headerlink" title="第八章 css基础知识"></a>第八章 css基础知识</h4><hr>
<ul>
<li><code>css</code>基础知识：<ul>
<li><code>css</code>样式表的定义</li>
<li><code>css</code>：（Cascading Style Sheets）层叠样式表；</li>
</ul>
</li>
<li>分类及位置：内部样式<code>-head</code>区域<code>style</code>标签里面<ul>
<li>外部样式-<code>link</code>调用</li>
<li>内联样式-标签元素里面</li>
</ul>
</li>
<li><code>css</code>内的注释：/<code>*</code>注释内容<code>*</code>/</li>
<li><p><code>css</code>样式表的语法</p>
<ul>
<li><p><code>CSS</code>规则由两个主要的部分构成：要添加样式的盒子名或者标签名、和要添加的样式。</p>
</li>
<li><p>盒子名或者标签名{属性:值;}</p>
</li>
<li><p><strong>CSS中几种颜色的表示方法</strong></p>
<ul>
<li><strong>用颜色名表示</strong><ul>
<li>有17个预先确定的颜色，它们是<ul>
<li><code>aqua</code>, <code>black</code>, <code>blue</code>, <code>fuchsia</code>, <code>gray</code>, <code>green</code>, <code>lime</code>, <code>maroon</code>, <code>navy</code>,<br>　　<code>olive</code>, <code>orange,</code> <code>purple</code>, <code>red</code>, <code>silver</code>, <code>teal</code>, <code>white</code>, and <code>yellow</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>用十六进制的颜色值表示(红、绿、蓝)</strong></p>
<ul>
<li><code>#FF0000</code>或者<code>#F00</code> </li>
</ul>
</li>
<li><p><strong>用rgb(r,g,b)函数表示</strong></p>
<ul>
<li>如：<code>rgb(255,255,0)</code></li>
</ul>
</li>
<li><p><strong>用hsl(Hue,Saturation,Lightness)函数表示（色调、饱和度、亮度)</strong></p>
<ul>
<li>如：<code>hsl(120,100%,100%)</code>,色调0代表红色，<code>120</code>代表绿色，<code>240</code>代表<br>蓝色 </li>
</ul>
</li>
<li><p><strong>用<code>rgba(r,g,b,a)</code>函数表示 </strong></p>
<ul>
<li>其中<code>a</code>表示的是改颜色的透明度，取值范围是<code>0~1</code>，其中<code>0</code>代表完全透明</li>
</ul>
</li>
<li><p><strong>用hsla(Hue,Saturation,Lightness,alpha)函数表示</strong></p>
<ul>
<li>色调、饱和度、亮度、透明度 </li>
</ul>
</li>
<li>例子</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;top:0px"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:gray;"</span>&gt;</span>background-color:gray<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:#F00;"</span>&gt;</span>background-color:#F00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:#ffff00;"</span>&gt;</span>background-color:#ffff00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:rgb(255,0,255);"</span>&gt;</span>background-color:rgb(255,0,255)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:hsl(120,80%,50%);"</span>&gt;</span>background-color:hsl(120,80%,50%)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,0,255,0.5);"</span>&gt;</span>background-color:rgba(255,0,255,0.5)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:hsla(120,80%,50%,0.5);"</span>&gt;</span>background-color:hsla(120,80%,50%,0.5)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-39e61a813f637282.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>内部样式表<ul>
<li>当单个页面需要设置样式时，就应该使用内部样式表。</li>
<li>使用 <code>&lt;style&gt;&lt;/style&gt;</code>标签在文档<code>&lt;head&gt;&lt;/head&gt;</code>里面定义内部样式表</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line"> &lt;style type=&quot;text/css&quot; &gt;</div><div class="line">  p&#123;color:red;&#125;</div><div class="line"> &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<ul>
<li>从外部引入到样式分为两种：（注意写在<code>head</code>标签里面）  </li>
<li><p>当样式需要应用于很多页面时，就需要用到外部样式表，首先需要创建一个<code>css</code>文件，然后引用到我们的页面中。</p>
</li>
<li><p><code>Link</code>样式表式：  <code>&lt;link rel=”stylesheet” type=”text/css” href=”my.css”(href表示路径)&gt;</code></p>
</li>
<li><p><code>Html</code>式：  <code>&lt;style type=&quot;text/css&quot;&gt;@import url(&quot;css.css&quot;);&gt;&lt;/style&gt;</code> </p>
</li>
</ul>
<ul>
<li><p>内联样式表（优先级高）</p>
<ul>
<li><p>写在标签里面的样式</p>
</li>
<li><p>如：<code>&lt;p style=&quot;color:red;&quot;&gt;&lt;/p&gt;</code></p>
</li>
</ul>
</li>
<li><p>表示给<code>p</code>标签里面的文字颜色设置为红色</p>
</li>
<li><p>区别：外链样式与导入样式</p>
<ul>
<li><p><code>link</code>标签是属于<code>xhtml</code>范畴，而<code>@import</code>则是<code>css2.1</code>中特有的。<code>link</code>标签除了可以加载<code>CSS</code>外，还可以做很多其它的事情，比如定义<code>RSS</code>，定义<code>rel</code>连接属性等，<code>@import</code>就只能加载<code>CSS</code>了。 </p>
</li>
<li><p>加载的顺序的区别，<code>link</code>加载的<code>css</code>时，是一种并行(没有尝试是否是这样)加载<code>CSS</code>方式，而<code>@impor</code>则在整个页面加载完成后才加载。</p>
</li>
<li><p>兼容性的区别，因<code>@import``CSS2.1</code>才特有的，所以对于不兼容<code>CSS2.1</code>的浏览器来说，无效。</p>
</li>
<li><p>在样式控制上(比如动态改变网页的布局时,使用<code>javascript</code>操作<code>DOM</code>)的区别，此时<code>@import</code>就无能为力了。</p>
</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><strong>样式的优先级补充</strong><ul>
<li>相同权值情况下，<code>CSS</code>样式的优先级总结来说，就是——就近原则（离被设置元素越近优先级别越高）：<ul>
<li><code>内联样式表（标签内部）</code> &gt; <code>嵌入样式表（当前文件中）</code>&gt; <code>外部样式表（外部文件中）</code></li>
</ul>
</li>
</ul>
</li>
<li><p>权值不同时，浏览器是根据权值来判断使用哪种<code>css</code>样式的，哪种样式权值高就使用哪种样式</p>
</li>
<li><p>层叠优先级是:</p>
<ul>
<li><code>浏览器缺省</code>&lt; <code>外部样式表</code> &lt; <code>内部样式表</code> &lt; <code>内联样式</code></li>
</ul>
</li>
<li>其中样式表又有:<code>类选择器</code> &lt; <code>类派生选择器</code>&lt;<code>ID选择器</code> &lt; <code>ID派生选择器</code></li>
<li><p>派生选择器以前叫上下文选择器，所以完整的层叠优先级是:</p>
<ul>
<li><code>浏览器缺省</code> &lt;<code>外部样式表</code> &lt; <code>外部样式表类选择器</code> &lt; <code>外部样式表类派生选择器</code>&lt; <code>外部样式表ID选择器</code> &lt; <code>外部样式表ID派生选择器</code>&lt; <code>内部样式表</code> &lt; <code>内部样式表类选择器</code> &lt; <code>内部样式表类派生选择器</code> &lt; <code>内部样式表ID选择器</code> &lt; <code>内部样式表ID派生选择器</code> &lt; <code>内联样式</code>…共<code>12</code>个优先级</li>
</ul>
</li>
<li><p>另外，如果同一个元素在没有其他样式的作用影响下，其<code>Class</code>定义了多个并以空格分开，其优先级顺序为：</p>
<ul>
<li>一个元素同时应用多个<code>class</code>，后定义的优先（即近者优先），加上<code>!important</code>者最优先！</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第九章-css选择器-上"><a href="#第九章-css选择器-上" class="headerlink" title="第九章 css选择器(上)"></a>第九章 css选择器(上)</h4><ul>
<li><code>css</code>选择器：<ul>
<li><code>class</code>类选择器可以重复利用    </li>
<li><code>id</code>选择器唯一</li>
</ul>
</li>
<li>标签选择器<ul>
<li>什么是选择器：css选择器就是要改变样式的对象</li>
</ul>
</li>
<li><p>选择器<code>{属性:值;属性:值;}</code></p>
</li>
<li><p>标签选择器：页面中所有的标签都是一个选择器  <code>p{color:red;}</code></p>
</li>
<li><p><code>ID</code>选择器</p>
<ul>
<li>选择<code>id</code>命名的元素 以 <code>#</code> 开头   <code>#p1{color:#0f0;}</code></li>
</ul>
</li>
<li><p>类选择器</p>
<ul>
<li><code>class</code>选择器，选择<code>clas</code>命名的元素 以<code>.</code>开头  <code>.first{color:#00f;}</code></li>
</ul>
</li>
<li><code>css</code>代码写完后上线前要经过压缩处理 </li>
<li>本地和服务器分两个<code>css</code>版本（备份）</li>
<li><p>压缩后注释都清除，空间体积减少</p>
</li>
<li><p>群组选择器</p>
<ul>
<li>选择多个元素,以逗号隔开 <code>#main,.first,span,a,h1{color:red;}</code></li>
</ul>
</li>
<li>包含选择器<ul>
<li>选择某元素的后代元素，也称后代选择器，父类与子类间以空格隔开<code>p</code>   <ul>
<li><code>span{color:red;}</code></li>
</ul>
</li>
</ul>
</li>
<li><p>属性选择器</p>
<ul>
<li>选择包含某一属性的元素</li>
<li><code>a[title]{color:red;}</code>  选择包含<code>title</code>的<code>a</code>标签</li>
<li><code>a[title][href]{color:red;}</code> 选择包含<code>title</code>和<code>href</code>的<code>a</code>标签</li>
</ul>
</li>
<li><p><code>&gt;</code> <code>+</code> 选择器子类选择器：只选择子元素（只选择儿子）（相当于包含元素）</p>
<ul>
<li><code>p &gt; span{color:red;}</code></li>
</ul>
</li>
<li>相邻兄弟选择器：只选择后面的相邻兄弟元素<ul>
<li><code>p + span{color:red;}</code></li>
</ul>
</li>
</ul>
<hr>
<h4 id="第十章-css选择器-下"><a href="#第十章-css选择器-下" class="headerlink" title="第十章 css选择器(下)"></a>第十章 css选择器(下)</h4><hr>
<ul>
<li><code>&lt;a&gt;</code>伪类选择器<ul>
<li><code>a:link {color:#FF0000;}</code>    /<em> 未访问的链接 </em>/ （只用于a标签）</li>
<li><code>a:visited {color:#00FF00;}</code>    /<em> 已访问的链接 </em>/ （只用于a标签）</li>
<li><code>a:hover {color:#FF00FF;}</code>/* 鼠标移动到链接上</li>
<li><code>*/</code>（可和其他标签结合一起用）</li>
<li><code>a:active {color:#0000FF;}</code>    /<em> 选定的链接 </em>/</li>
<li><strong>注意</strong><ul>
<li>伪类选择器的排序很重要，<code>a:link</code> <code>a:visited</code> <code>a:hover</code> <code>a:active</code>，记作<code>lvha</code></li>
</ul>
</li>
</ul>
</li>
<li><p>输入伪类选择器（针对表单）</p>
<ul>
<li><code>input:focus{color:red;}</code>      /<em> 键盘输入焦点 </em>/</li>
</ul>
</li>
<li><p>其他伪类选择器</p>
<ul>
<li><code>p:first-child{color:red;}</code>     /<code>* 第一个p *</code>/</li>
<li><code>:before</code> 在元素之前添加内容。</li>
<li><code>:after</code> 在元素之后添加内容。</li>
</ul>
</li>
<li><p><code>css</code>优先规则</p>
<ul>
<li>内联样式表-&gt; <code>ID</code> 选择器—&gt; <code>Class</code> 类选择器-&gt;标签选择器</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第十一章-背景属性"><a href="#第十一章-背景属性" class="headerlink" title="第十一章 背景属性"></a>第十一章 背景属性</h4><hr>
<ul>
<li><p>背景属性：</p>
<ul>
<li><p>背景的添加 ：</p>
</li>
<li><p>背景颜色的添加:</p>
<ul>
<li><code>background:red;</code></li>
<li><code>backgronnd-color:red;</code></li>
</ul>
</li>
<li><p>背景图片的添加：</p>
<ul>
<li><code>background:url(“images/1.jpg”);</code></li>
<li><code>backgronnd-image:url(“images/1.jpg”);</code></li>
</ul>
</li>
<li>背景的平铺</li>
<li>什么是平铺？平铺就是图片是否重复出现<ul>
<li>不平铺：<code>background-repeat:no-repeat;</code></li>
<li>水平方向平铺：<code>background-repeat:repeat-x;</code></li>
<li>垂直方向平铺：<code>background-repeat:repeat-y;</code></li>
<li>完全平铺：默认为完全平铺</li>
</ul>
</li>
<li>背景图片的定位<ul>
<li>背景图片的定位就是可以设置显示背景图片的位置，通过属性<code>background-position</code>来实现</li>
<li><code>background-position</code>的取值可为英文单词或者数值和百分值。</li>
<li><code>background-positon</code>的英文单词取值</li>
<li><code>top left</code>                   </li>
<li><code>top  center</code>                   </li>
<li><code>top  right</code></li>
<li><code>center left</code>            </li>
<li><code>center  center</code>                   </li>
<li><code>center right</code></li>
<li><code>bottom left</code>           </li>
<li><code>bottom  center</code>    </li>
<li><code>ottom right</code></li>
</ul>
</li>
<li><code>background-positon</code>的数值取值     <ul>
<li><code>background-position:x  y;</code>  </li>
</ul>
</li>
<li><code>positon</code>的百分值取值     <ul>
<li><code>background-position:x%  y%;</code> </li>
</ul>
</li>
<li><p>背景图片的大小</p>
<ul>
<li>背景图片的大小可以通过属性<code>background-size</code>来设置<code>background-size</code>的取值可为数值和百分值。</li>
</ul>
</li>
<li><p><code>background-size</code>的数值取值     </p>
<ul>
<li><code>background-size:x  y;</code>  </li>
</ul>
</li>
<li><p><code>background-size</code>的数值取值     </p>
<ul>
<li><code>background-size:x%  y%;</code></li>
</ul>
</li>
<li><p>背景图片的滚动</p>
<ul>
<li><p>背景图片是否随着内容的滚动而滚动由<code>background-attachment</code>设置</p>
</li>
<li><p><code>background-attachment:fixed;</code>  固定，不随内容的滚动而滚动    </p>
</li>
<li><code>background-attachment:scroll;</code> 滚动，随内容的滚动而滚动</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第十二章-文字文本属性"><a href="#第十二章-文字文本属性" class="headerlink" title="第十二章 文字文本属性"></a>第十二章 文字文本属性</h4><hr>
<ul>
<li><p><code>css</code>文字文本属性：</p>
<ul>
<li><p><strong>文字属性</strong></p>
<ul>
<li><code>color:red;</code>    文字颜色</li>
<li><code>font-size:12px</code>;    文字大小</li>
<li><code>font-weight:“bold”</code>    文字粗细(<code>bold/normal</code>)</li>
<li><code>font-family:“宋体”</code>    文字字体</li>
<li><code>font-variant:small-caps</code>小写字母以大写字母显示</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>文本属性</strong></p>
<ul>
<li><code>text-align:center;</code>   文本对齐(<code>right</code>/<code>left</code>/<code>center</code>)</li>
<li><code>line-height:10px;</code> 行间距(可通过它实现文本的垂直居中)</li>
<li><code>text-indent:20px;</code>  首行缩进</li>
<li><code>text-decoration:none;</code> <ul>
<li>文本线(<code>none</code>/<code>underline</code>/<code>overline</code>/<code>line-through</code>)</li>
</ul>
</li>
<li><code>letter-spacing</code>:   字间距</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第十三章-盒子模型"><a href="#第十三章-盒子模型" class="headerlink" title="第十三章 盒子模型"></a>第十三章 盒子模型</h4><hr>
<ul>
<li><strong>盒子模型</strong><ul>
<li>盒子模型就是一个有高度和宽度的矩形区域</li>
<li>所有<code>html</code>标签都是盒子模型</li>
<li><code>div</code>标签自定义盒子模型</li>
</ul>
</li>
<li><p>所有的标签都是盒子模型</p>
<ul>
<li><code>class</code>和<code>id</code>的主要差别是：<code>class</code>用于元素组（类似的元素，或者可以理解为某一类元素），而<code>id</code>用于标识单独的唯一的元素。</li>
</ul>
</li>
<li><p><strong>盒子模型的组成</strong></p>
<ul>
<li>盒子模型组成部分：<ul>
<li>自身内容：<code>width</code>、h<code>eight</code> 宽高</li>
<li>内边距：   <code>padding</code></li>
<li>盒子边框： <code>border</code> 边框线</li>
<li>与其他盒子距离：  <code>margin</code>外边距</li>
<li>内容+内边距+边框+外边距=面积</li>
</ul>
</li>
</ul>
</li>
<li><p><code>border</code> 边框</p>
<ul>
<li>常见写法  <code>border:1px solid #f00;</code></li>
</ul>
</li>
<li><p>单独属性：</p>
<ul>
<li><code>border-width</code>:</li>
<li><code>border-style:</code> <ul>
<li><code>dotted</code> 点状虚线</li>
<li><code>dashed</code>（虚线）</li>
<li><code>solid</code>（实线）</li>
<li><code>double</code>（双实线）</li>
</ul>
</li>
<li><code>border-color</code> (颜色)</li>
</ul>
</li>
<li><p><code>padding</code> 内边距</p>
<ul>
<li><p>值：<code>像素</code>/<code>厘米</code>等长度单位、百分比</p>
<ul>
<li><code>padding:10px;</code>                      上下左右</li>
<li><code>padding:10px 10px;</code>                 上下  左右</li>
<li><code>padding:10px 10px 10px;</code>         上 左右 下</li>
<li><code>padding:10px 10px 10px 10px;</code> 上 右 下 左（设置4个点–&gt;顺时针方向）</li>
</ul>
</li>
</ul>
</li>
<li><p>单独属性：</p>
<ul>
<li><code>padding-top:</code></li>
<li><code>padding-right:</code></li>
<li><code>padding-bottom:</code></li>
<li><code>padding-left:</code></li>
</ul>
</li>
<li><p>当设置内边距的时候会把盒子撑大，为了保持盒子原来的大小，应该高度和宽度进行减小，根据<code>width</code>和<code>height</code>减小</p>
</li>
<li><p>margin 外边距</p>
<ul>
<li><p>值：与<code>padding</code>相同</p>
</li>
<li><p>单独属性：与<code>padding</code>相同</p>
</li>
</ul>
</li>
<li><p>外边距合并：两个盒子同时设置了外边距，会进行一个外边距合并</p>
</li>
</ul>
<hr>
<p><strong>补充盒子模型内容</strong></p>
<hr>
<ul>
<li><p><strong>标准盒子模型</strong></p>
<ul>
<li>盒子模型是<code>css</code>中一个重要的概念，理解了盒子模型才能更好的排版。其实盒子模型有两种，分别是 <code>ie</code>盒子模型和标准 <code>w3c</code> 盒子模型。他们对盒子模型的解释各不相同，先来看看我们熟知的标准盒子模型</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-320bad065d62c499.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li><p>从上图可以看到标准 <code>w3c</code> 盒子模型的范围包括 <code>margin</code>、<code>border</code>、<code>padding</code>、<code>content</code>，并且 <code>content</code>部分不包含其他部分</p>
</li>
<li><p><strong> IE盒子模型</strong></p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-693242e2f03506f8.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>从上图可以看到 <code>ie</code>盒子模型的范围也包括 <code>margin</code>、<code>border</code>、<code>padding</code>、<code>content</code></li>
<li><p>和标准 <code>w3c</code> 盒子模型不同的是：<code>ie</code> 盒子模型的 <code>content</code> 部分包含了 <code>border</code>和 <code>padding</code></p>
</li>
<li><p><code>IE</code>盒子模型<code>width</code> = <code>padding</code>+<code>border</code>+<code>内容</code></p>
</li>
<li><p>标准盒子模型 = 内容的宽度（不包含<code>border</code>+<code>padding</code>）</p>
</li>
<li><p>例：</p>
<ul>
<li>一个盒子的   <code>margin</code>为 20px，<code>border</code> 为 1px，<code>padding</code>为 10px，<code>content</code> 的宽为 200px、高为 50px，假如用标准 <code>w3c</code> 盒子模型解释，那么这个盒子需要占据的位置为：宽 <code>20*2+1*2+10*2+200=262px</code>、高 <code>20*2+1*2*10*2+50=112px</code>，盒子的实际大小为：宽 <code>1*2+10*2+200=222px</code>、高 <code>1*2+10*2+50=72px</code>；假如用ie 盒子模型，那么这个盒子需要占据的位置为：宽 <code>20*2+200=240px</code>、高 <code>20*2+50=70px</code>，盒子的实际大小为：宽 <code>200px</code>、高 <code>50px</code></li>
</ul>
</li>
<li><p>那应该选择哪中盒子模型呢？当然是“标准 <code>w3c</code> 盒子模型”了。怎么样才算是选择了“标准 <code>w3c</code>盒子模型”呢？很简单，就是在网页的顶部加上 <code>doctype</code> 声明。</p>
</li>
<li>假如不加<code>doctype</code> 声明，那么各个浏览器会根据自己的行为去理解网页，即 <code>ie</code>浏览器会采用 <code>ie</code> 盒子模型去解释你的盒子，而 <code>ff</code>会采用标准<code>w3c</code> 盒子模型解释你的盒子，所以网页在不同的浏览器中就显示的不一样了。</li>
<li>反之，假如加上了 <code>doctype</code> 声明，那么所有浏览器都会采用标准 <code>w3c</code>盒子模型去解释你的盒子，网页就能在各个浏览器中显示一致了。</li>
</ul>
<hr>
<ul>
<li>用 <code>jquery</code> 做的例子来证实一下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;你用的盒子模型是？&lt;/title&gt;</div><div class="line">&lt;script language=&quot;javascript&quot; src=&quot;jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script language=&quot;javascript&quot;&gt;</div><div class="line">var sbox = $.boxmodel ? &quot;标准w3c&quot;:&quot;ie&quot;;</div><div class="line">document.write(&quot;您的页面目前支持：&quot;+sbox+&quot;盒子模型&quot;);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<ul>
<li>　上面的代码没有加上 <code>doctype</code> 声明，在 <code>ie</code> 浏览器中显示  <code>ie</code>盒子模型，在 ff 浏览器中显示“标准<code>w3c</code> 盒子模型”。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!doctype html public &quot;-//w3c//dtd xhtml 1.0 transitional//en&quot; &quot;http://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd&quot;&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;你用的盒子模型是标准w3c盒子模型&lt;/title&gt;</div><div class="line">&lt;script language=&quot;javascript&quot; src=&quot;jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script language=&quot;javascript&quot;&gt;</div><div class="line">var sbox = $.boxmodel ? &quot;标准w3c&quot;:&quot;ie&quot;;</div><div class="line">document.write(&quot;您的页面目前支持：&quot;+sbox+&quot;盒子模型&quot;);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<ul>
<li>　代码2 与代码1 唯一的不同的就是顶部加了 <code>doctype</code>声明。在所有浏览器中都显示“标准 <code>w3c</code>盒子模型”</li>
</ul>
<ul>
<li><p>所以为了让网页能兼容各个浏览器，让我们用标准 <code>w3c</code> 盒子模型</p>
</li>
<li><p>扩展</p>
<ul>
<li><a href="http://www.jianshu.com/p/e2eb0d8c9de6" target="_blank" rel="external">学会使用box-sizing布局</a></li>
</ul>
</li>
</ul>
<hr>
<h4 id="第十四章-块元素、行元素与溢出"><a href="#第十四章-块元素、行元素与溢出" class="headerlink" title="第十四章 块元素、行元素与溢出"></a>第十四章 块元素、行元素与溢出</h4><hr>
<ul>
<li>基本概念<ul>
<li>块级元素：默认情况下独占一行的元素，可控制宽高、上下边距；</li>
<li>行内元素：默认情况下一行可以摆放多个的元素，不可控制宽高和上下边距</li>
</ul>
</li>
<li><p>行块转换</p>
<ul>
<li><code>display:none</code>;  不显示</li>
<li><code>display:block</code>; 变成块级元素</li>
<li><code>display:inline</code>; 变成行级元素</li>
<li><code>display:inline-block</code>; 以块级元素样式展示，以行级元素样式排列</li>
</ul>
</li>
<li><p>溢出</p>
<ul>
<li><code>overflow:hidden</code>;   溢出隐藏</li>
<li><code>overflow:scroll</code>;   内容会被修剪，浏览器会显示滚动条</li>
<li><code>overflow:auto</code>;   如果内容被修剪，则产生滚动条</li>
</ul>
</li>
<li><p>文本不换行：<code>white-space:nowrap</code>;</p>
</li>
<li>长单词换行：<code>word-wrap:break-word</code>;</li>
</ul>
<ul>
<li><p>行内元素和快级元素小结</p>
<ul>
<li><p>一、<strong>块级元素</strong>：block element</p>
<ul>
<li>每个块级元素默认占一行高度，一行内添加一个块级元素后无法一般无法添加其他元素（<code>float</code>浮动后除外）。两个块级元素连续编辑时，会在页面自动换行显示。块级元素一般可嵌套块级元素或行内元素；</li>
<li><p>块级元素一般作为容器出现，用来组织结构，但并不全是如此。有些块级元素，如只能包含块级元素。</p>
</li>
<li><p><code>DIV</code> 是最常用的块级元素，元素样式的<code>display:block</code>都是块级元素。它们总是以一个块的形式表现出来，并且跟同级的兄弟块依次竖直排列，左右撑满。</p>
</li>
</ul>
</li>
<li><p>二、<strong>行内元素</strong>：inline element</p>
<ul>
<li>也叫内联元素、内嵌元素等；行内元素一般都是基于语义级(semantic)的基本元素，只能容纳文本或其他内联元素，常见内联元素 “a”。比如 <code>SPAN</code>元素，<code>IFRAME</code>元素和元素样式的<code>display : inline</code>的都是行内元素。例如文字这类元素，各个字母 之间横向排列，到最右端自动折行。</li>
</ul>
</li>
<li><p>三、<strong>block（块）元素的特点:</strong></p>
<ul>
<li>①、总是在新行上开始；</li>
<li>②、高度，行高以及外边距和内边距都可控制；</li>
<li>③、宽度缺省是它的容器的100%，除非设定一个宽度。</li>
<li>④、它可以容纳内联元素和其他块元素</li>
</ul>
</li>
<li><p>四、<strong>inline元素的特点</strong></p>
<ul>
<li>①、和其他元素都在一行上；</li>
<li>②、高，行高及外边距和内边距不可改变；</li>
<li>③、宽度就是它的文字或图片的宽度，不可改变</li>
<li>④、内联元素只能容纳文本或者其他内联元素</li>
</ul>
</li>
<li><p><strong>对行内元素，需要注意如下</strong>:</p>
<ul>
<li>设置宽度<code>width</code> 无效。 设置高度<code>height</code>无效，可以通过<code>line-height</code>来设置。 设置<code>margin</code></li>
<li>只有左右<code>margin</code>有效，上下无效。</li>
<li>设置<code>padding</code>只有左右<code>padding</code>有效，上下则无效。注意元素范围是增大了，但是对元素周围的内容是没影响的。</li>
</ul>
</li>
<li><p>五、<strong>常见的块状元素</strong></p>
<ul>
<li><code>address</code> – 地址</li>
<li><code>blockquote</code> – 块引用</li>
<li><code>center</code> – 举中对齐块</li>
<li><code>dir</code> – 目录列表</li>
<li><code>div</code> – 常用块级容易，也是<code>CSS layout</code>的主要标签</li>
<li><code>dl</code> – 定义列表</li>
<li><code>fieldset</code> – <code>form</code>控制组</li>
<li><code>form</code> – 交互表单</li>
<li><code>h1</code> – 大标题</li>
<li><code>h2</code> – 副标题</li>
<li><code>h3</code> – 3级标题</li>
<li><code>h4</code> – 4级标题</li>
<li><code>h5</code> – 5级标题</li>
<li><code>h6</code> – 6级标题</li>
<li><code>hr</code> – 水平分隔线</li>
<li><code>isindex</code> – <code>input prompt</code></li>
<li><code>menu</code> – 菜单列表</li>
<li><code>noframes</code> – <code>frames</code>可选内容，（对于不支持frame的浏览器显示此区块内容</li>
<li><code>noscript</code> – 可选脚本内容（对于不支持<code>script</code>的浏览器显示此内容）</li>
<li><code>ol</code> – 有序表单</li>
<li><code>p</code> – 段落</li>
<li><code>pre</code> – 格式化文本</li>
<li><code>table</code> – 表格</li>
<li><code>ul</code> – 无序列表</li>
</ul>
</li>
<li><p>六、<strong>常见的内联元素</strong></p>
<ul>
<li><code>a</code> – 锚点</li>
<li><code>abbr</code> – 缩写</li>
<li><code>acronym</code> – 首字</li>
<li><code>b</code> – 粗体(不推荐)</li>
<li><code>bdo</code> – <code>bidi override</code></li>
<li><code>big</code> – 大字体</li>
<li><code>br</code> – 换行</li>
<li><code>cite</code> – 引用</li>
<li><code>code</code> – 计算机代码(在引用源码的时候需要)</li>
<li><code>dfn</code> – 定义字段</li>
<li><code>em</code> – 强调</li>
<li><code>font</code> – 字体设定(不推荐)</li>
<li><code>i</code> – 斜体</li>
<li><code>img</code> – 图片</li>
<li><code>input</code> – 输入框</li>
<li><code>kbd</code> – 定义键盘文本</li>
<li><code>label</code> – 表格标签</li>
<li><code>q</code> – 短引用</li>
<li><code>s</code> – 中划线(不推荐)</li>
<li><code>samp</code> – 定义范例计算机代码</li>
<li><code>select</code> – 项目选择</li>
<li><code>small</code> – 小字体文本</li>
<li><code>span</code> – 常用内联容器，定义文本内区块</li>
<li><code>strike</code> – 中划线</li>
<li><code>strong</code> – 粗体强调</li>
<li><code>sub</code> – 下标</li>
<li><code>sup</code> – 上标</li>
<li><code>textarea</code> – 多行文本输入框</li>
<li><code>tt</code> – 电传文本</li>
<li><code>u</code> – 下划线</li>
</ul>
</li>
<li><p>七，<strong>可变元素</strong></p>
<ul>
<li>可变元素为根据上下文语境决定该元素为块元素或者内联元素。</li>
<li><code>applet</code> - <code>java applet</code></li>
<li><code>button</code> - 按钮</li>
<li><code>del</code>- 删除文本</li>
<li><code>iframe</code> - <code>inline frame</code></li>
<li><code>ins</code> - 插入的文本</li>
<li><code>map</code> - 图片区块(<code>map</code>)</li>
<li><code>object</code> - <code>object</code>对象</li>
<li><code>script</code> - 客户端脚本</li>
</ul>
</li>
<li><p>八、<strong>行内元素与块级元素有什么不同</strong></p>
<ul>
<li><p>区别一：</p>
<ul>
<li>块级：块级元素会独占一行，默认情况下宽度自动填满其父元素宽度</li>
<li>行内：行内元素不会独占一行，相邻的行内元素会排在同一行。其宽度随内容的变化而变化。</li>
</ul>
</li>
<li><p>区别二：</p>
<ul>
<li>块级：块级元素可以设置宽高</li>
<li>行内：行内元素不可以设置宽高</li>
</ul>
</li>
<li><p>区别三：</p>
<ul>
<li>块级：块级元素可以设置<code>margin</code>，<code>padding</code></li>
<li>行内：行内元素水平方向的<code>margin-left;</code> <code>margin-right;</code></li>
</ul>
</li>
<li><p><code>padding-left;</code> <code>padding-right</code>;可以生效。但是竖直方向的<code>margin-bottom</code>; <code>margin-top</code>; <code>padding-top</code>; <code>padding-bottom</code>;却不能生效。</p>
</li>
<li><p>区别四：</p>
<ul>
<li>块级：<code>display:block</code>;</li>
<li>行内：<code>display:inline</code>;</li>
</ul>
</li>
</ul>
</li>
<li><p>替换元素有如下：（和<code>img</code>一样的设置方法）</p>
<ul>
<li><code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code>、<code>&lt;select&gt;</code></li>
<li><code>&lt;object&gt;</code>都是替换元素，这些元素都没有实际的内容</li>
</ul>
</li>
</ul>
</li>
<li>可以通过修改<code>display</code>属性来切换块级元素和行内元素</li>
</ul>
<hr>
<h4 id="第十五章-定位"><a href="#第十五章-定位" class="headerlink" title="第十五章 定位"></a>第十五章 定位</h4><hr>
<ul>
<li><p><code>static</code>静态定位（不对它的位置进行改变，在哪里就在那里）</p>
<ul>
<li>默认值。没有定位，元素出现在正常的流中（忽略 <code>top</code>,<code>bottom,</code>  <code>left, right</code> 或者 <code>z-index</code> 声明）。</li>
</ul>
</li>
<li><p><code>fixed</code>固定定位（参照物–浏览器窗口）—做 弹窗广告用到</p>
<ul>
<li>生成固定定位的元素，相对于浏览器窗口进行定位。 元素的位置通过 <code>&quot;left&quot;</code>, <code>&quot;top&quot;</code>, <code>&quot;right&quot;</code>以及 <code>&quot;bottom&quot;</code>属性进行规定。 </li>
</ul>
</li>
<li><p><code>relative</code>（相对定位 ）（参照物以他本身）</p>
<ul>
<li>生成相对定位的元素，相对于其正常位置进行定位。</li>
</ul>
</li>
<li><p><code>absolute</code>（绝对定位）(除了<code>static</code>都可以，找到参照物–&gt;与它最近的已经有定位的父元素进行定位)</p>
<ul>
<li>生成绝对定位的元素，相对于 <code>static</code> 定位以外的第一个父元素进行定位。</li>
<li>元素的位置通过 “<code>left&quot;</code>, <code>&quot;top&quot;</code>, <code>&quot;right&quot;</code> 以及 <code>&quot;bottom&quot;</code> 属性进行规定</li>
</ul>
</li>
<li><p>z-index</p>
<ul>
<li><code>z-index</code> 属性设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。</li>
<li>定位的基本思想: 它允许你定义元素框相对于其正常位置应该出现的位置，或者相对于父元素、另一个元素甚至浏览器窗口本身的位置。</li>
</ul>
</li>
<li><p>一切皆为框</p>
<ul>
<li>块级元素: <code>div</code>、<code>h1</code>或<code>p</code>元素 即：显示为一块内容称之为 “块框“ ;</li>
<li>行内元素: <code>span</code>,<code>strong</code>,<code>a</code>等元素 即：内容显示在行中称 “行内框”;</li>
<li>使用display属性改变成框的类型 即：<code>display:block</code>; 让行内元素设置为块级元素，<code>display:none;</code> 没有框</li>
</ul>
</li>
<li><p>相对定位：</p>
<ul>
<li>如果对一个元素进行相对定位，它将出现在它所在的位置上。 </li>
<li>通过设置垂直或水平位置，让这个元素“相对于”它的起点进行移动</li>
<li><code>.adv_relative {  position: relative;  left: 30px;  top: 20px; }</code></li>
</ul>
</li>
<li><p>绝对定位：</p>
<ul>
<li>元素的位置相对于最近的已定位祖先元素，如果元素没有已定位 的祖先元素，它的位置相对于最初的包含块。 <code>.adv_absolute {  position: absolute;  left: 30px;  top: 20px; }</code></li>
</ul>
</li>
</ul>
<hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-f72c1c8486445df1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/1480597-7ab9cda0bbd7e62f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<h4 id="第十六章-框架"><a href="#第十六章-框架" class="headerlink" title="第十六章 框架"></a>第十六章 框架</h4><hr>
<ul>
<li><code>frameset</code>框架：<ul>
<li><code>&lt;frameset&gt;</code> —-  用来定义一个框架；双标签<br>不能和  <code>&lt;body&gt;</code>  一起使用</li>
</ul>
</li>
<li><p><code>rows</code>、<code>cols</code>属性</p>
<ul>
<li><code>rows</code> 定义行表示框架有多少行（取值 <code>px</code>/<code>%</code>/ <code>*</code> ）</li>
<li><code>cols</code>   定义列表示框架有多少列（取值<code>px</code>/ <code>%</code>/ <code>*</code> ）</li>
</ul>
</li>
<li><p>frame子框架</p>
<ul>
<li><p>&lt;<code>frame</code>&gt;  —-  表示框架中的某一个部分；单标签，要跟结束标志</p>
<ul>
<li><code>src</code> 显示的网页的路径</li>
<li><code>name</code> 框架名</li>
<li><code>frameborder</code>  边框线（取值 0 / 1）</li>
</ul>
</li>
<li><p>&lt;<code>noframes</code>&gt;属性</p>
</li>
<li><p>&lt;<code>noframes</code>&gt; 提供不支持框架的浏览器显示<code>body</code>的内容；双标签</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;frameset&gt;</div><div class="line">     &lt;frame  src=“”  /&gt;</div><div class="line">     &lt;frame  src=“” /&gt;</div><div class="line">     &lt;frame  src=“” /&gt;</div><div class="line">     &lt;noframes&gt;</div><div class="line">      &lt;body&gt;内容&lt;/body&gt;</div><div class="line">     &lt;/noframes&gt;</div><div class="line">&lt;/frameset&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>&lt;iframe&gt;</code>内联框架<ul>
<li><code>iframe</code>元素会创建包含另外一个文档的内联框架（即行内框架）</li>
<li>允许和 <code>body</code> 一起使用</li>
<li><code>width</code> 宽（取值 px / %）</li>
<li><code>height</code> 高（取值 px / %）</li>
<li><code>name</code> 框架名</li>
<li><code>frameborder</code> 边框线（取值 0 / 1）</li>
<li><code>src</code> 显示的网页的路径</li>
</ul>
</li>
</ul>
<hr>
<h4 id="第十七章-css高级属性"><a href="#第十七章-css高级属性" class="headerlink" title="第十七章 css高级属性"></a>第十七章 css高级属性</h4><hr>
<ul>
<li><code>opacity</code>透明属性<ul>
<li><code>opacity</code><ul>
<li>对于<code>IE6/7/</code>，使用<code>filter:alpha(opacity:值;</code>)  值为<code>0-100</code></li>
<li>对于<code>Webkit</code>，<code>Opera</code>，<code>Firefox</code>，<code>IE9+</code>，使用<code>opacity</code>:值; 值为<code>0-1</code></li>
<li>对于早期火狐，使用<code>-moz-opacity</code>:值; 值为<code>0-1</code></li>
<li>所以写透明属性时，一般写法是</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> &#123;	</div><div class="line">    opacity:0.5;</div><div class="line">   filter:alpha(opacity：50);/*0-100*/</div><div class="line">   -moz-opacity:0.5;	/*取值0-1*/--&gt;针对早起版本的火狐兼容问题的解决</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p><code>border-radius</code>圆角边框属性</p>
<ul>
<li>向 <code>div</code> 元素添加圆角边框<ul>
<li><code>border-radius:10px</code>;</li>
</ul>
</li>
</ul>
</li>
<li><p><code>box-shadow</code>阴影属性</p>
<ul>
<li><p><code>box-shadow</code>属性向框添加阴影效果,后面跟4个参数。</p>
</li>
<li><p><code>box-shadow:0px   0px   10px   #000;</code></p>
</li>
</ul>
</li>
<li><p><code>&lt;embed&gt;</code>属性</p>
<ul>
<li><p>是<code>HTML5</code>中新增的标签,媒体嵌入插件标签，可以通过<code>&lt;embed&gt;</code>插入音频或视频</p>
</li>
<li><p><code>&lt;embed src=“media/music.mp3” /&gt;</code></p>
</li>
<li><p>格式<code>.mid</code> <code>.wav</code> <code>.mp3</code>等</p>
</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><strong>CSS部分导图总结</strong></li>
</ul>
<hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-4b55b5085a7d0c56.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<ul>
<li><a href="https://yunpan.cn/cM9va2bHD4wwu" target="_blank" rel="external">原文件下载地址</a>   访问密码 342a</li>
</ul>
<hr>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-a893d4023c39c78a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<ul>
<li><code>css</code>常见简写</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1480597-cbce5ef927ab2589.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="css简写速查"></p>
<hr>
<h3 id="第三部分-附录"><a href="#第三部分-附录" class="headerlink" title="第三部分 附录"></a>第三部分 附录</h3><hr>
<h4 id="附录一-DIV命名规范"><a href="#附录一-DIV命名规范" class="headerlink" title="附录一 DIV命名规范"></a>附录一 DIV命名规范</h4><hr>
<ul>
<li><p>企业<code>DIV</code>使用频率高的命名方法</p>
</li>
<li><p><strong>网页内容类</strong></p>
<ul>
<li><p>标题: <code>title</code></p>
<ul>
<li>摘要: <code>summary</code></li>
<li>箭头： <code>arrow</code></li>
<li>商标： <code>label</code></li>
<li>网站标志： <code>logo</code></li>
<li>转角/圆角：<code>corner</code></li>
<li>横幅广告： <code>banner</code></li>
<li>子菜单： <code>subMenu</code></li>
<li>搜索： <code>search</code></li>
<li>搜索框： <code>searchBox</code></li>
<li>登录： <code>login</code></li>
<li>登录条：<code>loginbar</code></li>
<li>工具条： <code>toolbar</code></li>
<li>下拉： <code>drop</code></li>
<li>标签页： <code>tab</code></li>
<li>当前的： <code>current</code></li>
<li>列表： <code>list</code></li>
<li>滚动： <code>scroll</code></li>
<li>服务： <code>service</code></li>
<li>提示信息： <code>msg</code></li>
<li>热点：<code>hot</code></li>
<li>新闻： <code>news</code></li>
<li>小技巧： <code>tips</code></li>
<li>下载： <code>download</code></li>
<li>栏目标题： <code>title</code></li>
<li>热点： <code>hot</code></li>
<li>加入：<code>joinus</code></li>
<li>注册： <code>regsiter</code></li>
<li>指南： <code>guide</code></li>
<li>友情链接： <code>friendlink</code></li>
<li>状态： <code>status</code></li>
<li>版权： <code>copyright</code></li>
<li>按钮： <code>btn</code></li>
<li>合作伙伴： <code>partner</code></li>
<li>投票： <code>vote</code></li>
<li>左右中：<code>left</code>  <code>right</code>  <code>center</code></li>
</ul>
<hr>
</li>
<li>注释的写法: <code>/* Footer */</code> 内容区<code>/* End Footer */</code></li>
</ul>
</li>
<li><p><strong>id的命名:</strong></p>
<ul>
<li><p>页面结构</p>
<ul>
<li>容器: <code>container</code></li>
<li>页头：<code>header</code></li>
<li>内容：<code>content</code>/<code>container</code></li>
<li>页面主体：<code>main</code></li>
<li>页尾：<code>footer</code></li>
<li>导航：<code>nav</code></li>
<li>侧栏：<code>sidebar</code></li>
<li>栏目：<code>column</code></li>
<li>页面外围控制整体布局宽度：<code>wrapper</code></li>
<li>左右中：<code>left</code> <code>right</code> <code>center</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>导航</p>
<ul>
<li>导航：<code>nav</code></li>
<li>主导航：<code>mainbav</code></li>
<li>子导航：<code>subnav</code></li>
<li>顶导航：<code>topnav</code></li>
<li>边导航：<code>sidebar</code></li>
<li>左导航：<code>leftsidebar</code></li>
<li>右导航：<code>rightsidebar</code></li>
<li>菜单：<code>menu</code></li>
<li>子菜单：<code>submenu</code></li>
<li>标题: <code>title</code></li>
<li>摘要: <code>summary</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>功能</p>
<ul>
<li>标志：<code>logo</code></li>
<li>广告：<code>banner</code></li>
<li>登陆：<code>login</code></li>
<li>登录条：<code>loginbar</code></li>
<li>注册：<code>regsiter</code></li>
<li>搜索：<code>search</code></li>
<li>功能区：<code>shop</code></li>
<li>标题：<code>title</code></li>
<li>加入：<code>joinus</code></li>
<li>状态：<code>status</code></li>
<li>按钮：<code>btn</code></li>
<li>滚动：<code>scroll</code></li>
<li>标签页：<code>tab</code></li>
<li>文章列表：<code>list</code></li>
<li>提示信息：<code>msg</code></li>
<li>当前的:<code>current</code></li>
<li>小技巧：<code>tips</code></li>
<li>图标: <code>icon</code></li>
<li>注释：<code>note</code></li>
<li>指南：<code>guild</code></li>
<li>服务：<code>service</code></li>
<li>热点：<code>hot</code></li>
<li>新闻：<code>news</code></li>
<li>下载：<code>download</code></li>
<li>投票：<code>vote</code></li>
<li>合作伙伴：<code>partner</code></li>
<li>友情链接：<code>link</code></li>
<li>版权：<code>copyright</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong><code>class</code>的命名:</strong></p>
<ul>
<li><p>颜色:使用颜色的名称或者16进制代码,如</p>
<ul>
<li><code>.red { color: red; }</code></li>
<li><code>.f60 { color: #f60; }</code></li>
<li><code>.ff8600 { color: #ff8600; }</code></li>
</ul>
</li>
<li><p>字体大小,直接使用”font+字体大小”作为名称,如</p>
<ul>
<li><code>.font12px { font-size: 12px; }</code></li>
<li><code>.font9px {font-size: 9pt; }</code></li>
</ul>
</li>
<li><p>对齐样式,使用对齐目标的英文名称,如</p>
<ul>
<li><code>.left { float:left; }</code></li>
<li><code>.bottom { float:bottom; }</code></li>
</ul>
</li>
<li><p>标题栏样式,使用”类别+功能”的方式命名,如</p>
<ul>
<li><code>.barnews { }</code></li>
<li><code>.barproduct { }</code></li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p><strong>注意事项::</strong></p>
<ul>
<li>一律小写;</li>
<li>尽量用英文;</li>
<li>不加中杠和下划线;</li>
<li>尽量不缩写，除非一看就明白的单词.</li>
</ul>
</li>
</ul>
<hr>
</li>
</ul>
</li>
<li><p><strong>推荐的 <code>CSS</code> 书写顺序：</strong></p>
<ul>
<li><p>显示属性</p>
<ul>
<li><code>display</code></li>
<li><code>list-style</code></li>
<li><code>position</code></li>
<li><code>float</code></li>
<li><code>clear</code></li>
</ul>
</li>
<li><p>自身属性</p>
<ul>
<li><code>width</code></li>
<li><code>height</code></li>
<li><code>margin</code></li>
<li><code>padding</code></li>
<li><code>border</code></li>
<li><code>background</code></li>
</ul>
</li>
<li><p>文本属性</p>
<ul>
<li><code>color</code></li>
<li><code>font</code></li>
<li><code>text-decoration</code></li>
<li><code>text-align</code></li>
<li><code>vertical-align</code></li>
<li><code>white-space</code></li>
<li><code>other text</code></li>
<li><code>content</code>    </li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="附录二-CSS精灵"><a href="#附录二-CSS精灵" class="headerlink" title="附录二 CSS精灵"></a>附录二 CSS精灵</h4><hr>
<ul>
<li><strong>CSS精灵原理以及应用</strong><ul>
<li><code>CSS</code>雪碧的基本原理是把你的网站上用到的一些图片整合到一张单独的图片中，从而减少你的网站的HTTP请求数量。<ul>
<li>该图片使用<code>CSS</code>   <code>background和background-position</code>属性渲染，这也就意味着你的标签变得更加复杂了，图片是在<code>CSS</code>中定义，而非<code>&lt;img&gt;</code>标签。</li>
</ul>
</li>
</ul>
</li>
<li><strong>一个简单的例子</strong>：<ul>
<li>一张图片作出一个按钮的三个状态</li>
<li>一个链接用<code>CSS</code>做成按钮的样式，我们可以使用同一张图片，完成按钮的三个状态，<code>a:link</code>，<code>a:hover</code>，<code>a:active</code> <code>&lt;a class=&quot;button&quot; href=&quot;#&quot;&gt;链接&lt;/a&gt;</code></li>
<li>加入右侧的图片为：<code>200px 65px</code>的三个按钮图拼合而成的图片<code>button.png</code>，从上到下一次为按钮的普通、鼠标滑过、鼠标点击的状态。则可以使用<code>CSS</code>进行定义。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">a &#123;</div><div class="line">    display:block; </div><div class="line">    width:200px; </div><div class="line">    height:65px; </div><div class="line">    line-height:65px; /*定义状态*/</div><div class="line">    text-indent:-2015px; /*隐藏文字*/</div><div class="line">    background-image:url(button.png); /*定义背景图片*/</div><div class="line">    background-position:0 0;</div><div class="line">    /*定义链接的普通状态，此时图像显示的是顶上的部分*/</div><div class="line">&#125;</div><div class="line"></div><div class="line">a:hover &#123;</div><div class="line">    background-position:0 -66px;</div><div class="line">    /*定义链接的滑过状态，此时显示的为中间部分，向下取负值*/</div><div class="line">&#125;</div><div class="line">a:active &#123;</div><div class="line">    background-position:0 -132px;                      </div><div class="line">    /*定 义链接的普通状态，此时显示的是底部的部分，向下取负值*/</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>更多的<code>CSS</code>雪碧，图片更复杂，背景定位更精确。可能会用到大量的数值<ul>
<li>如：<code>background:url(nav.png) -180px 24pxno-repeat</code>; 来达到更精确的定位</li>
</ul>
</li>
<li><strong>优点：</strong><ul>
<li>减少加载网页图片时对服务器的请求次数</li>
<li>可以合并多数背景图片和小图标，方便在任何位置使用，这样不同位置的请求只需要调用一个图片，从而减少对服务器的请求次数，降低服务器压力，同时提高了页面的加载速度，节约服务器的流量。</li>
<li>提高页面的加载速度</li>
<li><code>sprite</code>技术的其中一个好处是图片的加载时间(在有许多 <code>sprite</code> 时，单张图片的加载时间)。由所需图片拼成的一张 <code>GIF</code>图片的尺寸会明显小于所有图片拼合前的大小。单张的 <code>GIF</code>只有相关的一个色表，而单独分割的每一张 <code>GIF</code> 都有自己的一个色表，这就增加了总体的大小。因此，单独的一张 <code>JPEG</code> 或者 <code>PNG</code> <code>sprite</code> 在大小上非常可能比把一张图分成多张得来的图片总尺寸小。</li>
<li>减少鼠标滑过的一些<code>bug</code></li>
<li><code>IE6</code>不会主动预加载鼠标滑过即<code>a:hover</code>中的背景图片，所以，如果使用多张图片，鼠标滑过会出现闪白的现象。使用<code>CSS</code>雪碧，由于一张图片即可，所以不会出现这种现象。</li>
</ul>
</li>
<li><strong>不足：</strong><ul>
<li><code>CSS</code>雪碧的最大问题是内存使用</li>
<li>影响浏览器的缩放功能</li>
<li>拼图维护比较麻烦</li>
<li>使<code>CSS</code>的编写变得困难</li>
<li><code>CSS</code> 雪碧调用的图片不能被打印</li>
<li>错误得使用 <code>Sprites</code> 影响可访问性</li>
</ul>
</li>
</ul>
<h4 id="附录三-一些tips解决方案"><a href="#附录三-一些tips解决方案" class="headerlink" title="附录三 一些tips解决方案"></a>附录三 一些tips解决方案</h4><hr>
<h5 id="页面优化实践"><a href="#页面优化实践" class="headerlink" title="页面优化实践"></a>页面优化实践</h5><hr>
<ul>
<li><p>从下面的几个方面可以进行页面的优化：</p>
<ul>
<li>减少请求数</li>
<li>图片合并</li>
<li><code>CSS</code>文件合并</li>
<li>减少内联样式</li>
<li>避免在 <code>CSS</code>中使用 <code>import</code></li>
<li>减少文件大小</li>
<li>选择适合的图片格式</li>
<li>图片压缩</li>
<li><code>CSS</code> 值缩写（<code>Shorthand Property</code>)</li>
<li>文件压缩</li>
<li>页面性能</li>
<li>调整文件加载顺序</li>
<li>减少标签数量</li>
<li>调整选择器长度</li>
<li>尽量使用<code>CSS</code> 制作显示表现</li>
<li>增强代码可读性与可维护性</li>
<li>规范化</li>
<li>语义化</li>
<li>模块化</li>
</ul>
</li>
</ul>
<h5 id="写DIV-CSS-的一些常识"><a href="#写DIV-CSS-的一些常识" class="headerlink" title="写DIV+CSS 的一些常识"></a>写DIV+CSS 的一些常识</h5><hr>
<ul>
<li><p>不要使用过小的图片做背景平铺</p>
<ul>
<li>这就是为何很多人都不用 <code>1px</code> 的原因，这才知晓。宽高 <code>1px</code> 的图片平铺出一个宽高 <code>200px</code> 的区域，需要 <code>200200=40, 000</code> 次，占用资源</li>
</ul>
</li>
<li><p>无边框</p>
<ul>
<li>推荐的写法是 <code>border:none</code>;，哈哈，我一直在用这个。 <code>border:0;</code> 只是定义边框宽度为零，但边框样式、颜色还是会被浏览器解析，占用资源</li>
</ul>
</li>
<li><p>慎用 通配符</p>
<ul>
<li>所谓通配符，就是将<code>CSS</code> 中的所有标签均初始化，不管用的不用的，过时的先进的，一视同仁，这样，大大的占用资源。要有选择的初始化标签。</li>
</ul>
</li>
<li><p><code>CSS</code>的十六进制颜色代码缩写</p>
<ul>
<li>习惯了缩写及小写，这才知道，原来不是推荐的写法，为的是减少解析所占用的资源。但同时会增加文件体积。孰优孰劣，有待仔细考证。</li>
</ul>
</li>
<li><p>样式放头上，脚本放脚下。不内嵌，只外链</p>
</li>
<li><p>坚决不用 <code>CSS</code>表达式</p>
</li>
<li><p>使用 引用样式表，而不是通过<code>@import</code> 导入。</p>
</li>
<li><p>一般来说，<code>PNG</code>比 <code>GIF</code> 要小，小得多。再者，<code>GIF</code> 中有多少颜色是被浪费的，很值得优化。</p>
</li>
<li><p>千万不要在 <code>HTML</code>中缩放图片，一者不好看，二者占资源。</p>
</li>
<li><p>正文字体最好用偶数</p>
<ul>
<li><code>12px</code>、<code>14px</code>、<code>16px</code>，效果非常好。特例，<code>15px</code>。</li>
</ul>
</li>
<li><p><code>block</code>、<code>ul</code>、<code>ol</code>等上下留出至少一倍行距，左侧至少两倍行距，右侧随意。</p>
</li>
<li><p>段落之间，至少要有一倍行距</p>
</li>
<li><p>强行指定某些元素的 <code>line-height</code>，正文 <code>1.6</code>倍于文字大小，标题<code>1.3</code>倍。</p>
</li>
<li><p>中文标点用全角</p>
<ul>
<li>英文夹杂在中文中，左右空格，半角。</li>
</ul>
</li>
<li><p>中文字体的粗体和斜体，远离较好</p>
</li>
</ul>
<h5 id="常用代码片段"><a href="#常用代码片段" class="headerlink" title="常用代码片段"></a>常用代码片段</h5><hr>
<ul>
<li>雅虎工程师提供的<code>CSS</code>初始化示例代码【仅供参考】<ul>
<li>可以在<code>html</code>头文件中直接引用，从而避免浏览器的不兼容带来的错误。</li>
</ul>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">body,</div><div class="line">div,</div><div class="line">dl,</div><div class="line">dt,</div><div class="line">dd,</div><div class="line">ul,</div><div class="line">ol,</div><div class="line">li,</div><div class="line">h1,</div><div class="line">h2,</div><div class="line">h3,</div><div class="line">h4,</div><div class="line">h5,</div><div class="line">h6,</div><div class="line">pre,</div><div class="line">code,</div><div class="line">form,</div><div class="line">fieldset,</div><div class="line">legend,</div><div class="line">input,</div><div class="line">button,</div><div class="line">textarea,</div><div class="line">p,</div><div class="line">blockquote,</div><div class="line">th,</div><div class="line">td &#123; </div><div class="line">    margin:0; padding:0; </div><div class="line">&#125;</div><div class="line">body &#123;</div><div class="line">    background:#fff; </div><div class="line">    color:#555; </div><div class="line">    font-size:14px; </div><div class="line">    font-family: Verdana, Arial, Helvetica, sans-serif; </div><div class="line">&#125;</div><div class="line">td,</div><div class="line">th,</div><div class="line">caption &#123; </div><div class="line">    font-size:14px;</div><div class="line">&#125;</div><div class="line">h1, </div><div class="line">h2, </div><div class="line">h3, </div><div class="line">h4, </div><div class="line">h5, </div><div class="line">h6 &#123; </div><div class="line">    font-weight:normal; </div><div class="line">    font-size:100%; </div><div class="line">&#125;</div><div class="line"></div><div class="line">address, </div><div class="line">caption,</div><div class="line">cite, </div><div class="line">code, </div><div class="line">dfn, </div><div class="line">em, </div><div class="line">strong,</div><div class="line">th, </div><div class="line">var &#123; </div><div class="line">    font-style:normal; </div><div class="line">    font-weight:normal;</div><div class="line">&#125;</div><div class="line">a &#123; </div><div class="line">    color:#555; </div><div class="line">    text-decoration:none; </div><div class="line">&#125;</div><div class="line">a:hover &#123; </div><div class="line">    text-decoration:underline; </div><div class="line">&#125;</div><div class="line">img &#123;</div><div class="line">    border:none;</div><div class="line">&#125;</div><div class="line">ol,ul,li &#123; </div><div class="line">    list-style:none; </div><div class="line">&#125;</div><div class="line">input, </div><div class="line">textarea, </div><div class="line">select, </div><div class="line">button &#123; </div><div class="line">    font:14px Verdana,Helvetica,Arial,sans-serif; </div><div class="line">&#125;</div><div class="line">table &#123; </div><div class="line">    border-collapse:collapse; </div><div class="line">&#125;</div><div class="line">html &#123;</div><div class="line">    overflow-y: scroll;</div><div class="line">&#125; </div><div class="line">.clearfix:after &#123;</div><div class="line">    content: "."; </div><div class="line">    display: block; </div><div class="line">    height:0; </div><div class="line">    clear:both; </div><div class="line">    visibility: hidden;</div><div class="line">&#125;</div><div class="line">.clearfix &#123; </div><div class="line">    *zoom:1; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><code>mobile meta</code>标签</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">”viewport”</span> <span class="attr">content</span>=<span class="string">”width</span>=<span class="string">320,target-densitydpi</span>=<span class="string">dpi_value,initial-scale</span>=<span class="string">1,</span> <span class="attr">user-scalable</span>=<span class="string">no”/</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>表格不被撑开</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table-layout</span>: <span class="selector-tag">fixed</span>; <span class="selector-tag">word-break</span>: <span class="selector-tag">break-all</span>;;<span class="selector-tag">border-collapse</span>: <span class="selector-tag">collapse</span></div></pre></td></tr></table></figure>
<ul>
<li>不设宽高居中</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">”abc”</span> <span class="attr">style</span>=<span class="string">”display:table;text-align:center;width:100%;height:100%;”</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">”background:#f00;</span> <span class="attr">display:table-cell</span>; <span class="attr">vertical-align:middle</span>;”&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">”button”</span> <span class="attr">value</span>=<span class="string">”item1″</span> /&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>透明度的兼容代码</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">filter:alpha(opacity=50); /*1-100*/</div><div class="line">-moz-opacity:0.5; /*0-1.0*/</div><div class="line">-khtml-opacity:0.5; /*0-1.0*/</div><div class="line">opacity:0.5; /*0-1.0*/</div></pre></td></tr></table></figure>
<ul>
<li>文字溢出点点省略</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">white-space</span><span class="selector-pseudo">:nowrap</span>;</div><div class="line"><span class="selector-tag">text-overflow</span><span class="selector-pseudo">:ellipsis</span>;</div><div class="line"><span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;</div></pre></td></tr></table></figure>
<ul>
<li><p>清除浮动的几种方法</p>
<ul>
<li><p>方法一：<code>投机取巧法</code> – 不推荐</p>
<ul>
<li>直接一个放到当作最后一个子标签放到父标签那儿，此方法屡试不爽，兼容性强</li>
</ul>
</li>
<li><p>方法二：<code>overflow + zoom</code>方法  –不推荐<br> <code>.fix{overflow:hidden; zoom:1;}</code></p>
<ul>
<li>此方法优点在于代码简洁，涵盖所有浏览器</li>
</ul>
</li>
<li><p>方法三：<code>after + zoom</code>方法 -推荐–此方法可以说是综合起来最好的方法了</p>
<ul>
<li><code>clearfix</code>只应用在包含浮动子元素的父级元素上</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.fix</span>&#123;<span class="attribute">zoom</span>:<span class="number">1</span>;&#125;</div><div class="line"><span class="selector-class">.fix</span><span class="selector-pseudo">:after</span>&#123;</div><div class="line">     <span class="attribute">display</span>:block; </div><div class="line">     <span class="attribute">content</span>:<span class="string">'clear'</span>; </div><div class="line">     <span class="attribute">clear</span>:both;</div><div class="line">     <span class="attribute">line-height</span>:<span class="number">0</span>; </div><div class="line">     <span class="attribute">visibility</span>:hidden;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>更多代码片段详情<ul>
<li><a href="http://www.jianshu.com/p/e878122a92a3" target="_blank" rel="external">实用的60个CSS代码片段</a></li>
</ul>
</li>
</ul>
<h5 id="一些总结"><a href="#一些总结" class="headerlink" title="一些总结"></a>一些总结</h5><hr>
<ul>
<li><p>自动继承属性：</p>
<ul>
<li><code>color</code></li>
<li><code>font</code></li>
<li><code>text-align</code></li>
<li><code>list-style</code><br>…</li>
</ul>
</li>
<li><p>非继承属性：</p>
<ul>
<li><code>background</code></li>
<li><code>border</code></li>
<li><code>position</code><br>…</li>
</ul>
</li>
<li><p>具有破坏性的元素：</p>
<ul>
<li><code>float</code></li>
<li><code>display:none;</code></li>
<li><code>position:absoblute/fixed/sticky;</code></li>
</ul>
</li>
<li><p>具有包裹性的元素：</p>
<ul>
<li><p><code>display:inline-block/table-cell</code></p>
</li>
<li><p><code>position:absolute/fixed/sticky</code></p>
</li>
<li><p><code>overflow:hidden/scroll</code></p>
</li>
</ul>
</li>
<li><p>消除图片底部间隙的方法</p>
<ul>
<li><p>图片块状化-无基线对齐<br><code>img{display:block;}</code></p>
</li>
<li><p>图片底线对齐<br><code>img{vertical-align:bottom;}</code></p>
</li>
<li><p>行高足够小 - 基线位置上移<br><code>.box{line-height:0;}</code></p>
</li>
</ul>
</li>
</ul>
<h5 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h5><hr>
<ul>
<li><p>BFC</p>
<ul>
<li>BFC全称<code>”Block Formatting Context”</code> 中文为“块级格式化上下文”</li>
</ul>
<ul>
<li><p>记住这么一句话：<code>BFC</code>元素特性表现原则就是，内部子元素再怎么翻江倒海，翻云覆雨都不会影响外部的元素</p>
</li>
<li><p><code>BFC</code>就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此</p>
</li>
<li><p>扩展阅读</p>
<ul>
<li><a href="https://github.com/dwqs/blog/issues/22" target="_blank" rel="external">CSS中的BFC</a></li>
</ul>
</li>
</ul>
</li>
<li>优雅降级(<code>graceful degradation</code>)<ul>
<li>一开始就构建完整的功能，然后再针对低版本浏览器进行兼容</li>
</ul>
</li>
<li>渐进增强 <code>progressive enhancement</code>：<ul>
<li>是在浏览器开启<code>JavaScript</code>功能后，如果浏览器版本不支持某些  <code>JavaScript</code>  能力，我们解决这种问题的方式</li>
</ul>
</li>
<li>平稳退化<ul>
<li>是在浏览器没有<code>JavaScript</code>功能，或没有开启<code>JavaScript</code>功能情况下，我们解决这种问题的方式；</li>
</ul>
</li>
</ul>
<h5 id="方案荟萃扩展阅读"><a href="#方案荟萃扩展阅读" class="headerlink" title="方案荟萃扩展阅读"></a>方案荟萃扩展阅读</h5><hr>
<ul>
<li><p><strong>关于布局</strong></p>
<ul>
<li><a href="http://www.qianduan.net/css-to-achieve-the-vertical-center-of-the-five-kinds-of-methods/" target="_blank" rel="external">垂直居中</a></li>
<li><a href="http://codepen.io/shshaw/full/gEiDt" target="_blank" rel="external">css完全居中</a></li>
<li><a href="http://www.w3cplus.com/collective-5.html" target="_blank" rel="external">居中之美</a></li>
<li><a href="http://www.zhihu.com/question/35290742#answer-20340542" target="_blank" rel="external">网页中的底部foot定位</a></li>
<li><a href="http://www.webhek.com/css-100-percent-height" target="_blank" rel="external">页面高度100%</a></li>
<li><a href="https://github.com/phoetry/textareaAutoHeight" target="_blank" rel="external">textarea高度自适应</a></li>
<li><a href="http://dotdotdot.frebsite.nl/" target="_blank" rel="external">多行溢出省略</a></li>
<li><a href="http://jinlong.github.io/2015/05/24/css-retina-hairlines/" target="_blank" rel="external">Retina屏1px线</a></li>
<li><a href="https://github.com/philipwalton/flexbugs" target="_blank" rel="external">Flexbugs</a></li>
</ul>
</li>
<li><p><strong>其他</strong></p>
<ul>
<li><a href="http://www.stepday.com/topic/?690" target="_blank" rel="external">IF IE ENDIF条件判断之IE10</a></li>
<li><a href="http://www.zhihu.com/question/20158063" target="_blank" rel="external">Chrome 翻译插件</a></li>
<li><a href="http://blog.netsh.org/posts/website-retina_1779.netsh.html" target="_blank" rel="external">网页retina优化</a></li>
<li><a href="http://segmentfault.com/a/1190000002407912" target="_blank" rel="external">常用meta</a></li>
<li><a href="http://www.cnblogs.com/mq0036/p/3531848.html" target="_blank" rel="external">树状菜单</a></li>
<li><a href="http://www.w3ctrain.com/2015/07/24/comprehensive-guide-when-to-use-em-vs-rem/" target="_blank" rel="external">em vs rem</a></li>
<li><a href="https://github.com/classicemi/blog/issues/3#issuecomment-113861251" target="_blank" rel="external">css vs js</a></li>
<li><a href="http://www.w3cplus.com/solution/index/index.html" target="_blank" rel="external">css解决方案（w3cplus）</a></li>
<li><a href="http://riccardoscalco.github.io/textures/" target="_blank" rel="external">Textures生成纹理</a></li>
<li><a href="http://una.im/CSSgram/" target="_blank" rel="external">CSSgram</a></li>
<li><a href="http://zmoazeni.github.io/csscss/" target="_blank" rel="external">Csscss（检查重复声明等）</a></li>
</ul>
</li>
</ul>
<h4 id="附录四-部分工具资源"><a href="#附录四-部分工具资源" class="headerlink" title="附录四 部分工具资源"></a>附录四 部分工具资源</h4><hr>
<ul>
<li><a href="http://blog.poetries.top/2016/03/14/Emmet%EF%BC%9AHTML-CSS%E4%BB%A3%E7%A0%81%E5%BF%AB%E9%80%9F%E7%BC%96%E5%86%99%E7%A5%9E%E5%99%A8/" target="_blank" rel="external">学会使用Emmet插件快速编码</a></li>
<li><a href="http://blog.poetries.top/2016/09/09/Emmet%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/#more" target="_blank" rel="external">Emmet常用快捷键</a></li>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/sublime-text.md" target="_blank" rel="external">Sublime专题</a></li>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/Sublime%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%80%BB%E7%BB%93.md" target="_blank" rel="external">Sublime常用插件总结</a></li>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/Front-End%20-Develop%20-Tools.md" target="_blank" rel="external">Front-End -Develop -Tools</a></li>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/Tools.md" target="_blank" rel="external">ToolsBox-自己整理的一份工具列表</a></li>
</ul>
<h4 id="附录五-编码规范"><a href="#附录五-编码规范" class="headerlink" title="附录五 编码规范"></a>附录五 编码规范</h4><hr>
<ul>
<li><a href="https://github.com/poetries/mywiki/blob/master/bookmark/%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.md" target="_blank" rel="external">编码规范</a></li>
<li><a href="http://front-end-standards.com/" target="_blank" rel="external">前端规范</a></li>
<li><a href="https://github.com/poetries/mywiki/wiki/web-develop-standard" target="_blank" rel="external">web develop standard</a></li>
<li><a href="http://codecloud.net/5622.html" target="_blank" rel="external">Web 前端开发规范文档</a></li>
<li><a href="http://zhibimo.com/read/Ashu/front-end-style-guide/index.html" target="_blank" rel="external">前端开发规范手册</a></li>
</ul>
<h4 id="附录六-进阶学习"><a href="#附录六-进阶学习" class="headerlink" title="附录六 进阶学习"></a>附录六 进阶学习</h4><hr>
<ul>
<li><a href="http://www.jianshu.com/p/1e638b7da640" target="_blank" rel="external">DOM编程之API学习</a></li>
<li><a href="http://www.jianshu.com/p/1f2314552e23" target="_blank" rel="external">JavaScript基础学习</a></li>
</ul>
<h4 id="附录七-其他资源"><a href="#附录七-其他资源" class="headerlink" title="附录七 其他资源"></a>附录七 其他资源</h4><hr>
<ul>
<li><a href="https://github.com/poetries/mywiki" target="_blank" rel="external">Github上前端学习资源汇总</a></li>
<li><a href="https://github.com/poetries/mywiki/tree/master/front-end" target="_blank" rel="external">WEB 前端开发学习笔记</a></li>
<li><a href="https://github.com/poetries/mywiki/wiki/%E6%94%B6%E9%9B%86%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7" target="_blank" rel="external">前端开发工具箱</a></li>
<li><a href="https://segmentfault.com/a/1190000006689923" target="_blank" rel="external">148个资源让你成为CSS专家</a></li>
<li><a href="http://zh.learnlayout.com/" target="_blank" rel="external">学习CSS布局-经典必看</a></li>
</ul>
<h4 id="附录八-常见问题"><a href="#附录八-常见问题" class="headerlink" title="附录八 常见问题"></a>附录八 常见问题</h4><hr>
<ul>
<li><p>前端指路</p>
<ul>
<li><a href="http://www.w3cplus.com/css/write-to-front-end-developer-interview.html" target="_blank" rel="external">写给前端面试者（w3cplus）</a></li>
<li><a href="http://jiongks.name/blog/how-to-become-a-great-front-end-engineer/" target="_blank" rel="external">如何成为一名卓越的前端工程师（勾三股四博客）</a></li>
<li><a href="http://www.epubit.com.cn/article/144" target="_blank" rel="external">什么是全栈工程师</a></li>
<li><a href="https://uptodate.frontendrescue.org/zh/" target="_blank" rel="external">如何跟上前端开发的最新前沿</a></li>
<li><a href="http://blog.jobbole.com/12749/" target="_blank" rel="external">浏览器的工作原理</a></li>
<li><a href="http://www.zhihu.com/question/20269059#answer-19718763" target="_blank" rel="external">移动前端开发和 Web 前端开发的区别</a></li>
<li><a href="http://segmentfault.com/q/1010000003723038?utm_source=weekly&amp;utm_medium=email&amp;utm_campaign=email_weekly" target="_blank" rel="external">大型网站CSS编写与维护</a></li>
<li><a href="http://segmentfault.com/q/1010000003059724" target="_blank" rel="external">CSS核心技术关键字</a></li>
</ul>
</li>
<li><p>性能/规范/实践</p>
<ul>
<li><a href="http://www.chinaw3c.org/how-to-read-spec-wxx.html" target="_blank" rel="external">如何阅读W3c规范(王晓轩)</a></li>
<li><a href="http://www.chinaw3c.org/how-to-read-spec-gb.html" target="_blank" rel="external">如何阅读W3c规范(高博)</a></li>
<li><a href="https://developer.yahoo.com/performance/rules.html" target="_blank" rel="external">雅虎web性能优化军规</a></li>
<li><a href="http://browserdiet.com/zh/" target="_blank" rel="external">权威前端性能指南</a></li>
<li><a href="http://www.html-js.com/article/Front-end-home-best-practice-in-front-of-the-web-high-performance-CSS" target="_blank" rel="external">高性能css</a></li>
</ul>
</li>
<li><p>一些问答社区</p>
<ul>
<li><a href="https://www.quora.com/" target="_blank" rel="external">quora</a></li>
<li><a href="http://stackoverflow.com/" target="_blank" rel="external">stackoverflow</a></li>
<li><a href="http://www.zhihu.com/" target="_blank" rel="external">知乎</a></li>
<li><a href="http://www.html-js.com/qa" target="_blank" rel="external">前端乱炖问答区</a></li>
<li><a href="http://segmentfault.com/questions/newest" target="_blank" rel="external">segmentfault问答区</a></li>
</ul>
</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><hr>
<ul>
<li><a href="https://github.com/poetries/poetries.github.io/blob/dev/source/_posts/DIV+CSS%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9E%E9%A1%BE.md" target="_blank" rel="external">本文Mardown原文件-欢迎转载</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一部分-HTML&quot;&gt;&lt;a href=&quot;#第一部分-HTML&quot; class=&quot;headerlink&quot; title=&quot;第一部分 HTML&quot;&gt;&lt;/a&gt;第一部分 HTML&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;第一章-职业规划和前景&quot;&gt;&lt;a href=&quot;#第一章-职业规划和前景&quot; class=&quot;headerlink&quot; title=&quot;第一章 职业规划和前景&quot;&gt;&lt;/a&gt;第一章 职业规划和前景&lt;/h4&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;职业方向规划定位：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt;前端开发工程师&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt;网站架构师&lt;/li&gt;
&lt;li&gt;自己创业&lt;/li&gt;
&lt;li&gt;转岗管理或其他
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
      <category term="XHTML" scheme="http://www.poetries.top/tags/XHTML/"/>
    
  </entry>
  
  <entry>
    <title>标准盒子模型和IE盒子模型</title>
    <link href="http://www.poetries.top/2016/09/05/%E6%A0%87%E5%87%86%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%92%8CIE%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
    <id>http://www.poetries.top/2016/09/05/标准盒子模型和IE盒子模型/</id>
    <published>2016-09-05T10:50:32.000Z</published>
    <updated>2016-11-26T10:58:54.818Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标准盒子模型"><a href="#标准盒子模型" class="headerlink" title="标准盒子模型"></a>标准盒子模型</h3><a id="more"></a>
<ul>
<li>盒子模型是css中一个重要的概念，理解了盒子模型才能更好的排版。其实盒子模型有两种，分别是 ie 盒子模型和标准 w3c 盒子模型。他们对盒子模型的解释各不相同，先来看看我们熟知的标准盒子模型</li>
</ul>
<p><img src="http://images.cnblogs.com/cnblogs_com/cchyao/%E6%A0%87%E5%87%86W3C%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%92%8CIE%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8BCSS%E5%B8%83%E5%B1%80%E7%BB%8F%E5%85%B8%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/1.JPG" alt=""></p>
<ul>
<li>从上图可以看到标准 <code>w3c</code> 盒子模型的范围包括 <code>margin</code>、<code>border</code>、<code>padding</code>、<code>content</code>，并且 <code>content</code>部分不包含其他部分</li>
</ul>
<hr>
<h3 id="IE盒子模型"><a href="#IE盒子模型" class="headerlink" title="IE盒子模型"></a>IE盒子模型</h3><p><img src="http://images.cnblogs.com/cnblogs_com/cchyao/%E6%A0%87%E5%87%86W3C%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%92%8CIE%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8BCSS%E5%B8%83%E5%B1%80%E7%BB%8F%E5%85%B8%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/2.JPG" alt=""></p>
<ul>
<li>从上图可以看到 <code>ie</code>盒子模型的范围也包括 <code>margin</code>、<code>border</code>、<code>padding</code>、<code>content</code></li>
<li>和标准 <code>w3c</code> 盒子模型不同的是：<code>ie</code> 盒子模型的 <code>content</code> 部分包含了 <code>border</code>和 <code>padding</code></li>
<li><code>IE</code>盒子模型<code>width</code> = <code>padding</code>+<code>border</code>+<code>内容</code></li>
<li><p>标准盒子模型 = 内容的宽度（不包含<code>border</code>+<code>padding</code>）</p>
</li>
<li><p>例：</p>
</li>
<li><p>一个盒子的   <code>margin</code>为 20px，<code>border</code> 为 1px，<code>padding</code>为 10px，<code>content</code> 的宽为 200px、高为 50px，假如用标准 <code>w3c</code> 盒子模型解释，那么这个盒子需要占据的位置为：宽 <code>20*2+1*2+10*2+200=262px</code>、高 <code>20*2+1*2*10*2+50=112px</code>，盒子的实际大小为：宽 <code>1*2+10*2+200=222px</code>、高 <code>1*2+10*2+50=72px</code>；假如用ie 盒子模型，那么这个盒子需要占据的位置为：宽 <code>20*2+200=240px</code>、高 <code>20*2+50=70px</code>，盒子的实际大小为：宽 <code>200px</code>、高 <code>50px</code></p>
</li>
<li><p>那应该选择哪中盒子模型呢？当然是“标准 <code>w3c</code> 盒子模型”了。怎么样才算是选择了“标准 <code>w3c</code>盒子模型”呢？很简单，就是在网页的顶部加上 <code>doctype</code> 声明。</p>
</li>
<li>假如不加<code>doctype</code> 声明，那么各个浏览器会根据自己的行为去理解网页，即 <code>ie</code>浏览器会采用 <code>ie</code> 盒子模型去解释你的盒子，而 <code>ff</code>会采用标准 w3c 盒子模型解释你的盒子，所以网页在不同的浏览器中就显示的不一样了。</li>
<li>反之，假如加上了 doctype 声明，那么所有浏览器都会采用标准 <code>w3c</code>盒子模型去解释你的盒子，网页就能在各个浏览器中显示一致了。</li>
</ul>
<hr>
<ul>
<li>再用 jquery 做的例子来证实一下</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>你用的盒子模型是？<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span> <span class="attr">src</span>=<span class="string">"jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> sbox = $.boxmodel ? <span class="string">"标准w3c"</span>:<span class="string">"ie"</span>;</div><div class="line"><span class="built_in">document</span>.write(<span class="string">"您的页面目前支持："</span>+sbox+<span class="string">"盒子模型"</span>);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>　上面的代码没有加上 <code>doctype</code> 声明，在 <code>ie</code> 浏览器中显示  <code>ie</code>盒子模型，在 ff 浏览器中显示“标准<code>w3c</code> 盒子模型”。</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html public "-//w3c//dtd xhtml 1.0 transitional//en" "http://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>你用的盒子模型是标准w3c盒子模型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span> <span class="attr">src</span>=<span class="string">"jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="keyword">var</span> sbox = $.boxmodel ? <span class="string">"标准w3c"</span>:<span class="string">"ie"</span>;</div><div class="line"><span class="built_in">document</span>.write(<span class="string">"您的页面目前支持："</span>+sbox+<span class="string">"盒子模型"</span>);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>　代码2 与代码1 唯一的不同的就是顶部加了 <code>doctype</code>声明。在所有浏览器中都显示“标准 <code>w3c</code>盒子模型”</li>
<li>所以为了让网页能兼容各个浏览器，让我们用标准 <code>w3c</code> 盒子模型</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;标准盒子模型&quot;&gt;&lt;a href=&quot;#标准盒子模型&quot; class=&quot;headerlink&quot; title=&quot;标准盒子模型&quot;&gt;&lt;/a&gt;标准盒子模型&lt;/h3&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>学会使用box-sizingCSS布局</title>
    <link href="http://www.poetries.top/2016/09/04/%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8box-sizingCSS%E5%B8%83%E5%B1%80/"/>
    <id>http://www.poetries.top/2016/09/04/学会使用box-sizingCSS布局/</id>
    <published>2016-09-04T09:20:08.000Z</published>
    <updated>2016-11-26T10:58:54.818Z</updated>
    
    <content type="html"><![CDATA[<h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><a id="more"></a>
<ul>
<li>关于<code>CSS</code>重要的一个概念就是CSS盒子模型。它控制着页面这些元素的高度和宽度。盒子模型多少会让人产生一些困惑，尤其当涉及到高度和宽度计算的时候。真正盒子的宽度(在页面呈现出来的宽度)和高度，需要加上一些其它的属性，例如：<ul>
<li><code>padding</code> + <code>border</code> + <code>width</code>= 盒子的宽度</li>
<li><code>padding</code>+ <code>border</code> + <code>height</code> = 盒子的高度</li>
</ul>
</li>
<li>这看起来并不是那么直观，那么我们看一个图：</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/hezi.png" alt=""></p>
<ul>
<li><p>这意味着，如果我们设置一个宽度为<code>200px</code>，而实际呈现的盒子的宽度可能会大于<code>200px</code>(除非没有左右边框和左右补白)。这可能看起来比较怪，<code>CSS</code>设置的宽度仅仅是内容区的宽度，而非盒子的宽度。同样，高度类似</p>
</li>
<li><p>这导致的直接结果是当我们希望页面呈现的盒子的宽度是200px的时候，我们需要减去它的左右边框和左右补白，然后设置为对应的CSS宽度。例如上图，我们设置希望盒子宽度为<code>200px</code>，则需要先减去左右补白各<code>20px</code>，左右边框各<code>1px</code>，然后设置对应的<code>CSS</code>宽度<code>158px</code>。</p>
</li>
</ul>
<ul>
<li>幸运的是，我们有更好的方法达到我们想要的目的</li>
</ul>
<hr>
<h3 id="box-sizing"><a href="#box-sizing" class="headerlink" title="box-sizing"></a>box-sizing</h3><ul>
<li><p>语法：<code>box-sizing:</code>  <code>content-box</code> | <code>border-box</code> | <code>inherit</code>;</p>
</li>
<li><p>与上面不同的是，当你设置<code>box-sizing:border-box</code>以后，这就能达到你想要的目的。例如，上面我们想要一个宽度为<code>200px</code>的盒子，那么我们直接设置宽度为<code>200px</code>。是不是看起来清晰多了。当再设置它的左右边框和左右补白后，它的内容区会自动调整。这可能更直接和一目了然。<code>CSS</code>代码如下：</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">box-sizing</span>: border-box;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#DDD</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/hez2.png" alt=""></p>
<ul>
<li><p>实际上，这更被设计者和开发者推崇</p>
</li>
<li><p>一些开发人员觉得<code>box-sizing</code>使用起来十分方便,所以他们主张通过通用选择器将这个属性应用于每个元素</p>
</li>
<li><p>但这样的观点未免有些偏激,而且还会导致不必要的困难,所以更好的方法是只在实际需要时才使用这个属性</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">     <span class="attribute">margin</span>:<span class="number">0</span>;</div><div class="line">      <span class="attribute">padding</span>:<span class="number">0</span>;</div><div class="line">     <span class="attribute">box-sizing</span>:border-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>写上 <code>box-sizing: border-box</code>; ，设置<code>padding</code>值 也不用担心没有减小宽度值而变形</li>
</ul>
<hr>
<h3 id="box-sizing其它的值"><a href="#box-sizing其它的值" class="headerlink" title="box-sizing其它的值"></a>box-sizing其它的值</h3><ul>
<li><code>content-box</code> <ul>
<li>描述：在宽度和高度之外绘制元素的内边距和边框。</li>
</ul>
</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/box-size-1.jpg" alt=""></p>
<ul>
<li><code>border-box</code><ul>
<li>描述：为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制</li>
</ul>
</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/box-size-2.jpg" alt=""></p>
<ul>
<li><code>inherit</code><ul>
<li>描述：继承 父元素 <code>box-sizing</code>属性的值 </li>
</ul>
</li>
</ul>
<hr>
<h3 id="浏览器兼容性"><a href="#浏览器兼容性" class="headerlink" title="浏览器兼容性"></a>浏览器兼容性</h3><ul>
<li><code>IE8</code>及以上版本支持该属性，<code>Firefox</code> 需要加上浏览器厂商前缀<code>-moz-，</code>对于低版本的<code>IOS</code>和<code>Android</code>浏览器也需要加上<code>-webkit-</code>。实际上，很多<code>reset.css</code>或者<code>normal.css</code>里都包含如下<code>CSS</code>语句，也是比较赞成的用法：</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">*, *<span class="selector-pseudo">:before</span>, *<span class="selector-pseudo">:after</span> &#123;</div><div class="line">　　<span class="attribute">-moz-box-sizing</span>: border-box;</div><div class="line">　　<span class="attribute">-webkit-box-sizing</span>: border-box;</div><div class="line">　　<span class="attribute">box-sizing</span>: border-box;</div><div class="line">　　&#125;</div></pre></td></tr></table></figure>
<h3 id="box-sizing-布局三栏目案例"><a href="#box-sizing-布局三栏目案例" class="headerlink" title="box-sizing 布局三栏目案例"></a>box-sizing 布局三栏目案例</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">		<span class="attribute">height</span>:<span class="number">700px</span>;</div><div class="line">		<span class="attribute">float</span>:left;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span><span class="selector-class">.left</span>&#123;</div><div class="line">		<span class="attribute">width</span>:<span class="number">25%</span>;</div><div class="line">		<span class="attribute">background</span>:red;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span><span class="selector-class">.cent</span>&#123;</div><div class="line">		<span class="attribute">width</span>:<span class="number">50%</span>;</div><div class="line">		<span class="attribute">box-sizing</span>:border-box;<span class="comment">/*可以改变元素以使其宽度包含填充*/</span></div><div class="line">				<span class="comment">/* 现在整个元素,包括填充在内,占页面总宽度的50%,所以元素的组合宽度为100%,这全程它们很好地适应于它们的容器.*/</span></div><div class="line">		<span class="attribute">background</span>:yellow;</div><div class="line">		<span class="attribute">padding</span>:<span class="number">0</span> <span class="number">20px</span>;<span class="comment">/*加了这个会使盒子内容溢出 但是box-sizing很好的自适应了*/</span></div><div class="line">&#125;</div><div class="line"><span class="selector-tag">div</span><span class="selector-class">.right</span>&#123;</div><div class="line">       <span class="attribute">width</span>:<span class="number">25%</span>;</div><div class="line">        <span class="attribute">background</span>:blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cent"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/hh2.png" alt=""></p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/hh1.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;盒子模型&quot;&gt;&lt;a href=&quot;#盒子模型&quot; class=&quot;headerlink&quot; title=&quot;盒子模型&quot;&gt;&lt;/a&gt;盒子模型&lt;/h3&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS 组合选择符用法总结</title>
    <link href="http://www.poetries.top/2016/09/04/CSS%20%E7%BB%84%E5%90%88%E9%80%89%E6%8B%A9%E7%AC%A6%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://www.poetries.top/2016/09/04/CSS 组合选择符用法总结/</id>
    <published>2016-09-04T08:50:32.000Z</published>
    <updated>2016-11-26T10:58:54.806Z</updated>
    
    <content type="html"><![CDATA[<h3 id="组合选择符基本介绍"><a href="#组合选择符基本介绍" class="headerlink" title="组合选择符基本介绍"></a>组合选择符基本介绍</h3><hr>
<a id="more"></a>
<ul>
<li>组合选择符说明了两个选择器直接的关系</li>
<li><code>CSS</code>组合选择符包括各种简单选择符的组合方式</li>
<li>在 <code>CSS3</code> 中包含了四种组合方式<ul>
<li>后代选取器(以空格分隔)</li>
<li>子元素选择器(以大于号分隔）</li>
<li>相邻兄弟选择器（以加号分隔）</li>
<li>普通兄弟选择器（以破折号分隔）</li>
</ul>
</li>
</ul>
<h3 id="后代选取器"><a href="#后代选取器" class="headerlink" title="后代选取器"></a>后代选取器</h3><hr>
<ul>
<li><p>后代选取器匹配所有值得元素的后代元素</p>
</li>
<li><p>实例：</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是通过后代选择器选择的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>002<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是通过后代选择器选择的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</div><div class="line">    <span class="attribute">background</span>:red;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/%E5%90%8E%E4%BB%A3%E9%80%89%E6%8B%A9%E5%99%A8.png" alt=""></p>
<h3 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h3><hr>
<ul>
<li><p>如果您不希望选择任意的后代元素，而是希望缩小范围，只选择某个元素的子元素，请使用子元素选择器</p>
</li>
<li><p><code>html</code>代码的文档树结构如图</p>
</li>
</ul>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/div.png" alt=""></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mainDiv"</span>&gt;</span></div><div class="line">    我是主DIV</div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span>儿子</div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sunzi"</span>&gt;</span>孙子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.mainDiv</span>&#123;</div><div class="line">	<span class="attribute">background</span>:yellow;</div><div class="line">	<span class="attribute">width</span>:<span class="number">100px</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">100px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.sunzi</span>&#123;</div><div class="line">	<span class="attribute">background</span>:red;</div><div class="line">	<span class="attribute">width</span>:<span class="number">40px</span>;</div><div class="line">	<span class="attribute">height</span>:<span class="number">40px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.mainDiv</span> &gt; <span class="selector-tag">div</span>&#123;<span class="attribute">background</span>:green;&#125;</div></pre></td></tr></table></figure>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/%E5%AD%90%E4%BB%A3.png" alt=""></p>
<ul>
<li>然后我们去掉子代选择器，添加一个后代选择器</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.mainDiv</span> <span class="selector-tag">div</span>&#123;</div><div class="line">            <span class="attribute">background-color</span>: red;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>效果</p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/%E5%90%8E%E4%BB%A31.png" alt=""></p>
<ul>
<li>经过上面的结果展示，我们能得到结论:子代选择器~ 和后代选择（空格）的区别：<ul>
<li>子代选择器：只对应用对象的直接相应子节点有效。如实例代码中的儿子<code>div</code></li>
<li>后代选择器：对应用对象内的所有相应子节点都有效。如实例中的儿子<code>div</code>和孙子<code>div</code></li>
</ul>
</li>
</ul>
<h3 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h3><hr>
<ul>
<li>相邻兄弟选择器可选择紧接在另一元素后的元素，且二者有相同父元素</li>
<li>以下实例选取了所有位于 <code>&lt;div&gt;</code> 元素后的第一个 <code>&lt;p&gt;</code> 元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>001<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>002<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>003<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>	</div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是通过相邻兄弟选择器选择的元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> + <span class="selector-tag">p</span>&#123;<span class="attribute">background</span>:red;&#125;</div></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/%E7%9B%B8%E9%82%BB%E5%85%84%E5%BC%9F%E9%80%89%E6%8B%A9%E5%99%A8.png" alt=""></p>
<h3 id="普通相邻兄弟选择器"><a href="#普通相邻兄弟选择器" class="headerlink" title="普通相邻兄弟选择器"></a>普通相邻兄弟选择器</h3><hr>
<ul>
<li>普通兄弟选择器选取所有指定元素的相邻兄弟元素</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>001<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>002<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>003<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>	</div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通相邻兄弟选择器~选择的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通相邻兄弟选择器~选择的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是普通相邻兄弟选择器~选择的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> ~ <span class="selector-tag">p</span>&#123;<span class="attribute">background</span>:red;&#125;</div></pre></td></tr></table></figure>
<p>效果</p>
<p><img src="http://7xq6al.com1.z0.glb.clouddn.com/%E6%99%AE%E9%80%9A%E7%9B%B8%E9%82%BB%E5%85%84%E5%BC%9F%E9%80%89%E6%8B%A9%E5%99%A8.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;组合选择符基本介绍&quot;&gt;&lt;a href=&quot;#组合选择符基本介绍&quot; class=&quot;headerlink&quot; title=&quot;组合选择符基本介绍&quot;&gt;&lt;/a&gt;组合选择符基本介绍&lt;/h3&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="Front-End" scheme="http://www.poetries.top/categories/Front-End/"/>
    
    
      <category term="CSS" scheme="http://www.poetries.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>写给大家看的设计书总结</title>
    <link href="http://www.poetries.top/2016/08/29/%E5%86%99%E7%BB%99%E5%A4%A7%E5%AE%B6%E7%9C%8B%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B9%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://www.poetries.top/2016/08/29/写给大家看的设计书总结/</id>
    <published>2016-08-29T08:20:43.000Z</published>
    <updated>2016-11-26T10:58:54.818Z</updated>
    
    <content type="html"><![CDATA[<p><strong>设计四大基本原则</strong><br><a id="more"></a></p>
<h4 id="亲密性"><a href="#亲密性" class="headerlink" title="亲密性"></a><strong>亲密性</strong></h4><ul>
<li>亲密性原则是指：将相关的项组织在一起，移动这些项，使它们的物理位置相互靠近，这样一来，相关的项将被看作凝聚为一体的一个组</li>
<li>在一个页面上，物理位置的接近就意味着存在关联</li>
<li>亲密性意味着存在关联</li>
<li>如果多个项之间存在很近的亲密性，他们将成为一个视觉单元，而不是很多孤立的元素</li>
<li><strong>亲密的根本目的</strong>：是实现组织性</li>
<li><strong>要避免的问题</strong>：避免一个页面上有太多孤立的元素</li>
</ul>
<h4 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a><strong>对齐</strong></h4><ul>
<li>对齐原则是指：任何元素都不能在页面上随意安放，每一项应当与页面上的每一个内容存在某种视觉联系</li>
<li>一定要坚持一个原则：页面上只使用一种文本对齐；所有文本都左对齐或右对齐或全部居中对齐</li>
<li><strong>对齐的根本目的</strong>：是使页面统一而且有条理</li>
<li><strong>要避免的问题</strong>：<ul>
<li>要避免在页面上混合使用多种文本对齐方式（也就是说，不要将某些文本居中，而另外一些文本右对齐）</li>
<li>要避免居中对齐，有时可以有意地选择这种对齐样式，但是不要把它作为默认选择</li>
</ul>
</li>
</ul>
<h4 id="重复"><a href="#重复" class="headerlink" title="重复"></a><strong>重复</strong></h4><ul>
<li>重复原则指出：设计的某些方面需要在整个作品中重复</li>
<li>重复有助于组织信息，这可以帮助读者浏览各个页面，它有助于将设计中单独的部分统一起来</li>
<li>设计中视觉元素的重复可以将作品中的各部分连在一起，从而统一并增强整个作品</li>
<li><strong>根本目的</strong>：重复的目的就是统一，并增强视觉效果</li>
<li><strong>要避免的问题</strong>：要避免太多地重复一个元素，重复太多会让人讨厌</li>
</ul>
<h4 id="对比"><a href="#对比" class="headerlink" title="对比"></a><strong>对比</strong></h4><ul>
<li>对比原则指出：如果两个项不完全相同，就应当使之不同，而且应当是截然不同</li>
<li>在页面上增加对比能吸引人的眼球</li>
<li><strong>根本目的</strong>：对比的根本目的有两方面，这两个方面相辅相成，无法分开。一个目的是增强页面的效果，另一个目的是有助于信息的组织</li>
<li><strong>要避免的问题</strong>：不要犹豫，如果你想形成对比，就加大力度。要避免使用两种或多种类似的字体</li>
</ul>
<p>（完）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;设计四大基本原则&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Designed" scheme="http://www.poetries.top/categories/Designed/"/>
    
    
      <category term="设计" scheme="http://www.poetries.top/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
</feed>
